Need to install the following packages:
get-graphql-schema@2.1.2
Ok to proceed? (y) 
"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

type AccountingSystemSyncLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type AccountingSystemSyncLogPageData {
  data: [AccountingSystemSyncLog]
  total: Int
  pagination: Pagination
}

type AccumulatedDepositRewardLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  depositThreshold: Float
  currentTotalDeposit: Float
  reward: String
  rewardImageUrls: [String]
  isRewarded: Boolean
  targetCustomerId: ID
  targetShopAffiliateId: ID
  memberId: ID
  accumulatedDepositRewardMilestoneId: ID
  targetCustomer: Customer
  targetShopAffiliate: ShopAffiliate
}

type AccumulatedDepositRewardLogPageData {
  data: [AccumulatedDepositRewardLog]
  total: Int
  pagination: Pagination
}

type AccumulatedDepositRewardMilestone {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  depositThreshold: Float
  reward: String
  accountTypeApply: EAccountTypeApply
}

input AccumulatedDepositRewardMilestoneInput {
  id: String
  depositThreshold: Float
  reward: String
  accountTypeApply: EAccountTypeApply
}

type AccumulatedDepositRewardMilestonePageData {
  data: [AccumulatedDepositRewardMilestone]
  total: Int
  pagination: Pagination
}

type AchievementRewardLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  thresholdValue: Mixed
  currentValue: Mixed
  reward: String
  rewardType: EAchievementRewardType
  balanceAwarded: Mixed
  achievementType: EAchievementType
  isRewarded: Boolean
  rewardImageUrls: [String]
  targetCustomerId: ID
  targetShopAffiliateId: ID
  targetShopAffiliate: ShopAffiliate
  targetCustomer: Customer
  memberId: ID
  referralShopAffiliateRewardMilestoneId: ID
  accumulatedDepositRewardMilestoneId: ID
}

type AchievementRewardLogPageData {
  data: [AchievementRewardLog]
  total: Int
  pagination: Pagination
}

type Action {
  """Loại hành động NONE,WEBSITE,ORDER,PRODUCT,SUPPORT_TICKET"""
  type: String

  """Đường dẫn website"""
  link: String

  """Mã Order"""
  orderId: ID

  """Mã sản phẩm"""
  productId: ID

  """Mã ticket"""
  ticketId: ID
}

input ActionInput {
  """Loại hành động NONE,WEBSITE,ORDER,PRODUCT,SUPPORT_TICKET"""
  type: String!

  """Đường dẫn website"""
  link: String

  """Mã Order"""
  orderId: ID

  """Mã sản phẩm"""
  productId: ID

  """Mã ticket"""
  ticketId: ID
}

type Activity {
  id: String
  username: String
  message: String
  createdAt: DateTime
  updatedAt: DateTime
}

type ActivityPageData {
  data: [Activity]
  total: Int
  pagination: Pagination
}

type AdditionalService {
  id: String

  """ Tên"""
  name: String

  """ Lựa chọn"""
  options: [AdditionalServiceOption]

  """ Bắt buộc"""
  required: Boolean

  """ Số lượng tối thiểu"""
  minRequiredQty: Int

  """ Cho phép chọn nhiều"""
  isMultiEnable: Boolean

  """ Không giới hạn số lượn"""
  isMaxQtyUnlimited: Boolean

  """ Số lượng tối đa"""
  maxQty: Int
}

input AdditionalServiceInput {
  """Mã dịch vụ đi kèm"""
  _id: ID

  """ Tên"""
  name: String!

  """ Lựa chọn"""
  options: [AdditionalServiceOptionInput]

  """ Bắt buộc"""
  required: Boolean!

  """ Số lượng tối thiểu"""
  minRequiredQty: Int

  """ Cho phép chọn nhiều"""
  isMultiEnable: Boolean

  """ Không giới hạn số lượn"""
  isMaxQtyUnlimited: Boolean

  """ Số lượng tối đa"""
  maxQty: Int
}

type AdditionalServiceItem {
  """ID lựa chọn dịch vụ bổ sung gốc"""
  additionalServiceId: ID

  """Tên dịch vụ"""
  name: String

  """Lựa chọn """
  options: [AdditionalServiceOptionItem]
}

input AdditionalServiceItemInput {
  """ID lựa chọn dịch vụ bổ sung gốc"""
  additionalServiceId: ID
  options: [AdditionalServiceOptionItemInput]
}

type AdditionalServiceOption {
  id: String

  """Tên"""
  name: String

  """Giá"""
  price: Float
}

input AdditionalServiceOptionInput {
  _id: ID

  """Tên"""
  name: String

  """Giá"""
  price: Float
}

type AdditionalServiceOptionItem {
  """ID lựa chọn dịch vụ bổ sung gốc"""
  additionalServiceOptionId: ID

  """tên"""
  name: String

  """giá"""
  price: Float
}

input AdditionalServiceOptionItemInput {
  """ID lựa chọn dịch vụ bổ sung gốc"""
  additionalServiceOptionId: ID
}

input AddProductWithinDirectSubordinatesProductSalesBonusPolicyInput {
  directSubordinatesProductSalesBonusPolicyId: String!
  productId: String!
  point: Int
}

input AddProductWithinIndividualProductSalesBonusPolicyInput {
  individualProductSalesBonusPolicyId: String!
  productId: String!
  point: Int
}

input AddProductWithinProductCommissionPolicyInput {
  productCommissionPolicyId: String!
  productId: String!
}

input AddProductWithinProductSalesBonusPolicyInput {
  productSalesBonusPolicyId: String!
  productId: String!
  point: Int
}

input AddProductWithinRecurringProductCommissionPolicyInput {
  productCommissionPolicyId: String!
  productId: String!
}

type Address {
  id: String
  name: String
  addressType: EAddressType
  rootId: String
  provider: Mixed
  parentAddressId: ID
  parentRootId: String
  parentProvider: Mixed
  province: String
  provinceId: String
  district: String
  districtId: String
  ward: String
  wardId: String
  createdAt: DateTime
  updatedAt: DateTime
}

type AddressBook {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Họ tên người đại diện liên lạc ở địa chỉ này"""
  fullName: String

  """Mã globalCustomer"""
  globalCustomerId: String

  """GlobalCustomer"""
  globalCustomer: GlobalCustomer

  """Sô điện thoại"""
  internationalPhone: String

  """Địa chỉ"""
  address: Place

  """Tùy chọn mặc định"""
  isDefault: Boolean
}

type AddressBookPageData {
  data: [AddressBook]
  total: Int
  pagination: Pagination
}

type AddressDelivery {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã địa điểm"""
  code: String

  """Tên giao nhận"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Hiệu lực"""
  activated: Boolean

  """Cửa hàng"""
  member: Member
}

type AddressDeliveryImportingLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type AddressDeliveryImportingLogPageData {
  data: [AddressDeliveryImportingLog]
  total: Int
  pagination: Pagination
}

type AddressDeliveryPageData {
  data: [AddressDelivery]
  total: Int
  pagination: Pagination
}

type AddressPageData {
  data: [Address]
  total: Int
  pagination: Pagination
}

type AddressStorehouse {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã kho"""
  code: String

  """Tên kho"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ kho"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Hiệu lực"""
  activated: Boolean

  """Cho phép giao"""
  allowPickup: Boolean

  """vĩ độ"""
  latitude: Float

  """kinh độ"""
  longitude: Float

  """Cửa hàng"""
  member: Member
}

type AddressStorehouseImportingLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type AddressStorehouseImportingLogPageData {
  data: [AddressStorehouseImportingLog]
  total: Int
  pagination: Pagination
}

type AddressStorehousePageData {
  data: [AddressStorehouse]
  total: Int
  pagination: Pagination
}

input AddServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput {
  individualServiceContractTypeSalesBonusPolicyId: String!
  serviceContractTypeId: String!
  point: Int
}

input AddServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput {
  recurringServiceContractTypeCommissionPolicyId: String!
  serviceContractTypeId: String!
  point: Int
}

enum AdjustType {
  INC
  DEC
}

enum AdjustUnit {
  PERCENT
  AMOUNT
}

type AdminNotification {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tiêu đề"""
  title: String

  """Tin nhắn"""
  body: String

  """Hình ảnh"""
  image: String

  """Lịch sử gửi"""
  logs: [NotifySendLog]

  """Hành động khi click"""
  action: Action
}

type AdminNotificationPageData {
  data: [AdminNotification]
  total: Int
  pagination: Pagination
}

type Affiliate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  phone: String
  code: String
  avatar: String
  globalCustomerId: String
  totalSales: Int
  recruitedNumber: Int
  isActive: Boolean
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  status: String

  """Tổng hoa hồng đã rút thành công"""
  withdrawalApprovedCommission: Mixed

  """Tổng hoa đang rút"""
  withdrawalPendingCommission: Mixed

  """Tổng hoa hồng rút bị từ chối"""
  withdrawalCanceledCommission: Mixed

  """Tổng hoa hồng hợp lệ"""
  approvedCommission: Mixed

  """Tổng hoa hồng đang chờ"""
  pendingCommission: Mixed

  """Tổng hoa hồng đã bị hủy"""
  canceledCommission: Mixed

  """Tổng hoa hồng"""
  totalCommission: Mixed
}

type AffiliateConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  name: String

  """Kiểu cấp đối tác FIXED,UNLIMITED"""
  treeType: String

  """Điều khoản"""
  terms: String
  introduction: String
  fixedConfig: FixedConfig

  """Thu phí hoặc không thu phí"""
  shouldCollectFee: Boolean

  """Phí"""
  fee: Float

  """Loại thời hạn của đối tác"""
  durationType: AffiliateConfigDurationType

  """Thời hạn hoạt động của đối tác (ngày)"""
  durationOfDay: Int

  """Áp dụng chính sách thưởng giới thiệu"""
  shouldApplyReferralCommissionPolicy: Boolean

  """Cho phép tự động duyệt đối tác"""
  allowAutomaticApprovedShopAffiliateRequest: Boolean

  """ Bắt buộc nhập mã giới thiệu khi yêu cầu cộng tác"""
  requiredReferralCodeShopAffiliateRequest: Boolean

  """Cho phép hiển thị thông tin người giới thiệu"""
  allowDisplayReferralInformation: Boolean

  """Thanh toán phí đối tác qua MbBank"""
  shouldPayByMbBank: Boolean

  """Số tài khoản MbBank"""
  mbBankAccountNumber: String

  """Tên tài khoản MbBank"""
  mbBankAccountName: String
  wordsDisplayed: ShopAffiliateConfigWordsDisplayed
  policiesAllowed: ShopAffiliateConfigPoliciesAllowed
  affiliateRequestConfig: AffiliateRequestConfig
  shopAffiliateWalletConfig: ShopAffiliateConfigShopAffiliateWalletConfig
  affiliateLevelConfigs: [AffiliateLevelItemConfig]
}

enum AffiliateConfigDurationType {
  LIMITED
  UNLIMITED
}

type AffiliateConfigPageData {
  data: [AffiliateConfig]
  total: Int
  pagination: Pagination
}

enum AffiliateConfigTreeType {
  FIXED
  UNLIMITED
}

input AffiliateLevelConditionDetailInput {
  GT: Float
  GTE: Float
}

type AffiliateLevelConditionDetailType {
  GT: Float
  GTE: Float
}

input AffiliateLevelConditionInput {
  TOTAL_BRANCH_REVENUE: AffiliateLevelConditionDetailInput
  TOTAL_BRANCH_ORDER: AffiliateLevelConditionDetailInput
  TOTAL_BRANCH_PRODUCT: AffiliateLevelConditionDetailInput
  AND: [AffiliateLevelConditionInput]
  OR: [AffiliateLevelConditionInput]
}

type AffiliateLevelConditionType {
  TOTAL_BRANCH_REVENUE: AffiliateLevelConditionDetailType
  TOTAL_BRANCH_ORDER: AffiliateLevelConditionDetailType
  TOTAL_BRANCH_PRODUCT: AffiliateLevelConditionDetailType
  AND: [AffiliateLevelConditionType]
  OR: [AffiliateLevelConditionType]
}

type AffiliateLevelConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  memberId: ID
  configs: [AffiliateLevelItemConfig]
}

type AffiliateLevelDiscountPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  memberId: ID
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime

  """Có được nhận thưởng chênh lệch chiết khấu cấp bậc không?"""
  isEligibleForLevelDiscountCommission: Boolean

  """Cấp bậc tối đa được nhận thưởng chênh lệch chiết khấu cấp bậc"""
  maxLevelEligibleForLevelDiscountCommission: Int

  """số đơn vị làm tròn giá trị sau khi chiết khấu."""
  roundingAdjustmentUnit: Int

  """Doanh thu ca nhân tối thiểu để có thể đạt được thưởng chênh lệch"""
  minRevenueEligibleForLevelDiscountCommission: Int
  productWithinAffiliateLevelDiscountPolicies: [ProductWithinAffiliateLevelDiscountPolicy]
}

type AffiliateLevelDiscountPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type AffiliateLevelDiscountPolicyLogPageData {
  data: [AffiliateLevelDiscountPolicyLog]
  total: Int
  pagination: Pagination
}

type AffiliateLevelDiscountPolicyPageData {
  data: [AffiliateLevelDiscountPolicy]
  total: Int
  pagination: Pagination
}

type AffiliateLevelItemConfig {
  level: Int
  title: String
  condition: Mixed
}

input AffiliateLevelItemConfigInput {
  level: Int!
  title: String!
  condition: AffiliateLevelConditionInput!
}

type AffiliatePageData {
  data: [Affiliate]
  total: Int
  pagination: Pagination
}

type AffiliateRequestConfig {
  """Cho phép tự động duyệt đối tác """
  allowAutomaticApprovedShopAffiliateRequest: Boolean

  """Cho phép hiển thị thông tin người giới thiệu"""
  allowDisplayReferralInformation: Boolean
  email: BaseField
  citizenId: BaseField
  address: BaseField
  referralCode: BaseField
  bank: BaseField
  taxCode: BaseField
}

input AffiliateRequestConfigInput {
  """Cho phép tự động duyệt đối tác """
  allowAutomaticApprovedShopAffiliateRequest: Boolean

  """Cho phép hiển thị thông tin người giới thiệu"""
  allowDisplayReferralInformation: Boolean
  email: BaseFieldInput
  citizenId: BaseFieldInput
  address: BaseFieldInput
  referralCode: BaseFieldInput
  bank: BaseFieldInput
  taxCode: BaseFieldInput
}

type Agency {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  email: String
  name: String
  code: String
  phone: String
  isActivated: Boolean
  businessType: EAgencyBusinessType
  domain: String
  agencyConfig: AgencyConfig
}

type AgencyConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  SMTPConfig: AgencyConfigSMTP
  name: String
  authenticationCustomerConfig: AgencyConfigAuthenticationCustomer
  domainConfig: AgencyConfigDomain
  manychatConfig: AgencyConfigManychat
  memberConfig: AgencyConfigMember
  minigameConfig: AgencyConfigMinigame
  paymentConfig: AgencyConfigPayment
}

type AgencyConfigAuthenticationCustomer {
  registerRequireOTP: Boolean
  registerFakeOTPAfterSecond: Int
}

input AgencyConfigAuthenticationCustomerInput {
  registerRequireOTP: Boolean
  registerFakeOTPAfterSecond: Int
}

type AgencyConfigDomain {
  domain: String
  minigameDomainFrontEnd: String
  dashboardAgencyDomain: String
  dashboardShopDomain: String
}

input AgencyConfigDomainInput {
  domain: String
  minigameDomainFrontEnd: String
  dashboardAgencyDomain: String
  dashboardShopDomain: String
}

type AgencyConfigManychat {
  isActivated: Boolean
  suggestCustomFields: [AgencyConfigManychatSuggestCustomField]
  suggestFlows: [AgencyConfigManychatSuggestFlow]
}

input AgencyConfigManychatInput {
  isActivated: Boolean
  suggestCustomFields: [AgencyConfigManychatSuggestCustomFieldInput]
  suggestFlows: [AgencyConfigManychatSuggestFlowInput]
}

type AgencyConfigManychatSuggestCustomField {
  customerDataKey: ECustomerDataKey
  name: String
  type: ECustomFieldType
  description: String
}

input AgencyConfigManychatSuggestCustomFieldInput {
  customerDataKey: ECustomerDataKey
  name: String
  type: ECustomFieldType
  description: String
}

type AgencyConfigManychatSuggestFlow {
  name: String
  content: String
}

input AgencyConfigManychatSuggestFlowInput {
  name: String
  content: String
}

type AgencyConfigMember {
  allowRegister: Boolean
  allowRemoveAccount: Boolean
}

input AgencyConfigMemberInput {
  allowRegister: Boolean
  allowRemoveAccount: Boolean
}

type AgencyConfigMinigame {
  isActivated: Boolean
  applicationId: String
  applicationApiKey: String
  applicationName: String
}

input AgencyConfigMinigameInput {
  isActivated: Boolean
  applicationApiKey: String
}

type AgencyConfigPageData {
  data: [AgencyConfig]
  total: Int
  pagination: Pagination
}

type AgencyConfigPayment {
  banks: [AgencyConfigPaymentBank]
}

type AgencyConfigPaymentBank {
  isAllowed: Boolean
  bank: EBank
  accountBankNumber: String
  accountBankName: String
  terminalId: String
}

input AgencyConfigPaymentBankInput {
  isAllowed: Boolean
  bank: EBank
  accountBankNumber: String
  accountBankName: String
}

input AgencyConfigPaymentInput {
  banks: [AgencyConfigPaymentBankInput]
}

type AgencyConfigSMTP {
  isActivatedSendMail: Boolean
  mailSender: String
  passwordSender: String
}

input AgencyConfigSMTPInput {
  isActivatedSendMail: Boolean
  mailSender: String
  passwordSender: String
}

type AgencyContract {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  amountDaysShopUseFreeTier: Mixed
  monthlyMaintenanceFee: Mixed
  packageSubscriptionDiscountPercentage: Mixed
  isActivated: Boolean
}

type AgencyContractPageData {
  data: [AgencyContract]
  total: Int
  pagination: Pagination
}

type AgencyManageMember {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  agency: Agency
  memberId: ID
  member: Member
}

type AgencyManageMemberPageData {
  data: [AgencyManageMember]
  total: Int
  pagination: Pagination
}

type AgencyMemberBill {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  code: String
  dueAt: DateTime
  paidAt: DateTime
  agencyId: ID
  agency: Agency
  memberId: ID
  member: Member
  agencyUserId: ID
  agencyUser: AgencyUser
  totalPrice: Mixed
  status: EAgencyMemberBillStatus
  paymentQR: String
  paymentStatus: EAgencyMemberBillPaymentStatus
  paymentMethod: EAgencyMemberBillPaymentMethod
  type: EAgencyMemberBillType
  creatorType: EAgencyMemberBillCreatorType
  agencyMemberBillItems: [AgencyMemberBillItem]
}

type AgencyMemberBillItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  memberId: ID
  quantity: Int
  totalPrice: Mixed
  name: String
  price: String
  description: String
  packageSubscriptionType: EPackageSubscriptionLogType
  packageSubscriptionId: ID
  packageSubscriptionName: String
  agencyMemberBillId: ID
  packageSubscriptionImageUrl: String
  packageSubscriptionDescription: String
  packageSubscriptionDiscountAmount: Mixed
  packageSubscriptionDiscountPercentage: Mixed
  packageSubscriptionDiscountDurationAmount: Int
  packageSubscriptionDiscountDurationUnit: EDurationUnitPackageSubscription
  agencyMemberBillItemType: EAgencyMemberBillItemType
}

type AgencyMemberBillItemPageData {
  data: [AgencyMemberBillItem]
  total: Int
  pagination: Pagination
}

type AgencyMemberBillPageData {
  data: [AgencyMemberBill]
  total: Int
  pagination: Pagination
}

input AgencyMemberBillToSuccessInput {
  agencyMemberBillId: ID!
}

type AgencyPageData {
  data: [Agency]
  total: Int
  pagination: Pagination
}

type AgencyUser {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  agency: Agency
  isOwner: Boolean
  email: String
  name: String
  phone: String
  username: String
  password: String
}

type AgencyUserPageData {
  data: [AgencyUser]
  total: Int
  pagination: Pagination
}

type AhamoveConfig {
  """Đã kích hoạt"""
  isActivated: Boolean

  """Đã kết nối"""
  isConnected: Boolean

  """Dữ liệu phụ"""
  meta: Mixed

  """Tên của tài khoản sử dụng cho ahamove"""
  name: String

  """Tính phí ship theo ahamove ?"""
  isCalculateShipFeeByAhamove: Boolean

  """Số điện thoại sử dụng cho ahamove"""
  phoneNumber: String

  """Địa chỉ"""
  address: String

  """Vĩ độ"""
  lat: Float

  """Kinh độ"""
  lng: Float

  """Mã quốc gia (Mặc định : VN)"""
  countryCode: String

  """Nhưng dịch vụ cho phép người dùng chọn"""
  approvalServices: [String]
}

input AhamoveConfigInput {
  """Đã kích hoạt"""
  isActivated: Boolean

  """Tên của tài khoản sử dụng cho ahamove"""
  name: String

  """Số điện thoại sử dụng cho ahamove"""
  phoneNumber: String

  """Địa chỉ"""
  address: String

  """Tính phí ship theo ahamove ?"""
  isCalculateShipFeeByAhamove: Boolean

  """Vĩ độ"""
  lat: Float

  """Kinh độ"""
  lng: Float

  """Mã quốc gia (Mặc định : VN)"""
  countryCode: String

  """Nhưng dịch vụ cho phép người dùng chọn"""
  approvalServices: [String]
}

type AhamoveDeliveryService {
  id: String
  name: String
  descriptionViVn: String
  iconUrl: String
  mapIconUrl: String
  requests: [AhamoveDeliveryServiceRequest]
}

type AhamoveDeliveryServiceRequest {
  id: String
  name: String
  nameViVn: String
  descriptionViVn: String
  iconUrl: String
  options: [AhamoveDeliveryServiceRequestOption]
  tierList: [AhamoveDeliveryServiceRequestTier]
}

type AhamoveDeliveryServiceRequestOption {
  code: String
  nameViVn: String
  selectable: String
}

type AhamoveDeliveryServiceRequestTier {
  code: String
  nameViVn: String
  selectable: String
  priceDescriptionViVn: String
  descriptionViVn: String
  imgUrl: String
}

type AhamovePromotion {
  id: String
  desc: String
  content: String
  image: String
  isHtmlContent: Boolean
  valid: Boolean
  discount: Float
  minItemFee: Float
  remainingUse: Float
}

type AmountByPlatform {
  platform: EPlatform
  amount: Int
}

type amountDetail {
  level: Int
  amount: Float
}

type AnalyticConfig {
  """Cấu hình google analytic"""
  googleAnalytic: String

  """Cấu hình facebook Pixel"""
  facebookPixel: String
}

input AnalyticConfigInput {
  """Cấu hình google analytic"""
  googleAnalytic: String

  """Cấu hình facebook Pixel"""
  facebookPixel: String
}

type ApiTracking {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ApiTrackingPageData {
  data: [ApiTracking]
  total: Int
  pagination: Pagination
}

input ApplicationConfigMbBankAccountInput {
  mbBankAccountNumber: String!
  mbBankAccountName: String!
}

type ApplicationMember {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên api key"""
  name: String

  """Api key"""
  apiKey: String

  """Shop ID"""
  memberId: String

  """Số lần gọi api key"""
  count: Int

  """Kích hoạt"""
  isActivated: Boolean

  """URL webhook"""
  url: String
}

type ApplicationMemberPageData {
  data: [ApplicationMember]
  total: Int
  pagination: Pagination
}

type ApplicationMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  name: String
  username: String
  email: String
  webhookUrl: String
  ownerId: String
  mbBankAccountNumber: String
  mbBankAccountName: String
  defaultTrialDurationOfDay: Int
  isActiveTrial: Boolean
  isOwner: Boolean
}

type ApplicationMinigameStatisticMerchantCreateMinigame {
  id: String
  name: String
  avatar: String
  createdAt: DateTime
  totalMinigame: Mixed
}

type ApplicationMinigameStatisticMerchantCreateMinigamePageData {
  data: [ApplicationMinigameStatisticMerchantCreateMinigame]
  total: Int
  pagination: Pagination
}

type ApplicationMinigameStatisticMerchantMostPlayers {
  id: String
  name: String
  avatar: String
  createdAt: DateTime
  totalPlayer: Mixed
}

type ApplicationMinigameStatisticMerchantMostPlayersPageData {
  data: [ApplicationMinigameStatisticMerchantMostPlayers]
  total: Int
  pagination: Pagination
}

type ApplicationMinigameStatisticMinigameMostPlayers {
  id: String
  name: String
  type: String
  isActive: Boolean
  merchantName: String
  createdAt: String
  totalVoucherUsed: Int
  totalVoucherAwarded: Int
  totalPlayer: Int
  totalPlayerReceivedVoucher: Int
  totalPlayerUsedVoucher: Int
  totalPlayerShareCampaign: Int
}

type ApplicationMinigameStatisticMinigameMostPlayersPageData {
  data: [ApplicationMinigameStatisticMinigameMostPlayers]
  total: Int
  pagination: Pagination
}

type ApplicationStatisticsMinigameOverview {
  totalMerchant: Int
  totalPricingMerchant: Mixed
  totalNewMerchant: Int
  totalPlayer: Int
  totalRevenue: Mixed
}

type Area {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên khu vực"""
  name: String

  """Slug khu vực"""
  slug: String

  """Độ ưu tiên"""
  priority: Int

  """Hình ảnh khu vực"""
  image: String
}

type AreaPageData {
  data: [Area]
  total: Int
  pagination: Pagination
}

type AuditLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type AuditLogPageData {
  data: [AuditLog]
  total: Int
  pagination: Pagination
}

type AuthMinigame {
  accessToken: String
}

type AutoIssueInvoiceConfig {
  isAutoIssueInvoice: Boolean
  triggerIssueInvoiceForOrderType: ETriggerTypeIssueInvoiceForOrder
  triggerIssueInvoiceForServiceContractType: ETriggerTypeIssueInvoiceForServiceContract
  isAutoSignInvoice: Boolean
}

input AutoIssueInvoiceConfigInput {
  isAutoIssueInvoice: Boolean
  triggerIssueInvoiceForOrderType: ETriggerTypeIssueInvoiceForOrder
  triggerIssueInvoiceForServiceContractType: ETriggerTypeIssueInvoiceForServiceContract
  isAutoSignInvoice: Boolean
}

type Bank {
  """Tên ngân hàng"""
  bankName: String

  """Tên ngân hàng"""
  bankBin: String

  """Tên chủ tk"""
  ownerName: String

  """Số tài khoản ngân hàng"""
  bankNumber: String

  """Chi nhánh"""
  branch: String

  """Ghi chú cho KH"""
  note: String

  """Kích hoạt"""
  active: Boolean

  """TerminalID của MBBank"""
  mbTerminalId: String

  """Đoạn mã generate QR"""
  qrCode: String
}

input BankInput {
  """Tên ngân hàng"""
  bankName: String

  """Bank Bin"""
  bankBin: String

  """Tên chủ tk"""
  ownerName: String

  """Số tài khoản ngân hàng"""
  bankNumber: String

  """Chi nhánh"""
  branch: String

  """Ghi chú cho KH"""
  note: String

  """Kích hoạt"""
  active: Boolean

  """TerminalID của MBBank"""
  mbTerminalId: String
}

type Banner {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Hình ảnh"""
  image: String

  """Tiêu đề"""
  title: String

  """Mô tả tiêu đề"""
  subtitle: String

  """Loại hành động WEBSITE,PRODUCT,VOUCHER,SHOP,NONE"""
  actionType: String

  """Đường dẫn website"""
  link: String

  """Mã sản phẩm"""
  productId: ID

  """Mã voucher"""
  voucherId: ID

  """Hiển thị công khai"""
  isPublic: Boolean

  """Ưu tiên"""
  priority: Int

  """Mã cửa hàng """
  memberId: ID

  """Vi tri banner"""
  position: String
  shop: Shop
  product: Product
  voucher: ShopVoucher
}

type BannerPageData {
  data: [Banner]
  total: Int
  pagination: Pagination
}

type BaseField {
  title: String
  isDisplay: Boolean
  isRequire: Boolean
}

input BaseFieldInput {
  title: String
  isDisplay: Boolean
  isRequire: Boolean
}

type Branch {
  id: String

  """Tên chi nhánh"""
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type BranchPageData {
  data: [Branch]
  total: Int
  pagination: Pagination
}

type BranchShopAffiliateInformation {
  totalShopAffiliateInBranchShopAffiliateCount: Int
  highestBranchShopAffiliateHeight: Int
  totalDirectShopAffiliateInBranchShopAffiliateCount: Int
  totalChildShopAffiliateInBranchHaveOrderCount: Int
  latestTimeChildShopAffiliateJoinBranch: DateTime
}

enum BulkyTier {
  TIER_1
  TIER_2
  TIER_3
  TIER_4
  TIER_MAX
}

type CarrierWallet {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  providerCarrier: EProviderCarrier

  """Reference to GoShipSetting"""
  goShipSettingId: ID

  """Reference to GoShipShopConfig, if applicable"""
  goShipShopConfigId: ID

  """Tổng số dư trong ví"""
  totalBalance: Mixed

  """Số dư khả dụng (có thể sử dụng)"""
  availableBalance: Mixed

  """Số dư đã giữ (đã đặt cọc hoặc giữ cho các giao dịch đang chờ xử lý)"""
  reservedBalance: Mixed

  """Reference to Member, if applicable"""
  memberId: ID

  """Reference to Agency, if applicable"""
  agencyId: ID
}

type CarrierWalletPageData {
  data: [CarrierWallet]
  total: Int
  pagination: Pagination
}

type CarrierWalletTransaction {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Reference to CarrierWallet"""
  carrierWalletId: ID

  """Loại giao dịch ví"""
  carrierWalletTransactionType: ECarrierWalletTransactionType

  """Reference to Shipment if applicable"""
  shipmentId: ID

  """Số tiền giao dịch"""
  amount: Mixed

  """Mô tả giao dịch, có thể là thông tin chi tiết về giao dịch"""
  log: String
}

type CarrierWalletTransactionPageData {
  data: [CarrierWalletTransaction]
  total: Int
  pagination: Pagination
}

type Category {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên quản lý danh mục"""
  memberId: ID

  """Tên danh mục"""
  name: String

  """Mã danh mục"""
  code: String

  """Danh mục sản phẩm chính"""
  isPrimary: Boolean

  """Mã sản phẩm"""
  productIds: [ID]

  """Độ ưu tiên"""
  priority: Int

  """Kích hoạt"""
  hidden: Boolean
  products: [Product]
  display: CategoryDisplay
  imageUrl: String
}

type CategoryDisplay {
  WEB: CategoryDisplayPlatform
  APP: CategoryDisplayPlatform
  ZALO_MINI_APP: CategoryDisplayPlatform
}

input CategoryDisplayInput {
  WEB: CategoryDisplayPlatformInput
  APP: CategoryDisplayPlatformInput
  ZALO_MINI_APP: CategoryDisplayPlatformInput
}

type CategoryDisplayPlatform {
  isActivated: Boolean
  accountTypes: [EAccountTypeDisplayCategory]
}

input CategoryDisplayPlatformInput {
  isActivated: Boolean
  accountTypes: [EAccountTypeDisplayCategory]
}

type CategoryLabel {
  category: InvoiceCategory
  label: String
}

type CategoryLabelMetadata {
  T: String
  D: String
  L: String
  M: String
  N: String
  B: String
  G: String
  H: String
  X: String
}

type CategoryPageData {
  data: [Category]
  total: Int
  pagination: Pagination
}

type ChartMinigame {
  labels: [Mixed]
  values: [Mixed]
}

type ChatbotStory {
  """Mã trang"""
  pageId: String

  """Mã câu chuyện"""
  storyId: String

  """Tên câu chuyện"""
  name: String

  """Câu chuyện bắt đầu"""
  isStarted: Boolean

  """Sử dụng đường dẫn"""
  isUseRef: Boolean

  """Từ khoá đường dẫn"""
  ref: String

  """Tin nhắn"""
  message: String

  """Tiêu đề nút"""
  btnTitle: String

  """Loại kịch bản TEXT,GENERIC"""
  type: String

  """Hình ảnh"""
  image: String
}

input ChatbotStoryInput {
  name: String
  ref: String
  message: String
  btnTitle: String
  type: String!
  image: String
}

type CodeTypeLabelMetadata {
  C: String
  K: String
}

type Collaborator {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """mã cộng tác viên"""
  code: String

  """Tên cộng tác viên"""
  name: String

  """Số điện thoại"""
  phone: String

  """Chủ shop"""
  memberId: ID

  """khách hàng"""
  customerId: ID

  """Mã giới thiệu"""
  shortCode: String

  """Lượt click"""
  clickCount: Int

  """Lượt like"""
  likeCount: Int

  """Lượt share"""
  shareCount: Int

  """Lượt comment"""
  commentCount: Int

  """Lượt tương tác"""
  engagementCount: Int

  """Trạng thái PENDING,ACTIVE,BLOCKED"""
  status: String
  member: Member
  customer: Customer
  commissionStats(fromDate: String, toDate: String): CollaboratorCommissionStats
  orderStats(fromDate: String, toDate: String): CollaboratorOrderStats

  """Đường dẫn giới thiệu"""
  shortUrl: String
}

type CollaboratorCampaign {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chiến dịch"""
  code: String

  """Tên chi ến dịch"""
  name: String

  """Tiêu đề"""
  title: String

  """Nội dung"""
  content: String

  """Hash Tags"""
  hashtags: [String]

  """Hình ảnh"""
  image: String

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Danh sách chủ shop id được áp dụng"""
  memberIds: [ID]

  """Chi nhánh áp dụng"""
  branchId: ID

  """Sản phẩm áp dụng chiến dịch"""
  productId: ID

  """Trạng thái đăng"""
  isPublish: Boolean

  """Điểm ghi nhận"""
  point: Float
  product: Product
}

type CollaboratorCampaignPageData {
  data: [CollaboratorCampaign]
  total: Int
  pagination: Pagination
}

type CollaboratorCommissionStats {
  _id: String

  """Tổng hoa hồng còn lại"""
  commission: Float

  """Tổng hoa hồng"""
  totalCommission: Float

  """Tổng hoa hồng đã chi"""
  totalDisburse: Float
}

type CollaboratorImportingLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type CollaboratorImportingLogPageData {
  data: [CollaboratorImportingLog]
  total: Int
  pagination: Pagination
}

type CollaboratorOrderStats {
  completeOrder: Int
  uncompleteOrder: Int
  completeProductQty: Int
  uncompleteProductQty: Int
}

type CollaboratorPageData {
  data: [Collaborator]
  total: Int
  pagination: Pagination
}

type CollaboratorProduct {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cộng tác viên"""
  collaboratorId: ID

  """Mã sản phẩm"""
  productId: ID
  collaborator: Collaborator
  product: Product

  """Mã giới thiệu"""
  shortCode: String

  """Link giới thiệu"""
  shortUrl: String

  """Số lượng click"""
  clickCount: Int

  """Số lượng like"""
  likeCount: Int

  """Số lượng share"""
  shareCount: Int

  """Số lượng comment"""
  commentCount: Int

  """Số lượng tương tác"""
  engagementCount: Int
  orderStats(fromDate: String, toDate: String): CollaboratorProductOrderStats
}

type CollaboratorProductOrderStats {
  completeOrder: Int
  uncompleteOrder: Int
  completeProductQty: Int
  uncompleteProductQty: Int
}

type CollaboratorProductPageData {
  data: [CollaboratorProduct]
  total: Int
  pagination: Pagination
}

type CollaboratorRegis {
  id: String
  status: String
}

type CollaboratorReport {
  summary: Mixed
  invite: Mixed
  order: Mixed
  commission: Mixed
  topInvite: Mixed
  topOrder: Mixed
  topRevenue: Mixed
  topCommission: Mixed
  topEngagement: Mixed
}

type CollaboratorStats {
  """Số lượng cộng tác viên"""
  collaboratorsCount: Int

  """Số lượng khách hàng CTV"""
  customersAsCollaboratorCount: Int
}

type Commission {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  affiliateId: String
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerId: String
  customer: Customer
  customerName: String
  customerPhone: String
  targetAffiliateId: String
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: String
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: String
  targetCustomer: Customer
  targetCustomerName: String
  targetCustomerPhone: String
  globalBuyerId: String
  globalBuyer: GlobalCustomer
  buyerId: String
  buyer: Customer
  buyerName: String
  buyerPhone: String
  productId: String
  product: Product
  productName: String
  productAttributeElements: [OrderItemProductAttributeElement]

  """Loại hoa hồng, hiện tại chỉ cho áp dụng với PRODUCT"""
  type: String
  orderId: String
  order: Order
  orderCode: String
  qty: Int
  basePrice: Float
  revenue: Mixed
  productCommissionPolicyId: String

  """Trạng thái của hoa hồng PENDING,APPROVED,CANCELED,DISABLED"""
  productCommissionPolicy: ProductCommissionPolicy
  status: String
  isWithdrawn: Boolean
  amount: Float
  amountDetails: [amountDetail]
  completedOrderAt: DateTime
  withdrawalRequestId: String
  member: Member
}

type CommissionByChildShopAffiliate {
  totalRevenueAmount: Mixed
  totalCommissionAmount: Mixed
  latestCreated: DateTime
  latestUpdate: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  totalOrderCount: Int
}

type CommissionByChildShopAffiliatePageData {
  data: [CommissionByChildShopAffiliate]
  total: Int
  pagination: Pagination
}

type CommissionDetail {
  """Mã"""
  code: String

  """Tên"""
  name: String

  """Loại"""
  type: String

  """Hoa hồng"""
  value: Float
}

type CommissionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Giá trị"""
  value: Float

  """
  Loại sự kiện RECEIVE_COMMISSION_1_FROM_ORDER,RECEIVE_COMMISSION_2_FROM_ORDER_FOR_PRESENTER,RECEIVE_COMMISSION_2_FROM_ORDER_FOR_COLLABORATOR,RECEIVE_COMMISSION_2_FROM_ORDER,RECEIVE_COMMISSION_3_FROM_ORDER,DISBURSE_COMMISSION_MANUAL,DISBURSE_COMMISSION_MOMO
  """
  type: String

  """Mã đơn hàng"""
  orderId: ID

  """Mã đăng ký SMS"""
  regisSMSId: ID

  """Ghi chú"""
  note: String

  """Mã đợt giải ngân"""
  disburseId: ID

  """Mã chi"""
  disburseItemId: ID

  """Nội dung chi"""
  content: String

  """Hình ảnh gửi kèm"""
  attachments: [String]
  order: Order
  member: Member
}

type CommissionLogPageData {
  data: [CommissionLog]
  total: Int
  pagination: Pagination
}

type CommissionPageData {
  data: [Commission]
  total: Int
  pagination: Pagination
}

enum CommissionRuleType {
  COMMISSION_ACCUMULATE
  COMMISSION_DIRECT
  UNLIMITED_TIER_COMMISSION_DIRECT
}

type CommissionsStatistics {
  pendingCommissions: Mixed
  approvedCommissions: Mixed
  canceledCommissions: Mixed
}

type CommonCommissionRule {
  tier: Int
  commissionType: ECommissionPolicyCommissionType
  commissionValue: Mixed
  maxCommission: Mixed
}

input CommonCommissionRuleInput {
  tier: Int
  commissionType: ECommissionPolicyCommissionType
  commissionValue: Mixed
  maxCommission: Mixed
}

type CommonSaleBonusPolicyRule {
  totalRevenue: Mixed
  bonusValue: Mixed
}

input CommonSaleBonusPolicyRuleInput {
  totalRevenue: Mixed
  bonusValue: Mixed
}

input CommonSpecialSalesBonusRuleInput {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  priority: Int
  rules: [CommonSaleBonusPolicyRuleInput]
}

enum ConditionType {
  ONE_OF
  ALL
}

input ConnectGoShipShopConfigInput {
  isPersonalAccount: Boolean
  username: String
  password: String
  clientId: Int
  clientSecret: String
}

input ConnectMInvoiceConfigInput {
  """Tên đăng nhập M-Invoice"""
  username: String!

  """Mật khẩu đăng nhập M-Invoice"""
  password: String!
  taxCode: String!
}

input ConnectTokenSignatureInput {
  user: String
  passwordCer: String
  pin: String
  tokenType: ETokenSignatureType
}

type ConnectZaloOAData {
  codeChallenge: String
  stateConnect: String
}

type ContractSignatureRegistrationRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """ID tham chiếu đến yêu cầu đăng ký chữ ký số """
  signatureRegistrationRequestId: ID

  """ID bản ghi chữ ký lưu trữ """
  signatureRecordId: String

  """ID thành viên """
  memberId: ID
  member: Member

  """ID đại lý (nếu có) """
  agencyId: ID
  agency: Agency

  """ID chữ ký hợp đồng """
  contractSignatureId: String

  """ID tham chiếu đến yêu cầu ký số"""
  signatureRequestId: String

  """Số hợp đồng được cấp cho yêu cầu này"""
  contractNumber: String

  """Ngày ký hợp đồng"""
  contractDate: DateTime

  """Tổng giá trị hợp đồng"""
  totalAmount: Float

  """Mã trạng thái hợp đồng (số nguyên)"""
  status: Float

  """Người phê duyệt hợp đồng"""
  approvedBy: String

  """Thời gian phê duyệt hợp đồng"""
  approvedAt: DateTime

  """Người ký hợp đồng"""
  signedBy: String

  """Thời gian ký hợp đồng"""
  signedAt: DateTime

  """Lý do từ chối ký hợp đồng (nếu có)"""
  rejectionReason: String

  """Người tạo bản ghi hợp đồng"""
  createdBy: String

  """Người cập nhật bản ghi gần nhất"""
  updatedBy: String

  """Mã chi nhánh nơi xử lý hợp đồng"""
  branchCode: String

  """Người ký thay khách hàng"""
  customerSignedBy: String

  """Thời gian khách hàng ký"""
  customerSignedAt: DateTime

  """Khách hàng từ chối ký (nếu có)"""
  customerRejected: String

  """Cờ cho biết hợp đồng đã được phê duyệt hay chưa"""
  isApproved: Boolean

  """Thời gian từ chối ký hợp đồng"""
  rejectedAt: DateTime

  """Người từ chối ký hợp đồng"""
  rejectedBy: String

  """Cờ cho biết hợp đồng đã được gửi phê duyệt"""
  isSentForApproval: Boolean

  """Thời gian gửi phê duyệt hợp đồng"""
  sentForApprovalAt: DateTime

  """Email liên hệ cho yêu cầu hợp đồng"""
  contactEmail: String

  """ID thư mục Google Drive lưu trữ tài liệu liên quan"""
  googleDriveFolderId: String

  """Tên thư mục Google Drive"""
  googleDriveFolderName: String

  """Chữ ký số của quản lý"""
  managerSign: String

  """Chữ ký số của khách hàng"""
  customerSign: String

  """Thời gian khách hàng từ chối (nếu có)"""
  customerRejectionDate: DateTime

  """ID tệp hợp đồng trên Google Drive"""
  googleDriveContractFileId: String

  """Mã chuỗi hoặc phiên bản hợp đồng"""
  contractSequence: String

  """Cờ cho biết đã tải lên tài liệu cần thiết chưa"""
  hasUploadedDocs: Boolean

  """Cờ cho biết hóa đơn điện tử đã được phát hành chưa"""
  hasIssuedEInvoice: Boolean

  """Người phát hành hóa đơn"""
  issuedBy: String

  """Thời gian phát hành hóa đơn"""
  issuedAt: DateTime

  """Loại khách hàng (ví dụ: cá nhân, doanh nghiệp)"""
  customerType: String

  """Số tài khoản ngân hàng dùng để thanh toán"""
  bankAccount: String

  """Số điện thoại liên hệ"""
  contactPhone: String

  """Tên ngân hàng thanh toán"""
  bankName: String

  """Tên trạng thái hợp đồng (dễ đọc)"""
  statusName: String

  """Tên đầy đủ của khách hàng"""
  customerName: String

  """Tên đầy đủ của đại lý xử lý yêu cầu"""
  agencyName: String

  """Mã số thuế của khách hàng"""
  taxCode: String

  """Địa chỉ liên hệ của khách hàng"""
  contactAddress: String

  """Tên đầy đủ của người đại diện"""
  representativeName: String

  """Chức vụ của người đại diện"""
  representativeTitle: String

  """Email phụ để liên hệ"""
  contactEmailAlternate: String

  """ID nội bộ ẩn của hợp đồng"""
  hiddenContractId: String

  """Phương thức thanh toán (mã hoặc mô tả)"""
  paymentMethod: String

  """Mã loại tiền tệ (ví dụ: USD, VND)"""
  currency: String

  """Tỷ giá quy đổi giữa các loại tiền"""
  exchangeRate: Float

  """Mã mẫu (template) dùng để tạo tài liệu hợp đồng"""
  templateCode: String

  """Series hóa đơn liên kết với hợp đồng"""
  invoiceSeries: String
  sentForApprovalLabel: String

  """Chi tiết gói chữ ký số"""
  details: [SignatureContractDetailItem]
  attachedFiles: [SignatureRegistrationRequestAttachedFile]
}

type ContractSignatureRegistrationRequestPageData {
  data: [ContractSignatureRegistrationRequest]
  total: Int
  pagination: Pagination
}

type Counter {
  id: String
  name: String
  createdAt: DateTime
  updatedAt: DateTime
  value: Int
}

type CounterPageData {
  data: [Counter]
  total: Int
  pagination: Pagination
}

type CountShopAffiliate {
  totalByFilter: Int
  total: Int
}

input CreateAccountingSystemSyncLogInput {
  name: String
}

input CreateActivityInput {
  username: String
  message: String
}

input CreateAddressBookInput {
  """Họ tên người đại diện liên lạc ở địa chỉ này"""
  fullName: String!

  """Số điện thoại"""
  phone: String!

  """Mã quốc gia (VN,...)"""
  regionCode: String!

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  address: PlaceInput!

  """Tùy chọn mặc định"""
  isDefault: Boolean!
}

input CreateAddressDeliveryImportingLogInput {
  name: String
}

input CreateAddressDeliveryInput {
  """Mã địa điểm"""
  code: String

  """Tên địa điểm"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String!

  """Mã Phường/xã"""
  wardId: String!

  """Mã Quận/huyện"""
  districtId: String!

  """Mã Tỉnh/thành"""
  provinceId: String!

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Hiệu lực"""
  activated: Boolean
}

input CreateAddressStorehouseImportingLogInput {
  name: String
}

input CreateAddressStorehouseInput {
  """Mã kho"""
  code: String

  """Tên kho"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ kho"""
  address: String!

  """Mã Phường/xã"""
  wardId: String!

  """Mã Quận/huyện"""
  districtId: String!

  """Mã Tỉnh/thành"""
  provinceId: String!

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Cho phép giao"""
  allowPickup: Boolean

  """vĩ độ"""
  latitude: Float

  """kinh độ"""
  longitude: Float

  """Hiệu lực"""
  activated: Boolean
}

input CreateAdminNotificationInput {
  """Tiêu đề"""
  title: String!

  """Tin nhắn"""
  body: String!

  """Hình ảnh"""
  image: String

  """Hành động khi click"""
  action: ActionInput
}

input CreateAffiliateConfigInput {
  name: String

  """Kiểu cấp đối tác FIXED,UNLIMITED"""
  treeType: AffiliateConfigTreeType!

  """Điều khoản"""
  terms: String
  introduction: String
  fixedConfig: FixedConfigInput

  """Thu phí hoặc không thu phí"""
  shouldCollectFee: Boolean

  """Phí"""
  fee: Float

  """Loại thời hạn của đối tác"""
  durationType: AffiliateConfigDurationType

  """Thời hạn hoạt động của đối tác (ngày)"""
  durationOfDay: Int

  """Áp dụng chính sách thưởng giới thiệu"""
  shouldApplyReferralCommissionPolicy: Boolean

  """Cho phép tự động duyệt đối tác"""
  allowAutomaticApprovedShopAffiliateRequest: Boolean

  """ Bắt buộc nhập mã giới thiệu khi yêu cầu cộng tác"""
  requiredReferralCodeShopAffiliateRequest: Boolean

  """Cho phép hiển thị thông tin người giới thiệu"""
  allowDisplayReferralInformation: Boolean

  """Thanh toán phí đối tác qua MbBank"""
  shouldPayByMbBank: Boolean

  """Số tài khoản MbBank"""
  mbBankAccountNumber: String

  """Tên tài khoản MbBank"""
  mbBankAccountName: String
  wordsDisplayed: ShopAffiliateConfigWordsDisplayedInput
  policiesAllowed: ShopAffiliateConfigPoliciesAllowedInput
  affiliateRequestConfig: AffiliateRequestConfigInput
  shopAffiliateWalletConfig: ShopAffiliateConfigShopAffiliateWalletConfigInput
  affiliateLevelConfigs: [AffiliateLevelItemConfigInput]
}

input CreateAffiliateInput {
  customerId: String!
  recruitedId: String
}

input CreateAffiliateLevelDiscountPolicyInput {
  name: String
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime

  """Có được nhận thưởng chênh lệch chiết khấu cấp bậc không?"""
  isEligibleForLevelDiscountCommission: Boolean

  """Cấp bậc tối đa được nhận thưởng chênh lệch chiết khấu cấp bậc"""
  maxLevelEligibleForLevelDiscountCommission: Int

  """số đơn vị làm tròn giá trị sau khi chiết khấu."""
  roundingAdjustmentUnit: Int

  """Doanh thu ca nhân tối thiểu để có thể đạt được thưởng chênh lệch"""
  minRevenueEligibleForLevelDiscountCommission: Int
}

input CreateAffiliateLevelDiscountPolicyLogInput {
  name: String
}

input CreateAgencyConfigInput {
  name: String
}

input CreateAgencyContractInput {
  agencyId: ID
  amountDaysShopUseFreeTier: Mixed
  monthlyMaintenanceFee: Mixed
  packageSubscriptionDiscountPercentage: Mixed
  isActivated: Boolean
}

input CreateAgencyInput {
  email: String
  name: String
  code: String
  phone: String
  isActivated: Boolean
  businessType: EAgencyBusinessType
}

input CreateAgencyManageMemberInput {
  agencyId: ID
  memberId: ID
}

input CreateAgencyUserInput {
  agencyId: ID
  isOwner: Boolean
  email: String
  name: String
  phone: String
  username: String
  password: String
}

input CreateAndUpdateProductSpecsInput {
  """Mã của thông số sản phẩm"""
  id: String

  """Tên thông số"""
  name: String!

  """Mô tả của thông số"""
  value: String!
}

input CreateAndUpdateProductTabInput {
  """Mã tab"""
  tabId: ID!

  """Mã product"""
  productId: ID!

  """Nội dung của productTab"""
  content: Mixed

  """Trạng thái của productTab thông tin sản phẩm"""
  isActive: Boolean
}

input CreateApiTrackingInput {
  name: String
}

input CreateApplicationMemberInput {
  """Tên api key"""
  name: String

  """Api key"""
  apiKey: String

  """Shop ID"""
  memberId: String

  """Số lần gọi api key"""
  count: Int

  """Kích hoạt"""
  isActivated: Boolean

  """URL webhook"""
  url: String
}

input CreateAreaInput {
  """Tên khu vực"""
  name: String!

  """Slug khu vực"""
  slug: String

  """Độ ưu tiên"""
  priority: Int

  """Hình ảnh khu vực"""
  image: String!
}

input CreateAuditLogInput {
  name: String
}

input CreateBannerInput {
  """Hình ảnh"""
  image: String

  """Tiêu đề"""
  title: String

  """Mô tả tiêu đề"""
  subtitle: String

  """Loại hành động WEBSITE,PRODUCT,VOUCHER,SHOP,NONE"""
  actionType: String

  """Đường dẫn website"""
  link: String

  """Mã sản phẩm"""
  productId: ID

  """Mã voucher"""
  voucherId: ID

  """Hiển thị công khai"""
  isPublic: Boolean

  """Ưu tiên"""
  priority: Int

  """Mã cửa hàng """
  memberId: ID

  """Vi tri banner"""
  position: String
}

input CreateBranchInput {
  name: String!
}

input CreateCarrierWalletInput {
  name: String
}

input CreateCarrierWalletTransactionInput {
  name: String
}

input CreateCategoryInput {
  """Tên danh mục"""
  name: String!

  """Mã danh mục"""
  code: String

  """Mã sản phẩm"""
  productIds: [ID]

  """Độ ưu tiên"""
  priority: Int

  """Kích hoạt"""
  hidden: Boolean
  display: CategoryDisplayInput
  imageUrl: String
}

input CreateCollaboratorCampaignInput {
  """Mã chiến dịch"""
  code: String

  """Tên chi ến dịch"""
  name: String!

  """Tiêu đề"""
  title: String!

  """Nội dung"""
  content: String!

  """Hash Tags"""
  hashtags: [String]

  """Hình ảnh"""
  image: String

  """Ngày bắt đầu"""
  startDate: DateTime!

  """Ngày kết thúc"""
  endDate: DateTime

  """Danh sách chủ shop id được áp dụng"""
  memberIds: [ID]

  """Chi nhánh áp dụng"""
  branchId: ID

  """Sản phẩm áp dụng chiến dịch"""
  productId: ID

  """Trạng thái đăng"""
  isPublish: Boolean

  """Điểm ghi nhận"""
  point: Float
}

input CreateCollaboratorInput {
  """mã cộng t ác viên"""
  code: String

  """Tên cộng tác viên"""
  name: String!

  """Số điện thoại"""
  phone: String!
}

input CreateCollaboratorProductInput {
  collaboratorId: ID!
  productId: ID!
}

input CreateCommissionLogInput {
  """Mã khách hàng"""
  customerId: String!

  """Giá trị"""
  value: Float!

  """Loại sự kiện DISBURSE_COMMISSION_MOMO,DISBURSE_COMMISSION_MANUAL"""
  type: String!

  """Nội dung chi"""
  content: String!

  """Hình ảnh kèm theo"""
  attachments: [String]
}

input CreateCounterInput {
  name: String
  value: Int
}

input CreateCustomCardInput {
  type: ECustomCardType!
  isActivated: Boolean
  customCardConfig: CustomCardConfigInput!
}

input CreateCustomerAddressInput {
  """Mã tỉnh/thành"""
  provinceId: String!

  """Mã quận/huyện"""
  districtId: String!

  """Mã phường/xã"""
  wardId: String!

  """Địa chỉ"""
  address: String

  """Địa chỉ mặc định"""
  isDefault: Boolean

  """Toạ độ vị trí"""
  location: Mixed
}

input CreateCustomerCompletedTaskInput {
  name: String
}

input CreateCustomerContactInput {
  """Họ tên"""
  name: String!

  """Tên doanh nghiệp"""
  companyName: String!

  """Điên thoại"""
  phone: String!

  """Email"""
  email: String!

  """Địa chỉ"""
  address: String

  """Nội dung"""
  message: String
}

input CreateCustomerGroupInput {
  """Tên nhóm"""
  name: String

  """Bộ lọc"""
  filter: Mixed
}

input CreateCustomerInput {
  name: String
  address: String
  phone: String!

  """Email"""
  email: String

  """Số chứng minh nhân dân"""
  idCard: String
  provinceId: String
  districtId: String
  wardId: String
  avatar: String
  gender: String
  latitude: Float
  longitude: Float

  """Full địa chỉ"""
  fullAddress: String

  """Ghi chú địa chỉ"""
  addressNote: String

  """Ngày sinh"""
  birthday: DateTime
  citizenId: String
  password: String
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  taxCode: String
}

input CreateDebtAllocationInput {
  name: String
}

input CreateDebtPaymentRequestInput {
  amountPayment: Mixed!
  paymentMethod: EPaymentMethod!
  customerId: ID!
  description: String
}

input CreateDirectSubordinatesProductSalesBonusPolicyInput {
  name: String!
  isActive: Boolean
  startDate: DateTime!
  endDate: DateTime!
  settlementDuration: Int!
  rules: [DirectSubordinatesProductSalesBonusPolicyRuleInput]!
}

input CreateDisburseInput {
  """Mã cửa hàng"""
  memberId: ID!

  """Đợt giải ngân"""
  name: String!

  """từ ngày"""
  startDate: DateTime!

  """đến ngày"""
  endDate: DateTime!

  """Ghi chú"""
  note: String
}

input CreateDisburseItemInput {
  """Mã giải ngân"""
  disburseId: ID

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã chủ shop"""
  customerCode: String

  """Điện thoại chủ shop"""
  customerPhone: String

  """Tên chủ shop"""
  customerName: String

  """Mã chủ shop"""
  memberCode: String

  """Điện thoại chủ shop"""
  memberPhone: String

  """Tên chủ shop"""
  memberName: String

  """CMND"""
  idCard: String

  """Giá trị giải ngân"""
  value: Float
}

input CreateDisbursementRequestInput {
  shopDisbursementPeriodId: String
  amountRequestedDisbursement: Mixed!
  taxCode: String
  bankName: String!
  bankAccountNumber: String!
  bankAccountName: String!
}

input CreateDisbursePayoutInput {
  """Mã đợt giải ngân"""
  disburseId: ID!

  """Tên đợt chi"""
  name: String!
}

input CreateDiscountPolicyInput {
  name: String
}

input CreateDiseaseInput {
  """Tên loại bệnh"""
  name: String!

  """Loại cây liên quan"""
  plantIds: [String]

  """Hình ảnh loại bệnh"""
  image: String
}

input CreateDistributionRequestInput {
  """Loại yêu cầu AGENCY,DISTRIBUTOR"""
  type: String
}

input CreateDomainMappingInput {
  name: String
}

input CreateDraftOrderInput {
  tableId: ID

  """Sản phẩm"""
  items: [OrderItemInput]!

  """Sản phẩm ưu đãi"""
  offerItemIds: [String]

  """Tên người đặt"""
  buyerName: String

  """Điện thoại người đặt"""
  buyerPhone: String

  """Phương thức nhận hàng DELIVERY,STORE,IN_STORE_PURCHASE"""
  pickupMethod: String!

  """Chi nhánh"""
  shopBranchId: ID!

  """Thời gian nhận hàng"""
  pickupTime: DateTime

  """Địa chỉ nhận"""
  buyerAddress: String

  """Tỉnh / thành nhận"""
  buyerProvinceId: String

  """Quận / huyện nhận"""
  buyerDistrictId: String

  """Phường / xã nhận"""
  buyerWardId: String

  """Địa chỉ giao đầy đủ"""
  buyerFullAddress: String

  """Ghi chú địa chỉ"""
  buyerAddressNote: String

  """Khách hàng nhận """
  receiverId: String

  """Tên khách hàng nhận """
  receiverName: String

  """Điện thoại khách hàng nhận """
  receiverPhone: String

  """Địa chỉ khách hàng nhận """
  receiverAddress: String

  """Tỉnh / thành khách hàng nhận """
  receiverProvince: String

  """Quận / huyện khách hàng nhận """
  receiverDistrict: String

  """Phường / xã khách hàng nhận """
  receiverWard: String

  """Mã Tỉnh / thành khách hàng nhận """
  receiverProvinceId: String

  """Mã Quận / huyện khách hàng nhận """
  receiverDistrictId: String

  """Mã Phường / xã khách hàng nhận """
  receiverWardId: String

  """Địa chỉ đầy đủ của khách hàng nhận """
  receiverFullAddress: String

  """Ghi chú địa chỉ của khách hàng nhận"""
  receiverAddressNote: String

  """Toạ độ"""
  latitude: Float
  longitude: Float

  """Phương thức thanh toán"""
  paymentMethod: String!

  """
  Đơn vị giao hàng mà khách hàng chọn POST,VNPOST,NONE,AHAMOVE,DRIVER,GRAB_EXPRESS,GO_SHIP,GO_SHIP_ON_DEMAND
  """
  customerShipMethod: EShipMethod

  """
  Dịch vụ mà khách hàng chọn SGN-BIKE,SGN-EXPRESS,SGN-2H-PUBLIC,SGN-SAMEDAY,SGN-POOL,SGN-AHAPRO
  """
  customerShipServiceId: String

  """Tên dịch vụ mà khách hàng chọn"""
  customerShipServiceName: String

  """Yêu cầu kèm theo dịch vụ mà khách hàng chọn"""
  customerShipRequestIds: [String]

  """
  Đơn vị giao hàng mà shop chọn POST,VNPOST,NONE,AHAMOVE,DRIVER,GRAB_EXPRESS,GO_SHIP,GO_SHIP_ON_DEMAND
  """
  shopShipMethod: EShipMethod

  """
  Dịch vụ mà shop chọn SGN-BIKE,SGN-EXPRESS,SGN-2H-PUBLIC,SGN-SAMEDAY,SGN-POOL,SGN-AHAPRO
  """
  shopShipServiceId: String

  """Yêu cầu kèm theo dịch vụ mà shop chọn"""
  shopShipRequestIds: [String]

  """Ghi chú"""
  note: String

  """Mã giảm giá"""
  promotionCode: String

  """Mã voucher cá nhân"""
  customerVoucherId: ID

  """Sử dụng điểm thưởng"""
  useRewardPoint: Boolean

  """Thứ tự nhóm quà tặng"""
  offerGroupIndex: Int

  """Mã giới thiệu """
  referralCode: String

  """Mã bàn"""
  tableCode: String
  unixTime: String
  affiliateCode: String
  promotionId: String
  promotionApplies: [PromotionApplyInput]
  haveIssueInvoice: Boolean
  successDeepLink: String
  failDeepLink: String
  successRedirectUrl: String
  failRedirectUrl: String
  platform: EPlatform
  zaloOrderId: String
}

input CreateDriverInput {
  """Tên tài xế"""
  name: String!

  """Số điện thoại"""
  phone: String!

  """Hình đại diện"""
  avatar: String

  """Biển số xe"""
  licensePlates: String

  """Mật khẩu"""
  password: String!
}

input CreateEmailInput {
  """Tên mẫu email"""
  name: String!

  """Tiêu đề email"""
  subject: String!

  """Nội dung text"""
  text: String

  """Nội dung html"""
  html: String!

  """Dữ liệu context"""
  context: [Mixed]

  """Data Design"""
  design: Mixed!
}

input CreateExpertGroupInput {
  """Tên nhóm chuyên gia"""
  name: String!

  """Người đại diện"""
  representative: String!

  """Số điện thoại"""
  phone: String!

  """Mã quốc gia (VN,...)"""
  regionCode: String

  """Địa chỉ"""
  address: PlaceInput!

  """Giấy phép kinh doanh (nhiều ảnh)"""
  businessLicense: [String]!
}

input CreateExpertInput {
  """Sô điện thoại"""
  phone: String!

  """Mã quốc gia (VN,...)"""
  regionCode: String!

  """Tên chuyên gia"""
  name: String!

  """email"""
  email: String!

  """password"""
  password: String!

  """ID nhóm chuyên gia"""
  expertGroupId: String!

  """Anh đại diện"""
  avatar: String!

  """Địa chỉ"""
  address: PlaceInput

  """chuyên môn"""
  specializes: String

  """Loại cây chuyên môn"""
  specializesInPlantIds: [String]

  """Loại bệnh chuyên môn"""
  specializesInDiseaseIds: [String]
}

input CreateGiftInput {
  code: String
  name: String!
  desc: String
  image: String
  payPresent: String
  payPoint: Float
  eVoucherId: ID
  qty: Int
  type: String
  status: String
}

input CreateGlobalCollaboratorRegistrationInput {
  """Tên khách hàng"""
  name: String!

  """Số điện thoại"""
  phone: String!

  """Email"""
  email: String!

  """Số CMND"""
  identityNumber: String

  """Mã giới thiệu (SDT)"""
  referralCode: String
}

input CreateGlobalCustomerInput {
  """Mã khách hàng"""
  code: String

  """Tên khách hàng"""
  name: String

  """Số điện thoại"""
  phone: String!

  """Mat khau"""
  password: String

  """Email"""
  email: String

  """Ảnh đại diện"""
  avatar: String

  """Giới tính male,female,other"""
  gender: String

  """Ngày sinh"""
  birthday: DateTime

  """Full địa chỉ"""
  fullAddress: String
  latitude: Float
  longitude: Float
  citizenId: String
  address: String

  """danh sách customerid"""
  customerIds: [String]
}

input CreateGlobalProductCategoryInput {
  """Tên danh mục dịch vụ sản phẩm"""
  name: String!

  """Slug"""
  slug: String
  icon: String
  image: String

  """Độ ưu tiên dịch vụ sản phẩm"""
  priority: Int

  """Trạng thái đã ẩn"""
  isHidden: Boolean

  """Id danh mục dịch vụ cha"""
  parentId: String
}

input CreateGoShipSettingInput {
  name: String
}

input CreateIndividualProductSalesBonusPolicyInput {
  name: String!
  isActive: Boolean
  startDate: DateTime!
  endDate: DateTime!
  settlementDuration: Int!
  rules: [IndividualProductSalesBonusPolicyRuleInput]!
}

input CreateIndividualServiceContractTypeSalesBonusPolicyInput {
  name: String!
  isActivated: Boolean
  startDate: DateTime!
  endDate: DateTime!
  settlementDuration: Int!
  rules: [IndividualServiceContractTypeSalesBonusPolicyRuleInput]!
}

input CreateInventoryVoucherImportAllProductInput {
  """Loại phiếu IMPORT,EXPORT"""
  type: String

  """Mã chi nhánh"""
  branchId: String

  """Ngày hạch toán"""
  accountingDate: DateTime

  """Ngày chứng từ"""
  voucherDate: DateTime

  """Mã phiếu chứng từ """
  voucherCode: String

  """Lý do IMPORT,RETURN,ONLINE,RETAIL,WHOLESALE,DAMAGED,OTHER,AUDIT"""
  reason: String

  """Diễn giải"""
  explain: Mixed

  """Link hình ảnh"""
  images: [String]

  """Danh sách sản phẩm trong phiếu kho"""
  productInventoryList: [CreateInventoryVoucherProductInput]
  defaultProvider: String

  """Giá"""
  defaultPrice: Float

  """Số lượng"""
  defaultAmount: Int!

  """Chiết khấu"""
  defaultDiscount: Float
}

input CreateInventoryVoucherInput {
  """Loại phiếu IMPORT,EXPORT"""
  type: String

  """Mã chi nhánh"""
  branchId: String

  """Id đơn hàng"""
  orderId: String

  """Ngày hạch toán"""
  accountingDate: DateTime

  """Ngày chứng từ"""
  voucherDate: DateTime

  """Mã phiếu chứng từ """
  voucherCode: String

  """Lý do IMPORT,RETURN,ONLINE,RETAIL,WHOLESALE,DAMAGED,OTHER,AUDIT"""
  reason: String

  """Diễn giải"""
  explain: Mixed

  """Link hình ảnh"""
  images: [String]

  """Danh sách sản phẩm trong phiếu kho"""
  productInventoryList: [CreateInventoryVoucherProductInput]
}

input CreateInventoryVoucherProductInput {
  """Id của sản phẩm"""
  productId: String

  """Mã sản phẩm"""
  productCode: String

  """Tên sản phẩm"""
  productName: String

  """Nhà cung"""
  provider: String

  """Giá"""
  price: Float

  """Số lượng"""
  amount: Int

  """Chiết khấu"""
  discount: Float
}

"""Input cho Preview hoặc tạo hóa đơn M-Invoice."""
input CreateInvoiceMInvoiceInput {
  serviceContractId: ID

  """ID của Order cần preview/tạo hóa đơn"""
  orderId: ID

  """True nếu tự động ký & gửi cho CQT"""
  isAutoSign: Boolean = false

  """
  Các trường ghi đè payload gốc:
  - inv_invoiceSeries: Ký hiệu hóa đơn
  - so_benh_an: Mã nội bộ order/hóa đơn
  - inv_invoiceIssuedDate: Ngày phát hành (YYYY-MM-DD)
  - inv_buyerDisplayName: Tên người mua
  - inv_buyerAddressLine: Địa chỉ người mua
  - inv_buyerEmail: Email người mua
  - inv_buyerTaxCode: Mã số thuế người mua
  - inv_paymentMethodName: Hình thức thanh toán ("TM", "CK",...)
  - inv_discountAmount: Tổng tiền chiết khấu
  - inv_buyerBankAccount: Số tài khoản người mua
  - inv_buyerBankName: Ngân hàng người mua
  - inv_buyerLegalName: Tên doanh nghiệp người mua
  - inv_TotalAmountWithoutVat: Tổng chưa thuế
  - inv_vatAmount: Tổng thuế GTGT
  - inv_TotalAmount: Tổng đã thuế
  - buyerIdentityCard: Căn cước công dân
  - dchicuahang: Địa chỉ chi nhánh bán hàng
  - amount_to_word: Số tiền bằng chữ
  - details: Mảng chi tiết hóa đơn
  """
  overrides: InvoiceOverrideMInvoiceInput
}

input CreateInvoiceRequestInput {
  invoiceInformationRequest: InvoiceInformationRequestInput
  memberId: ID
  customerId: ID
  orderId: ID
  orderCode: String
  serviceContractId: ID
  serviceContractCode: String
  hadIssueInvoice: Boolean
  orderInvoiceId: ID

  """Ký hiệu hóa đơn"""
  sourceSerialNo: String

  """Số hóa đơn """
  sourceNumberNo: Mixed

  """Đơn vị HDDT"""
  sourceInvoiceType: ESourceInvoiceType
  amount: Mixed
}

input CreateLuckyWheelInput {
  """Mã vòng quay"""
  code: String

  """Tiêu đề vòng quay"""
  title: String!

  """ngày bắt đầu"""
  startDate: DateTime!

  """ngày kết thúc"""
  endDate: DateTime!
}

input CreateManychatCustomFieldSettingInput {
  manychatCustomFieldId: Mixed
  customerDataKey: ECustomerDataKey
}

input CreateManychatSendFlowSettingInput {
  name: String
  triggerType: EManychatSendFlowTriggerType
  sendType: EManychatSendFlowType
  manychatFlowNs: String
  isActivated: Boolean
}

input CreateManychatSendNotificationSettingInput {
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  title: String
  content: String
  imageUrl: String
  isActivated: Boolean
}

input CreateMediaCentralCategoryInput {
  name: String!
  mediaSource: EMediaSource!
  priority: Int
  isActivated: Boolean
}

input CreateMediaCentralInput {
  name: String
}

input CreateMediaCentralItemInput {
  mediaCentralCategoryIds: [ID]
  mediaSource: EMediaSource!
  originalUrl: String!
  name: String
  description: String
  isActivated: Boolean
  priority: Int
  thumbnails: [MediaCentralThumbnailInput]
}

input CreateMemberImportingLogInput {
  name: String
}

input CreateMemberInput {
  domain: String
  code: String!
  username: String!
  name: String!
  avatar: String
  phone: String!
  shopName: String
  shopLogo: String

  """Hình cover cửa hàng"""
  shopCover: String
  address: String
  provinceId: String
  districtId: String
  wardId: String
  identityCardNumber: String
  gender: String
  birthday: DateTime
  parentIds: [ID]
  activated: Boolean
  type: String
  branchId: ID
  positionId: ID
  password: String!
  allowSale: Boolean

  """Phân loại cửa hàng"""
  categoryId: ID
  shopType: EShopType

  """Id cua hang cha"""
  parentMemberId: ID

  """Id khach hang"""
  customerId: ID

  """Ma so thue"""
  taxCode: String
  featureAllows: [EShopFeature]
}

input CreateMerchantMinigameInput {
  username: String
  email: String
  phone: String
  password: String
  confirmPassword: String
  name: String
  representativeName: String
  provinceId: String
  districtId: String
  wardId: String
  address: String
}

input CreateMicConfigInput {
  name: String
}

input CreateMicInsuranceConfigInput {
  name: String
}

input CreateMinigamePopupInput {
  memberId: ID
  isActivated: Boolean
  minigameId: String
  imageUrl: String
  content: String
}

input CreateMinigameRewardLogInput {
  name: String
}

input CreateMinigameVoucherGroupMappingInput {
  isActivated: Boolean
  minigameVoucherGroupId: String
  targetShopVoucherId: ID
  targetPromotionId: ID
}

input CreateNotificationSettingInput {
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  scheduleType: ENotificationScheduleType
  title: String
  content: String
  imageUrl: String
  redirectUrl: String
  isActivated: Boolean
  sendingTime: DateTime
  receiverType: ENotificationReceiverType
  shopPostId: ID
  specificCustomerIds: [ID]
  specificShopAffiliateIds: [ID]
}

input CreateOrderInput {
  items: [OrderItemInput]!
  buyerName: String
  buyerPhone: String
  buyerAddress: String
  buyerProvinceId: String
  buyerDistrictId: String
  buyerWardId: String

  """Khách hàng nhận """
  receiverId: String

  """Tên khách hàng nhận """
  receiverName: String

  """Điện thoại khách hàng nhận """
  receiverPhone: String

  """Địa chỉ khách hàng nhận """
  receiverAddress: String

  """Tỉnh / thành khách hàng nhận """
  receiverProvince: String

  """Quận / huyện khách hàng nhận """
  receiverDistrict: String

  """Phường / xã khách hàng nhận """
  receiverWard: String

  """Mã Tỉnh / thành khách hàng nhận """
  receiverProvinceId: String

  """Mã Quận / huyện khách hàng nhận """
  receiverDistrictId: String

  """Mã Phường / xã khách hàng nhận """
  receiverWardId: String

  """Địa chỉ đầy đủ của khách hàng nhận """
  receiverFullAddress: String

  """Ghi chú địa chỉ của khách hàng nhận"""
  receiverAddressNote: String

  """Loại của người đặt hàng"""
  ordererType: EOrdererType
  shipMethod: String!
  paymentMethod: String!
  addressDeliveryId: ID
  note: String
  latitude: Float
  longitude: Float

  """Ma ban"""
  tableCode: String
  haveIssueInvoice: Boolean
  platform: EPlatform
  zaloOrderId: String
  tableId: ID
}

input CreateOrderToAhamoveInput {
  orderId: ID!
  serviceId: String
  promotionCode: String
  requests: [RequestToAhamoveInput]
}

input CreateOrderToGoShipInput {
  orderId: ID!
  serviceId: String!
  customData: CustomOrderToGoShipInput
}

input CreateOrderToGoShipOnDemandInput {
  orderId: ID!
  serviceId: String!
  note: String
  requests: [Mixed]
  customData: CustomOrderToGoShipInput
}

input CreateOrderToGrabExpressInput {
  orderId: ID!
  serviceId: String
  promotionCode: String
  requestIds: [String]
}

input CreatePackageSubscriptionInput {
  name: String
  imageUrl: String
  description: String
  newPrice: Int
  renewalPrice: Int
  durationAmount: Int
  durationUnit: EDurationUnitPackageSubscription
}

input CreatePaymentLogCreateInvoiceInput {
  discount: Int
  merchantId: String!
  subscriptionId: String!
  paymentMethod: EPaymentLogMinigamePaymentMethod!
  paymentStatus: EPaymentStatusMinigame
}

input CreatePlantInput {
  """Tên loại cây"""
  name: String!

  """Hình ảnh loại cây"""
  image: String
}

input CreatePopupInput {
  """Tên gợi nhớ"""
  name: String!

  """Ngày bắt đầu"""
  startDate: DateTime!

  """Ngày kết thúc"""
  endDate: DateTime!

  """Hình ảnh"""
  image: String!

  """Hình ảnh dành cho mobile"""
  imageForMobile: String

  """Hình ảnh dành cho webapp"""
  imageForWebApp: String
  imageZaloMiniApp: String

  """Số lần hiển thị"""
  displayCount: Int!

  """Đường dẫn"""
  url: String
  isActivated: Boolean
  targetType: ERole
}

input CreatePositionInput {
  name: String
}

input CreatePostInput {
  """Tiêu đề"""
  title: String!

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Chủ đề"""
  topicId: String

  """Trạng thái duyệt PENDING,DRAFT"""
  approveStatus: String

  """Ngày cập nhật duyệt"""
  approveUpdatedAt: DateTime

  """Kích hoạt hiển thị"""
  active: Boolean

  """date of post time"""
  postedAt: DateTime

  """source url of post"""
  source: String

  """Mã khu vực"""
  areaId: String
}

input CreatePostTagInput {
  """Tên tag"""
  name: String!

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

input CreatePreBookingInput {
  customerPhone: String
  customerName: String
  customerId: ID
  preBookingTypeId: ID
  serviceContractTypeId: ID
  startAt: DateTime
  competedAt: DateTime
  bookerNote: String
  note: String
  shopBranchId: ID
  staffSpecialistId: ID
  customFieldsData: [CustomFieldDataInput]
}

input CreatePreBookingTypeInput {
  name: String
  description: String
  isActivated: Boolean
}

input CreatePricePolicyInput {
  """Tên bảng giá"""
  name: String!

  """Loại điều chỉnh INC,DEC"""
  adjustType: String

  """Đơn vị điều chỉnh PERCENT,AMOUNT"""
  adjustUnit: String

  """Giá trị điều chỉnh"""
  adjustValue: Float

  """Trạng thái"""
  active: Boolean

  """Loại bảng giá ADJUST_PRICE,QTY_MATRIX"""
  type: String

  """Ma trận khách hàng và số lượng"""
  qtyMatrix: [QtyMatrixInput]
}

input CreateProductAttributeElementInput {
  """Tên AttributeElement"""
  name: String!
  productAttributeId: ID!
}

input CreateProductAttributeInput {
  """Tên Attribute"""
  name: String!

  """Id  sản phẩm"""
  productId: ID!
  productAttributeElements: [UpdateProductAttributeElementInput]
}

input CreateProductAttributeTemplateInput {
  """Tên Attribute"""
  name: String!

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  productAttributeElements: [UpdateProductAttributeElementTemplateInput]
}

input CreateProductCommissionPolicyInput {
  name: String!
  isActive: Boolean

  """
  Loại hoa hồng COMMISSION_ACCUMULATE,COMMISSION_DIRECT,UNLIMITED_TIER_COMMISSION_DIRECT
  """
  type: String!
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [ProductCommissionPolicyRuleInput]
}

input CreateProductImportingLogInput {
  name: String
}

input CreateProductInput {
  """Mã của sản phẩm"""
  productCode: String

  """Tên sản phẩm"""
  name: String!

  """Giá sản phẩm"""
  basePrice: Float!

  """Danh sách Mã danh mục"""
  categoryIds: [ID]

  """Danh sách mã danh mục sản phẩm hệ thống"""
  globalProductCategoryIds: [ID]

  """Hình ảnh"""
  image: String
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode

  """Danh sách tab thông tin sản phẩm"""
  productTabs: [CreateAndUpdateProductTabInput]

  """Các key word cho SEO"""
  keywords: String
  barcode: String
  bulkyTier: BulkyTier
  unitId: ID
}

input CreateProductLabelInput {
  """Tên nhãn"""
  name: String!

  """Màu sắc"""
  color: String
}

input CreateProductPricePolicyInput {
  name: String!
  memberId: String!
  isActive: Boolean
  reductionType: String
  rules: [ProductPricePolicyRuleInput]
}

input CreateProductSalesBonusPolicyInput {
  name: String!
  isActive: Boolean
  startDate: DateTime!
  endDate: DateTime!
  settlementDuration: Int!
  rules: [ProductSalesBonusPolicyRuleInput]!
  advancedRules: [ProductSalesBonusPolicyAdvancedRuleInput]
  ruleToApplyAdvanced: RuleToApplyAdvancedInput!
}

input CreateProductTagInput {
  """Tên tag"""
  name: String!

  """Hình ảnh"""
  image: String
}

input CreateProductToppingInput {
  """Tên Topping"""
  name: String!
}

input CreateProductWithinDirectSubordinatesProductSalesBonusPolicyInput {
  productId: String!
  point: Int
}

input CreateProductWithinIndividualProductSalesBonusPolicyInput {
  productId: String!
  point: Int
}

input CreateProductWithinProductCommissionPolicyInput {
  productId: String!
}

input CreateProductWithinProductSalesBonusPolicyInput {
  productId: String!
  point: Int
}

input CreateProductWithinRecurringProductCommissionPolicyInput {
  productId: String!
}

input CreatePromotionInput {
  imageUrl: String
  name: String!
  type: PromotionType!
  receivePromotionThrough: EReceivePromotionThrough!
}

input CreatePromotionProductInput {
  productId: String!
  quantity: Int!
}

input CreateQRCodeStageInput {
  """Tên đợt QR Code"""
  name: String!

  """Mô tả"""
  description: String!

  """Mã sản phẩm"""
  productId: String

  """Số lượng QR Code"""
  qrCodeCount: Int!
}

input CreateRecurringProductCommissionPolicyInput {
  """Tên chính sách"""
  name: String

  """Số kỳ trả thưởng (ví dụ 12)"""
  totalPeriods: Int

  """Loại kỳ: tuần, tháng,..."""
  periodType: ECommissionRecurringPeriodType

  """Chỉ dùng cho kỳ HÀNG THÁNG: ví dụ trả vào ngày 15 hàng tháng"""
  periodTime: Int

  """Số kỳ đầu bỏ qua (vd: 1 để bỏ qua kỳ trả sắp tới)"""
  startAfterPeriods: Int

  """
  Nếu true: BE tự động trả thưởng khi đến kỳ; nếu false: cần admin can thiệp
  """
  isActivated: Boolean

  """
  Nếu true: BE tự động trả thưởng khi đến kỳ; nếu false: cần admin can thiệp
  """
  isAutoPayout: Boolean
  startDate: DateTime
  endDate: DateTime
  rules: [RecurringProductCommissionPolicyRuleInput]
}

input CreateRecurringProductCommissionPolicyLogInput {
  name: String
}

input CreateRecurringProductCommissionScheduleInput {
  name: String
}

input CreateRecurringServiceContractTypeCommissionPolicyInput {
  name: String
  type: ECommissionRuleType
  totalPeriods: Int
  periodType: ECommissionRecurringPeriodType
  periodTime: Int
  startAfterPeriods: Int
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  isAutoPayout: Boolean
  rules: [CommonCommissionRuleInput]
  specialRules: [SpecialRecurringCommissionPolicyRuleCommonInput]
  periodAllocations: [PeriodCommissionAllocationInput]
}

input CreateReferralCommissionLogDetailInput {
  """Mã cửa hàng"""
  memberId: String

  """Mã lịch sử thưởng giới thiệu"""
  referralCommissionLogId: String

  """Mã nhận người hoa hồng"""
  receiverId: String

  """Mã đối tác người nhận hoa hồng"""
  receiverAffiliateId: String

  """Tên người nhận hoa hồng"""
  receiverName: String

  """Cấp bậc"""
  level: Int

  """Số tiền được nhận"""
  amount: Float
}

input CreateReferralCommissionLogInput {
  """Mã cửa hàng"""
  memberId: String

  """Mã khách hàng của người giới thiệu"""
  presenterCustomerId: String

  """Mã đối tác của người giới thiệu"""
  presenterAffiliateId: String

  """Tên của người giới thiệu"""
  presenterCustomerName: String

  """Số điện thoại của người giới thiệu"""
  presenterCustomerPhone: String

  """Mã khách hàng của người được giới thiệu"""
  presenteeCustomerId: String

  """Mã đối tác của người được giới thiệu"""
  presenteeAffiliateId: String

  """Tên của người được giới thiệu"""
  presenteeCustomerName: String

  """Số điện thoại của người được giới thiệu"""
  presenteeCustomerPhone: String

  """Trạng thái"""
  status: ReferralCommissionLogStatus
}

input CreateReferralCommissionPolicyInput {
  """Kích hoạt"""
  isActive: Boolean

  """Thiết lập thưởng giới thiệu"""
  referralRules: [ReferralCommissionPolicyRuleInput]

  """Thiết lập KPI thưởng giới thiệu"""
  kpiRules: [KpiReferralCommissionPolicyInput]
}

input CreateRegisterInvoiceInput {
  invoiceType: String
  symbolCode: String
  invoiceForm: String
  invoiceYear: String
  logoUrl: String
}

input CreateRevenueSharingPolicyInput {
  sharingType: ERevenueSharingType
  sharingValue: Float
  maxValueSharing: Float
  isActivated: Boolean
  applyShopAffiliateId: String
}

input CreateSaleFeedCommentInput {
  """Mã bản tin"""
  saleFeedId: ID!

  """Nội dung"""
  content: String

  """Hình ảnh"""
  images: [String]
}

input CreateServiceCartInput {
  serviceContractTypeId: ID
  amount: Int
}

input CreateServiceContractInput {
  isPaymentToSupplier: Boolean
  customerId: ID
  customerPhone: String
  customerName: String
  startDate: DateTime
  endDate: DateTime
  name: String
  customerNote: String
  shopBranchId: ID
  staffSaleId: ID
  paymentMethod: EPaymentMethod
  haveIssueInvoice: Boolean
  shopVoucherIds: [ID]
  totalDiscountAmountByShopVoucher: Mixed
  totalDiscountAmount: Mixed
  totalExtraFee: Mixed
  isActivated: Boolean
  paymentDate: DateTime
  imageUrls: [String]
  referrerShopAffiliateCode: String
  serviceContractTypeInServiceContracts: [ServiceContractTypeInServiceContractInput]
}

input CreateServiceContractTypeCategoryInput {
  priority: Int
  name: String
  description: String
  isActivated: Boolean
  imageUrl: String
  imageUrls: [String]
}

input CreateServiceContractTypeCommissionPolicyInput {
  name: String
  type: CommissionRuleType
  startDate: DateTime
  endDate: DateTime
  rules: [CommonCommissionRuleInput]
  specialRules: [SpecialCommissionPolicyRuleCommonInput]
  settlementDate: DateTime
  settlementDuration: Int
  isActivated: Boolean
  isActive: Boolean
}

input CreateServiceContractTypeInput {
  code: String
  name: String
  description: String
  isActivated: Boolean
  hasNumberSessions: Boolean
  numberSessions: Int
  durationDate: Int
  basePrice: Int
  imageUrl: String
  hasCheckIn: Boolean
  supplierId: ID
  otherImageUrls: [String]
  staffSpecialistIds: [String]
  shopBranchIds: [String]
  isContactRequired: Boolean
  isFixedPrice: Boolean
  isPriceCalculatedLater: Boolean
  customForms: [CustomFormInput]
  customFields: [CustomFieldInput]
  serviceContractTypeCategoryId: ID
  isAllowPaymentToSupplier: Boolean
  isAutoCompletedOnPaid: Boolean
  unitId: ID
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
}

input CreateServiceContractTypePricePolicyInput {
  isActivated: Boolean
  name: String
  rules: [ServiceContractTypePricePolicyRuleInput]
  applyCount: Int
}

input CreateServiceContractTypeSessionLogInput {
  QRString: String!
  shopBranchId: ID!
  serviceContractTypeInServiceContractId: ID
  staffSpecialistId: ID
  note: String
}

input CreateServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput {
  serviceContractTypeId: String!
  point: Int
}

input CreateServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput {
  serviceContractTypeId: String!
  point: Int
}

input CreateServiceContractTypeWithinServiceContractTypeCommissionPolicyInput {
  serviceContractTypeId: ID!
}

input CreateServiceInput {
  """ID cửa hàng"""
  memberId: String

  """Slug"""
  slug: String

  """Tên dịch vụ"""
  name: String!

  """ID danh mục dịch vụ"""
  shopServiceCategoryId: String!

  """Danh sách ID loại dịch vụ"""
  serviceTagIds: [String]!

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String!

  """Giá dịch vụ"""
  price: Float

  """Mô tả dịch vụ"""
  description: String!

  """Hình ảnh"""
  images: [String]

  """video """
  video: String

  """Loại địa điểm có thể chọ AT_SHOP,AT_RESERVER"""
  availableAddressType: [String]!

  """Thời gian tối thiểu để đặt trước: ...... ngày trước ngày hẹn(bắt buộc)"""
  minAdvanceReservationInDay: Int!

  """Thiết lập cho phép/không cho phép thay đổi """
  canChangeReservation: Boolean!

  """ Thời gian tối thiểu để thay đổi: ...... ngày trước ngày hẹn (bắt buộc)
  """
  minAdvanceReservationChangeInDay: Int

  """Thiết lập cho phép/không chop phép hủy"""
  canCancelReservation: Boolean!

  """ Thời gian tối thiểu để hủy: ...... ngày trước ngày hẹn (bắt buộc)"""
  minAdvanceReservationCancelInDay: Int

  """
  Thiết lập chuyên viên phụ trách: cho phép người đặt chọn/không được chọn chuyên viên (bắt buộc)
  """
  canReserverSetSpecialist: Boolean!

  """Danh sách ID Chuyên viên"""
  shopServiceSpecialistIds: [String]

  """Danh sách dịch vụ bổ sung"""
  additionalServices: [AdditionalServiceInput]
}

input CreateServiceReservationInput {
  """ID dịch vụ gốc"""
  serviceId: ID

  """ngày hẹn"""
  reservationDate: DateTime

  """Loại địa điểm AT_SHOP,AT_RESERVER"""
  addressType: [String]

  """Họ và tên người hẹn"""
  reserverFullname: String

  """SDT người hẹn"""
  reserverPhone: String

  """Mã quốc gia (VN,...)"""
  reserverPhoneRegionCode: String

  """ID chi nhánh đặt hẹn"""
  reservationShopBranchId: ID

  """Địa chỉ người đặt hẹn"""
  reservationAddress: PlaceInput

  """ghi chú dịch vụ"""
  note: String

  """hình thức thanh toán CASH"""
  paymentMethod: String

  """ID danh sách chuyên viên phụ trách"""
  shopServiceSpecialistIds: [ID]

  """dịch vụ bổ sung"""
  additionalServiceIds: [ID]
}

input CreateServiceTagInput {
  """Tên tag dịch vụ"""
  name: String!

  """Ảnh"""
  image: String
}

input CreateSettingGroupInput {
  slug: String!
  name: String!
  desc: String
  readOnly: Boolean
}

input CreateSettingInput {
  type: String
  name: String
  key: String
  value: Mixed
  isActive: Boolean
  isPrivate: Boolean
  readOnly: Boolean
  groupId: String
}

input CreateShipmentInput {
  name: String
}

input CreateShopAffiliateInput {
  customerId: String
  recruitedId: String
  referrerPhoneNumber: String
  referrerCode: String
  phone: String
  password: String
  name: String
  email: String
  citizenId: String
  fullAddress: String
  gender: String
  taxCode: String
  bankAccountName: String
  bankAccountNumber: String
  bankName: String
}

input CreateShopAffiliateLabelInput {
  name: String
  description: String
  imageUrl: String
  isActivated: Boolean
  shopAffiliateCount: Int
}

input CreateShopAffiliateLevelDiscountPolicyInput {
  name: String
}

input CreateShopAffiliateRecurringProductCommissionPolicyInput {
  name: String
}

input CreateShopAffiliateRecurringServiceContractTypeCommissionPolicyInput {
  name: String
}

input CreateShopAffiliateRequestInput {
  status: ShopAffiliateRequestStatus
}

input CreateShopAffiliateServiceContractTypeCommissionPolicyInput {
  name: String
}

input CreateShopBranchInput {
  """Mã chi nhánh"""
  code: String

  """Tên chi nhánh"""
  name: String!

  """Số điện thoại"""
  phone: String!

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String!

  """Mã Phường/xã"""
  wardId: String!

  """Mã Quận/huyện"""
  districtId: String!

  """Mã Tỉnh/thành"""
  provinceId: String!

  """hiệu lực hay không hiệu lực"""
  activated: Boolean

  """Toạ độ"""
  location: Mixed!

  """Hình ảnh cover"""
  coverImage: String

  """Mở cửa"""
  isOpen: Boolean
  preBookingTimeSlotConfig: ShopBranchPreBookingTimeSlotConfigInput
}

input CreateShopCategoryInput {
  """Tên phân loại"""
  name: String!

  """Hình ảnh"""
  image: String

  """Mô tả"""
  desc: String

  """Ưu tiên"""
  priority: Int
}

input CreateShopCommentInput {
  """Tên người comment"""
  ownerName: String!

  """Nội dung bình luận"""
  message: String!

  """Điểm đánh giá"""
  rating: Int

  """Trạng thái bình luận PENDING,PUBLIC,HIDDEN"""
  status: String

  """Tag"""
  tags: [ShopTagInput]

  """Hình ảnh"""
  images: [String]
}

input CreateShopDisbursementPeriodInput {
  name: String!
  status: String
  startDateReceivingRequest: DateTime!
  endDateReceivingRequest: DateTime!
  minimumAmountEachRequest: Mixed!
  maximumAmountEachRequest: Mixed
  accountingDate: DateTime!
  expectedPaymentDate: DateTime!
  isWithholdingPersonalIncomeTax: Boolean
  personalIncomeTaxPercent: Int
}

input CreateShoppingCartInput {
  productId: ID
  productAttributeElements: [OrderItemProductAttributeElementInput]
  amount: Float
  note: String
}

input CreateShopPostInput {
  """Tiêu đề"""
  title: String!

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Danh sách chủ đề"""
  topicIds: [String]

  """Các key word cho SEO"""
  keywords: String
  accountTypeDisplay: EAccountTypeDisplayPost
}

input CreateShopPostTagInput {
  """Tên tag"""
  name: String!

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

input CreateShopRegistrationInput {
  """Email"""
  email: String!

  """Số điện thoại"""
  phone: String!

  """Họ tên"""
  name: String!

  """Mã cửa hàng"""
  shopCode: String!

  """Tên cửa hàng"""
  shopName: String!

  """Logo cửa hàng"""
  shopLogo: String

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Ngày sinh"""
  birthday: DateTime

  """Giới tính male,female,other"""
  gender: String

  """Trạng thái PENDING,APPROVED,REJECTED"""
  status: String

  """Ngày duyệt"""
  approvedAt: DateTime

  """Ngày từ chối"""
  rejectedAt: DateTime

  """Tài khoản chủ shop"""
  memberId: ID

  """Phân loại cửa hàng"""
  categoryId: ID

  """Mật khẩu"""
  password: String

  """Id khách hàng"""
  customerId: ID
  parentMemberId: ID

  """Mã số thuế"""
  taxCode: String

  """Loại chủ shop BRANCH,SALE,AGENCY,DISTRIBUTOR"""
  memberType: String!
}

input CreateShopSaleFeedInput {
  """Tên bản tin"""
  name: String!

  """Mô tả ngắn"""
  snippet: String

  """Hướng dẫn"""
  tips: String

  """Nội dung"""
  contents: [SaleFeedContentInput]!

  """Mã sản phẩm"""
  productId: ID!

  """Trạng thái"""
  active: Boolean

  """Ưu tiên"""
  priority: Int

  """Công khai"""
  isPublic: Boolean
}

input CreateShopServiceCategoryInput {
  """Tên danh mục dịch vụ"""
  name: String!
}

input CreateShopServiceSpecialistInput {
  """Tên"""
  name: String!

  """avatar"""
  avatar: String!

  """SDT quốc tế"""
  phone: String!

  """Mã quốc gia (VD: VN...)"""
  regionCode: String

  """Email"""
  email: String

  """Danh sách ID Chuyên môn phụ trách"""
  shopServiceCategoryIds: [String]

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  address: PlaceInput
}

input CreateShopTableInput {
  name: String!
  code: String

  """Id chi nhanh"""
  branchId: ID!
}

input CreateShopTopicInput {
  """Tên chủ đề"""
  name: String!

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

input CreateShopVideoInput {
  """Tên video"""
  name: String

  """Link video"""
  link: String

  """Link thumbnail"""
  thumbnail: String

  """Mô tả"""
  description: String

  """Kích hoạt"""
  active: Boolean

  """Ưu tiên"""
  priority: Int
}

input CreateShopVoucherInput {
  """Mã khuyến mãi"""
  code: String!

  """Mô tả"""
  description: String!

  """Kích hoạt"""
  isActive: Boolean

  """Loại giảm giá"""
  type: String!
  applyForOrder: EShopVoucherApplyForOrder

  """
  Có giới hạn số lượng phát hành hay không, nếu TRUE thì sẽ quan tâm đến
  issueNumber và issueByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveIssueNumber: Boolean

  """
  Tổng số lượng phát hành , nếu issueByDate=false thì đây sẽ tổng số lượng phát
  hành xuyên suốt, còn nếu issueByDate=true thì đây sẽ tổng số lượng phát hành
  theo từng ngày(NUMBER)
  """
  issueNumber: Int

  """issueNumber có phải là phát hành theo từng ngày hay không (TRUE/FALSE)"""
  issueByDate: Boolean

  """
  Có giới hạn số lượng sử dụng hay không, nếu TRUE thì sẽ quan tâm đên useLimit
  và useLimitByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveUseLimit: Boolean

  """
  Tổng số lượng giới hạn mỗi khách có thể sử dụng, nếu useLimitByDate=false thì
  đây là tổng giới hạn voucher mỗi khách có thể dụng trong xuyên suốt, còn nếu
  useLimitByDate=true thì đây là tổng giới hạn voucher mỗi khách có thể sử dụng
  mỗi ngày  (NUMBER)
  """
  useLimit: Int

  """
  useLimit có phải là giới hạn số lượng voucher mỗi khác theo mỗi ngày hay không (TRUE/FALSE)
  """
  useLimitByDate: Boolean

  """Đơn vị giảm giá"""
  discountUnit: String

  """Giá trị giảm giá"""
  discountValue: Float

  """Giảm giá tối đa"""
  maxDiscount: Float

  """Sản phẩm quà tặng"""
  offerItems: [OfferItemInput]

  """Sản phẩm quà tặng"""
  offerItemGroups: [[OfferItemInput]]

  """Sản phẩm theo nhóm 2"""
  offerItemGroups2: [OfferItemGroupInput]

  """Sản phẩm giảm giá"""
  discountItems: [DiscountItemInput]

  """Các sản phẩm áp dụng"""
  applyItemIds: [String]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyItem: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyItem: Boolean

  """Các sản phẩm không áp dụng"""
  exceptItemIds: [String]

  """Các dịch vụ áp dụng"""
  applyServiceContractTypeIds: [ID]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyServiceContractType: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyServiceContractType: Boolean

  """Các sản phẩm không áp dụng"""
  exceptServiceContractTypeIds: [ID]

  """Tổng tiền hàng tối thiểu"""
  minSubtotal: Float

  """Phương thức thanh toán áp dụng"""
  applyPaymentMethods: [String]

  """Số lượng sản phẩm tối thiểu"""
  minItemQty: Int

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Mã giảm giá riêng tư"""
  isPrivate: Boolean

  """Mã giảm giá chỉ dành cho tặng cá nhân"""
  isPersonal: Boolean

  """Hình ảnh"""
  image: String

  """Nội dung html"""
  content: String

  """Đồng giá"""
  samePrice: Float

  """Áp dụng tất cả sản phẩm"""
  offerAllItem: Boolean

  """Số lượng tặng"""
  offerQty: Int

  """Ưu tiên sản phẩm giá cao"""
  offerHighestPrice: Boolean

  """Tụ động thêm sản phẩm ưu đãi"""
  autoAddOfferItem: Boolean

  """Ngày trong tuần áp dụng : từ 1-7 với 1=Thứ 2, 7= Chủ nhật"""
  applyISODayOfWeek: [Int]

  """Khung giờ áp dụng, [ ['HH:mm:ss','HH:mm:ss'] ]"""
  applyTimeOfDay: [[String]]
  receiveShopVoucherThrough: EReceiveShopVoucherThrough
  applyType: PricePolicyApplyType
}

input CreateShopVoucherSharingPolicyInput {
  name: String
  minigameId: String
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
}

input CreateShopVoucherWithinShopVoucherSharingPolicyInput {
  shopVoucherId: ID
  minigameVoucherGroupId: String
  amountBonus: Int
}

input CreateSpecsTemplateInput {
  name: String!
  specs: [SpecInput]
}

input CreateStaffInput {
  """Email đăng nhập"""
  username: String!

  """Mật khẩu"""
  password: String!

  """Tên nhân viên"""
  name: String!
  branchId: ID

  """Mã chi nhánh"""
  shopBranchIds: [ID]!

  """Điện thoại nhân viên"""
  phone: String

  """Ảnh đại diện"""
  avatar: String

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  fullAddress: PlaceInput

  """Danh sách phân quyền REPORT,MANAGER,BRANCH,WAREHOUSE,ORDER"""
  scopes: [String]
}

input CreateStaffPermissionInput {
  shopBranchId: ID!
  staffId: ID!
  permissions: [StaffPermissionGroupInput]
}

input CreateSubscriptionMinigameInput {
  isActive: Boolean
  applicationId: String
  name: String
  description: String
  shortDescription: String
  price: Int
  image: String
  durationOfDay: Int
  index: Int
}

input CreateSubscriptionPackageInput {
  """Mã gói"""
  code: String!

  """Tên gói"""
  name: String!

  """Mô tả"""
  desc: String

  """Giá bán"""
  sellPrice: Float!

  """Giá gốc"""
  basePrice: Float

  """Tính năng"""
  features: [PackageFeatureInput]

  """Đường dẫn"""
  url: String

  """Số tháng"""
  month: Int!

  """Kích hoạt"""
  active: Boolean
}

input CreateSubscriptionRequestInput {
  plan: String!
}

input CreateSupplierInput {
  isActivated: Boolean
  phone: String
  name: String
  code: String
  imageUrl: String
  address: String
  note: String
  taxCode: String
  shopBranchId: ID
  memberId: ID
  paymentConfig: SupplierPaymentConfigInput
}

input CreateSupportTicketCommentInput {
  """Mã yêu cầu"""
  ticketId: ID!

  """Nội dung"""
  message: String!

  """Hình ảnh"""
  images: [String]
}

input CreateSupportTicketInput {
  """Nội dung yêu cầu"""
  name: String!

  """Mô tả chi tiết"""
  desc: String

  """Danh sách hình ảnh"""
  images: [String]
}

input CreateTabInput {
  """Tên tab thông tin sản phẩm"""
  name: String!

  """Độ ưu tiên"""
  priority: Int
}

input CreateTableInput {
  shopBranchId: ID
  code: String
  name: String
  description: String
  seatNumber: Int
  status: ETableStatus
}

input CreateTascoInsuranceConfigInput {
  name: String
}

input CreateTaskInput {
  name: String
  description: String
  taskType: ETaskType
  rewardType: ERewardType
  rewardAmount: Mixed
  rewardText: String
  criteriaForReward: Mixed
  isRecurring: Boolean
  isEnabled: Boolean
  promotionId: ID
  shopVoucherId: ID
  hasApplyForSpecialServiceContractTypes: Boolean
  applyForServiceContractTypeIds: [ID]
  imageUrl: String
}

input CreateTemplateConfigBannerInput {
  type: ETemplateConfigBannerType
  imageUrl: String
  pageDisplay: ETemplatePage
  priority: Int
  title: TemplateConfigItemInput
  content: TemplateConfigItemInput
  button: TemplateConfigItemInput
  isActivated: Boolean
  link: String
}

input CreateThreadInput {
  """Kênh trao đổi member,customer"""
  channel: String

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID
}

input CreateThreadLabelInput {
  """Tên nhãn"""
  name: String

  """Màu sắc"""
  color: String
}

input CreateThreadMessageInput {
  """Mã cuộc trao đổi"""
  threadId: ID!

  """Loại tin nhắn general"""
  type: String

  """Tin nhắn"""
  text: String

  """Dữ liệu đính kèm"""
  attachment: Mixed
}

input CreateThreadNoteInput {
  """Mã thread"""
  threadId: ID!

  """Nội dung"""
  text: String!

  """Đính kèm"""
  attachment: String
}

input CreateTopicInput {
  """Đánh dấu ẩn"""
  isHidden: Boolean

  """Tên chủ đề"""
  name: String!

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

input CreateTriggerGroupInput {
  """Tên nhóm trigger"""
  name: String!

  """Mô tả"""
  description: String

  """Danh sách trigger"""
  triggerIds: [ID]
}

input CreateTriggerInput {
  """Mã trigger"""
  code: String

  """Tên trigger"""
  name: String!

  """Kích hoạt"""
  active: Boolean

  """Sự kiện kích hoạt"""
  event: String

  """Hành động"""
  actions: [Mixed]

  """Nhóm trigger"""
  triggerGroupId: ID!
}

input CreateUnitInput {
  code: String
  name: String
  applyType: EUnitApplyType
  isActivated: Boolean
}

input CreateUserAccessLogInput {
  platform: EPlatform
}

input CreateUserInput {
  email: String!
  password: String!
  name: String
  phone: String
  address: String
  avatar: String
  provinceId: String
  districtId: String
  wardId: String

  """ADMIN|SUPER_ADMIN|EDITOR"""
  role: String
}

input CreateVoucherGroupMinigameInput {
  description: String
  name: String
  image: String
  expirationType: EVoucherGroupExpirationTypeMinigame
  usageType: EVoucherUsageTypeMinigame
  totalUsage: Int
  hasLimitUsagePerDay: Boolean
  limitUsagePerDay: Int
  type: EVoucherGroupTypeMinigame
}

input CreateWarehouseProductAuditInput {
  shopBranchId: ID!
  auditDate: DateTime
  notes: String
  imageUrls: [String]
}

input CreateWarehouseProductHistoryInput {
  name: String
}

input CreateWriterGroupInput {
  """Tên đơn vị đăng tin"""
  name: String!

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Độ ưu tiên"""
  priority: Int

  """Danh sách ID chủ đề """
  topicIds: [String]
}

input CreateWriterInput {
  """Email đăng nhập"""
  email: String!

  """Password đăng nhập"""
  password: String!

  """Họ và tên"""
  name: String

  """Ảnh đại diện"""
  avatar: String

  """Sô điện thoại"""
  phone: String

  """Mã quốc gia (VN,...)"""
  regionCode: String

  """Địa chỉ liên hệ"""
  address: PlaceInput!

  """ID đơn vị đăng tin - writerGroup"""
  groupId: ID
}

input CreateWriterNotificationInput {
  """Mã bài viết"""
  postId: String!

  """Trạng thái bài viết APPROVED,REJECTED"""
  approveStatus: String!

  """Lý do từ chối"""
  reason: String

  """Mã tác giả"""
  writerId: String
}

input CreateYoutubeVideoGroupInput {
  """Tên nhóm"""
  name: String!

  """slug"""
  slug: String!

  """Hình ảnh"""
  image: String

  """nhóm"""
  group: String

  """Độ ưu tiên"""
  priority: Int
}

input CreateZaloMiniAppConfigInput {
  UISetting: UISettingZaloMiniAppConfigInput
  code: String
  name: String
  zaloMiniAppId: String
  isActivated: Boolean
}

input CreateZaloMiniAppShopDisplayConfigInput {
  zaloMiniAppConfigId: ID
  memberId: ID
}

input CreateZaloOASendMessageSettingInput {
  name: String
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  content: String
  imageUrls: [String]
  isActivated: Boolean
}

input CreateZaloOaSendMessageSettingMinigameInput {
  isActive: Boolean
  type: ENotificationSettingType
  triggerType: EMinigameNotificationTriggerType
  imageUrl: String
  content: String
}

input CreateZaloOASettingInput {
  name: String
}

input CreateZaloUidInput {
  name: String
}

type CrossSale {
  id: String

  """Mã sản phẩm"""
  productId: ID

  """Mã thanh vien ban"""
  sellerId: ID
  createdAt: DateTime
  updatedAt: DateTime

  """Tên sản phẩm"""
  productName: String
  product: Product
}

type CrossSalePageData {
  data: [CrossSale]
  total: Int
  pagination: Pagination
}

type CumulativePointLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Giá trị"""
  value: String

  """
  Loại sự kiện RECEIVE_FROM_ORDER|RECEIVE_FROM_RESIS_SERVICE|RECEIVE_FROM_REGIS_SMS|RECEIVE_FROM_INVITE|RECEIVE_FROM_LUCKY_WHEEL_MOBIFONE|RECEIVE_FROM_LUCKY_WHEEL_SHOPPER
  """
  type: String

  """Mã đơn hàng"""
  orderId: ID

  """Ghi chú"""
  note: String
  order: Order
}

type CumulativePointLogPageData {
  data: [CumulativePointLog]
  total: Int
  pagination: Pagination
}

type CustomCard {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  type: ECustomCardType
  memberId: ID
  customCardConfig: CustomCardConfig
}

type CustomCardConfig {
  width: Int
  height: Int
  backgroundColor: String
  backgroundImageUrl: String
  elements: [CustomCardElement]
}

input CustomCardConfigInput {
  width: Int
  height: Int
  backgroundColor: String
  backgroundImageUrl: String
  elements: [CustomCardElementInput]
}

type CustomCardElement {
  type: ECustomCardElementType
  position: CustomCardElementPosition
  size: CustomCardElementSize
  color: String
  content: String
  font: CustomCardTextElementFont
  shape: ECustomCardShapeType
  url: String
  cropShape: ECustomCardImageCropShapeType
}

input CustomCardElementInput {
  type: ECustomCardElementType
  position: CustomCardElementPositionInput
  size: CustomCardElementSizeInput
  color: String
  content: String
  font: CustomCardTextElementFontInput
  shape: ECustomCardShapeType
  url: String
  cropShape: ECustomCardImageCropShapeType
}

type CustomCardElementPosition {
  x: Int
  y: Int
}

input CustomCardElementPositionInput {
  x: Int
  y: Int
}

type CustomCardElementSize {
  width: Int
  height: Int
}

input CustomCardElementSizeInput {
  width: Int
  height: Int
}

type CustomCardPageData {
  data: [CustomCard]
  total: Int
  pagination: Pagination
}

type CustomCardTextElementFont {
  style: String
  variant: String
  weight: String
  size: Int
  family: String
}

input CustomCardTextElementFontInput {
  style: String
  variant: String
  weight: String
  size: Int
  family: String
}

input CustomDataDeliveryServicesForOrderInput {
  shopBranchId: String
  latitude: Float
  longitude: Float
  provinceId: String
  districtId: String
  wardId: String
  height: Int
  width: Int
  length: Int
  weight: Int
}

type Customer {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Shop"""
  member: Member

  """Mã khách hàng"""
  code: String

  """Tên khách hàng"""
  name: String

  """Tên facebook"""
  facebookName: String

  """UID Firebase"""
  uid: String

  """Số điện thoại"""
  phone: String

  """Email"""
  email: String

  """Số chứng minh nhân dân"""
  idCard: String

  """Avatar"""
  avatar: String

  """Giới tính male,female,other"""
  gender: String

  """Ngày sinh"""
  birthday: DateTime

  """Địa chỉ"""
  address: String

  """Full địa chỉ"""
  fullAddress: String

  """Ghi chú địa chỉ"""
  addressNote: String

  """Tỉnh / thành"""
  province: String

  """Quận / huyện"""
  district: String

  """Phường / xã"""
  ward: String

  """Mã Tỉnh / thành"""
  provinceId: String

  """Mã Quận / huyện"""
  districtId: String

  """Mã Phường / xã"""
  wardId: String

  """Điểm tích lũy"""
  cumulativePoint: Float

  """Hoa hồng cộng tác viên"""
  commission: Float

  """Danh sách account facebook của người dùng"""
  pageAccounts: [CustomerPageAccount]

  """Là cộng tác viên"""
  isCollaborator: Boolean

  """Danh sách shop đang cộng tác """
  collaboratorShops: [Member]
  collaboratorId: ID

  """Cộng tác viên"""
  collaborator: Collaborator

  """Mã người giới thiệu"""
  presenterId: ID

  """KH Giới thiệu"""
  presenter: Customer

  """Người dùng subscriber"""
  manychatSubscriber: Mixed

  """Mã PSID Facebook"""
  psid: Mixed

  """Mã follower Zalo"""
  followerId: String

  """Người dùng Zalo"""
  zaloFollower: Mixed

  """Mã global customer"""
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  latitude: Float
  longitude: Float

  """Khách hàng là đại lý"""
  isAgency: Boolean

  """Thời gian trở thành đại lý"""
  isAgencyAt: DateTime

  """Khách hàng là nhà phân phối"""
  isDistributor: Boolean

  """Thời gian trở thành nhà phân phối"""
  isDistributorAt: DateTime

  """Tổng tiền hàng đã mua thành công"""
  totalOrderAmountCompleted: Mixed
  affiliateId: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  refererAffiliateId: String
  refererAffiliate: ShopAffiliate
  citizenId: String
  hasPassword: Boolean
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  currentDebt: Mixed
  totalDebtPaid: Mixed
  statisticProductSalesBonusPolicy: [CustomerStatisticProductSalesBonusPolicy]
  walletTypesAvailable: [EWalletType]
  wallets: [Wallet]
  orderStats: CustomerOrderStats

  """Mã trao đổi"""
  threadId: ID
  thread: Thread

  """Ví Momo"""
  momoWallet: CustomerMomoWallet
  rewardPointStats: CustomerRewardPointStats

  """Số đơn hàng"""
  order: Int
}

type CustomerAddress {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã khách hàng"""
  customerId: ID

  """Mã tỉnh/thành"""
  provinceId: String

  """Mã quận/huyện"""
  districtId: String

  """Mã phường/xã"""
  wardId: String

  """Tỉnh/ thành"""
  province: String

  """Quận/ huyện"""
  district: String

  """Phường/ xã"""
  ward: String

  """Địa chỉ"""
  address: String

  """Toạ độ vị trí"""
  location: Mixed

  """Địa chỉ mặc định"""
  isDefault: Boolean
}

type CustomerAddressPageData {
  data: [CustomerAddress]
  total: Int
  pagination: Pagination
}

type CustomerCommissionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã cộng tác viên"""
  collaboratorId: ID

  """Giá trị"""
  value: String

  """Loại sự kiện RECEIVE_COMMISSION_2_FROM_ORDER"""
  type: String

  """Mã đơn hàng"""
  orderId: ID

  """Ghi chú"""
  note: String
  order: Order
  member: Member
  customer: Customer
  collaborator: Collaborator
  returnMemberId: ID
}

type CustomerCommissionLogPageData {
  data: [CustomerCommissionLog]
  total: Int
  pagination: Pagination
}

type CustomerCompletedTask {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type CustomerCompletedTaskPageData {
  data: [CustomerCompletedTask]
  total: Int
  pagination: Pagination
}

type CustomerContact {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Họ tên"""
  name: String

  """Tên doanh nghiệp"""
  companyName: String

  """Điên thoại"""
  phone: String

  """Email"""
  email: String

  """Địa chỉ"""
  address: String

  """Nội dung"""
  message: String

  """Trang thái pending,completed"""
  status: String
}

type CustomerContactPageData {
  data: [CustomerContact]
  total: Int
  pagination: Pagination
}

type CustomerGroup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Tên nhóm"""
  name: String

  """Bộ lọc"""
  filter: Mixed

  """Tổng số KH"""
  summary: Int
}

type CustomerGroupPageData {
  data: [CustomerGroup]
  total: Int
  pagination: Pagination
}

type CustomerGroupResource {
  """Mã resource"""
  id: String

  """Tên resource"""
  name: String

  """Loại resource"""
  type: String

  """Dữ liệu kèm theo"""
  meta: Mixed
}

type CustomerLoginData {
  customer: Customer
  token: String
}

type CustomerMomoWallet {
  """
  Trạng thái none,processing,invalid,wallet_invalid,walled_not_found,valid
  """
  status: String

  """Thông báo trạng thái"""
  statusMsg: String

  """Số điện thoại"""
  phone: String

  """Số CMND"""
  idCard: String

  """Tên"""
  name: String

  """Ngày tạo"""
  submitAt: DateTime

  """Ngày cập nhật"""
  updateAt: DateTime
}

type CustomerOrderStats {
  """Tổng doanh số"""
  revenue: Float

  """Tổng số lượng voucher sử dụng"""
  voucher: Int

  """Tổng giảm giá"""
  discount: Float

  """Tổng đơn hàng"""
  total: Int

  """Tỏng đơn huỷ"""
  completed: Int

  """Tổng đơn huỷ"""
  canceled: Int
}

type CustomerPageAccount {
  """PSID người dùng"""
  psid: Mixed

  """ID của Fanpage"""
  pageId: String

  """Mã thành viên"""
  memberId: ID
  member: Member
}

type CustomerPageData {
  data: [Customer]
  total: Int
  pagination: Pagination
}

type CustomerPointLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  customerId: ID

  """Giá trị"""
  value: Float

  """
  Loại sự kiện RECEIVE_FROM_ORDER,RECEIVE_FROM_RESIS_SERVICE,RECEIVE_FROM_REGIS_SMS,RECEIVE_FROM_INVITE,RECEIVE_FROM_LUCKY_WHEEL,PAY_TO_PLAY_LUCKY_WHEEL
  """
  type: String

  """Mã đơn hàng"""
  orderId: ID

  """Mã lịch sử quay vòng quay may mắn"""
  luckyWheelResultId: ID

  """Loại sự kiện"""
  note: String
  order: Order
  luckyWheelResult: LuckyWheelResult
}

type CustomerPointLogPageData {
  data: [CustomerPointLog]
  total: Int
  pagination: Pagination
}

type CustomerPublic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Shop"""
  member: Member

  """Mã khách hàng"""
  code: String

  """Tên khách hàng"""
  name: String

  """Tên facebook"""
  facebookName: String

  """UID Firebase"""
  uid: String

  """Số điện thoại"""
  phone: String

  """Email"""
  email: String

  """Số chứng minh nhân dân"""
  idCard: String

  """Avatar"""
  avatar: String

  """Giới tính male,female,other"""
  gender: String
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  walletTypesAvailable: [EWalletType]
  wallets: [Wallet]
}

type CustomerReport {
  summary: Mixed
  topOrder: Mixed
  topRevenue: Mixed
}

type CustomerRewardPointStats {
  """Tổng điểm còn lại"""
  total: Int
}

type CustomerStatisticProductCommissionPolicy {
  status: String
  totalRevenue: Mixed
}

type CustomerStatisticProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type CustomerStats {
  """Số lượng khách hàng"""
  customersCount: Int
}

type CustomerVoucher {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã"""
  code: String

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã voucher"""
  voucherId: ID

  """Mã voucher"""
  voucherCode: String

  """Số lượng phát hành"""
  issueNumber: Int

  """Số lượng đã sử dụng"""
  used: Int

  """Ngày hết hạng"""
  expiredDate: DateTime

  """Trạng thái voucher STILL_ALIVE,EXPIRED"""
  status: String

  """Lịch sử sử dụng"""
  logs: [CustomerVoucherLog]
  voucher: ShopVoucher
}

type CustomerVoucherLog {
  id: String

  """Ngày log"""
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã voucher"""
  shopVoucherId: ID
  customerVoucherId: ID
  globalCustomerId: ID

  """Mã đơn hàng"""
  orderId: ID
  globalCustomer: GlobalCustomer
  shopVoucher: ShopVoucher
  customer: Customer
  member: Member
  order: Order

  """Mã log"""
  _id: ID

  """Giảm giá"""
  discount: Float
}

type CustomerVoucherLogPageData {
  data: [CustomerVoucherLog]
  total: Int
  pagination: Pagination
}

type CustomerVoucherPageData {
  data: [CustomerVoucher]
  total: Int
  pagination: Pagination
}

type CustomField {
  category: EEntryCategory
  key: String
  label: String!
  type: EFieldType!
  required: Boolean
  children: [CustomField]
  childrenFieldMode: EChildrenFieldMode
  minSelections: Int
  maxSelections: Int
  helpText: String
  applicableStage: ECustomFieldStage
  options: [CustomField]
}

type CustomFieldData {
  key: String!
  label: String
  type: EFieldType
  category: EEntryCategory
  childrenFieldMode: EChildrenFieldMode
  value: Mixed
}

input CustomFieldDataInput {
  key: String!
  label: String
  type: EFieldType
  category: EEntryCategory
  childrenFieldMode: EChildrenFieldMode
  value: Mixed
}

input CustomFieldInput {
  category: EEntryCategory
  key: String
  label: String!
  type: EFieldType!
  required: Boolean
  children: [CustomFieldInput]
  childrenFieldMode: EChildrenFieldMode
  minSelections: Int
  maxSelections: Int
  helpText: String
  applicableStage: ECustomFieldStage
  options: [CustomFieldInput]
}

type CustomForm {
  key: String
  title: String
  content: String
  fields: [CustomField]
}

type CustomFormData {
  key: String
  title: String
  content: String
  fields: [CustomFieldData]
}

input CustomFormDataInput {
  key: String
  title: String
  content: String
  fields: [CustomFieldDataInput]
}

input CustomFormInput {
  key: String
  title: String
  content: String
  fields: [CustomFieldInput]
}

input CustomOrderToGoShipInput {
  isShopPaysShipping: Boolean
  cod: Int
  height: Int
  width: Int
  length: Int
  weight: Int
  metadata: String
}

type DataSet {
  label: String
  data: [Float]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Debt {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  customerId: ID
  referenceType: EDebtReferenceType
  orderId: ID
  customer: Customer
  product: Product
  serviceContract: ServiceContract
  serviceContractId: ID
  referenceCode: String

  """số tiền gốc"""
  originalAmount: Mixed

  """số tiền còn lại cần thanh toán"""
  outstandingAmount: Mixed

  """ ngày thanh toán (thời điểm status chuyển sang EDebtStatus.PAID)"""
  paidDate: DateTime
  status: EDebtStatus
}

type DebtAllocation {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type DebtAllocationPageData {
  data: [DebtAllocation]
  total: Int
  pagination: Pagination
}

type DebtPageData {
  data: [Debt]
  total: Int
  pagination: Pagination
}

type DebtPaymentRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  customerId: ID
  customer: Customer
  amountPayment: Mixed
  paymentMethod: EPaymentMethod
  paymentStatus: EPaymentStatus
  paidDate: DateTime
  paymentMeta: PaymentMeta
  description: String
}

type DebtPaymentRequestPageData {
  data: [DebtPaymentRequest]
  total: Int
  pagination: Pagination
}

type DefaultAccounts {
  """Tài khoản hàng tồn kho"""
  inventory: String

  """Tài khoản giá vốn hàng bán"""
  costOfGoodsSold: String

  """Tài khoản doanh thu bán hàng"""
  revenue: String

  """Tài khoản chiết khấu thương mại"""
  salesDiscount: String

  """Tài khoản hàng bán bị trả lại"""
  salesReturn: String
}

input DefaultAccountsInput {
  inventory: String
  costOfGoodsSold: String
  revenue: String
  salesDiscount: String
  salesReturn: String
}

type DeleteAllEvoucherItemsData {
  deletedCount: Int
  remainCount: Int
}

type DeliveryAddressConfig {
  administrativeAddressConfig: DeliveryAddressDetailConfig
  coordinateBasedAddressConfig: DeliveryAddressDetailConfig
}

input DeliveryAddressConfigInput {
  administrativeAddressConfig: DeliveryAddressDetailConfigInput
  coordinateBasedAddressConfig: DeliveryAddressDetailConfigInput
}

type DeliveryAddressDetailConfig {
  isActivated: Boolean
}

input DeliveryAddressDetailConfigInput {
  isActivated: Boolean
}

type DeliveryInfo {
  """Tên người gửi *"""
  senderFullname: String

  """Số điện thoại người gửi"""
  senderTel: String

  """Địa chỉ gửi"""
  senderAddress: String

  """Mã phường người gửi"""
  senderWardId: String

  """Mã tỉnh người gửi"""
  senderProvinceId: String

  """Mã quận người gửi"""
  senderDistrictId: String

  """Tên người nhận"""
  receiverFullname: String

  """Địa chỉ nhận"""
  receiverAddress: String

  """Phone người nhận"""
  receiverTel: String

  """Mã tỉnh người nhận"""
  receiverProvinceId: String

  """Mã quận người nhận"""
  receiverDistrictId: String

  """Mã phường người nhận"""
  receiverWardId: String

  """
  Loại địa chỉ người nhận '1=Nhà riêng | 2=Cơ quan | null=Không có thông tin'
  """
  receiverAddressType: Int

  """Tên Dịch vụ của đơn vị vận chuyển Ví dụ : Tiêu chuẩn"""
  serviceName: String

  """Icon Dịch vụ"""
  serviceIcon: String

  """Tên đơn vị vận chuyển Ví dụ : Ahamove, SPX Express"""
  deliveryName: String

  """Mã đơn của Đơn Vị Vận Chuyển Ví dụ : ABC123124"""
  deliveryCode: String

  """Logo của đơn vị vận chuyển"""
  deliveryIcon: String

  """Mã hóa đơn liên quan"""
  orderCode: String

  """Nội dung hàng"""
  packageContent: String

  """Trọng lượng (gr)"""
  weightEvaluation: Int

  """Chiều rộng (cm)"""
  widthEvaluation: Int

  """Chiều dài (cm)"""
  lengthEvaluation: Int

  """Chiều cao (cm)"""
  heightEvaluation: Int

  """Số tiền thu hộ"""
  codAmountEvaluation: Float

  """Cho xem hàng không ?"""
  isPackageViewable: Boolean

  """Hình thức thu gom [object Object],[object Object]"""
  pickupType: Int

  """Giá trị đơn hàng tạm tính"""
  orderAmountEvaluation: Float

  """Cộng thêm cước vào phí thu hộ"""
  isReceiverPayFreight: Boolean

  """Yêu cầu khác"""
  customerNote: String

  """Báo phát"""
  useBaoPhat: Boolean

  """Hóa đơn"""
  useHoaDon: Boolean

  """Mã khách hàng"""
  customerCode: String

  """Mã nhà cung cấp"""
  vendorId: String

  """Code đơn vận"""
  itemCode: String

  """Mã đơn vận"""
  orderId: String

  """Thời gian tạo đơn"""
  createTime: String

  """Cập nhật lần cuối"""
  lastUpdateTime: String

  """Ngày dự kiến giao hàng"""
  deliveryDateEvaluation: String

  """Thời gian hủy đơn"""
  cancelTime: String

  """Thời gian giao hàng"""
  deliveryTime: String

  """Số lần báo phát"""
  deliveryTimes: Int

  """Mã tình trạng"""
  status: String

  """Tình trạng"""
  statusText: String

  """Phí giao hàng trả cho đối tác"""
  partnerFee: Float

  """Mã giảm giá"""
  promotionCode: String

  """Giảm giá từ đối tác"""
  partnerDiscount: Float

  """Hình ảnh của sản phầm giao hàng"""
  image: String

  """Link theo giỏi đơn hàng"""
  sharedLink: String
}

input DeliveryInfoInput {
  """Tên người gửi *"""
  senderFullname: String!

  """Số điện thoại người gửi"""
  senderTel: String!

  """Địa chỉ gửi"""
  senderAddress: String!

  """Mã phường người gửi"""
  senderWardId: String!

  """Mã tỉnh người gửi"""
  senderProvinceId: String!

  """Mã quận người gửi"""
  senderDistrictId: String!

  """Tên người nhận"""
  receiverFullname: String!

  """Địa chỉ nhận"""
  receiverAddress: String!

  """Phone người nhận"""
  receiverTel: String!

  """Mã tỉnh người nhận"""
  receiverProvinceId: String!

  """Mã quận người nhận"""
  receiverDistrictId: String!

  """Mã phường người nhận"""
  receiverWardId: String!

  """
  Loại địa chỉ người nhận '1=Nhà riêng | 2=Cơ quan | null=Không có thông tin'
  """
  receiverAddressType: Int

  """Mã hóa đơn liên quan"""
  orderCode: String

  """Nội dung hàng"""
  packageContent: String

  """Trọng lượng (gr)"""
  weightEvaluation: Int!

  """Chiều rộng (cm)"""
  widthEvaluation: Int

  """Chiều dài (cm)"""
  lengthEvaluation: Int

  """Chiều cao (cm)"""
  heightEvaluation: Int

  """Số tiền thu hộ"""
  codAmountEvaluation: Float

  """Cho xem hàng không ?"""
  isPackageViewable: Boolean!

  """Giá trị đơn hàng tạm tính"""
  orderAmountEvaluation: Float

  """Cộng thêm cước vào phí thu hộ"""
  isReceiverPayFreight: Boolean

  """Yêu cầu khác"""
  customerNote: String

  """Báo phát"""
  useBaoPhat: Boolean

  """Hóa đơn"""
  useHoaDon: Boolean
  sharedLink: String
}

type DeliveryLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã đơn hàng"""
  orderId: ID

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã vận đơn"""
  deliveryId: String

  """Code vận đơn"""
  deliveryCode: String

  """Mã vận đơn cũ"""
  orderNumber: String

  """Phương thức vận chuyển"""
  shipMethod: String

  """Trạng thái vận chuyển"""
  status: String

  """Thông tin trạng thái vận chuyển"""
  statusName: String

  """Thông tin vận chuyển chi tiết"""
  statusDetail: String

  """Ngày cập nhật trạng thái"""
  statusDate: DateTime

  """Ghi chú vận đơn"""
  note: String

  """Phí thu hộ (Số tiền hàng cần thu hộ - không bao gồm tiền cước)"""
  moneyCollection: Float

  """Phí thu hộ (Số tiền hàng cần thu hộ - không bao gồm tiền cước)"""
  moneyFeeCOD: Float

  """Tổng tiền bao gồm VAT"""
  moneyTotal: Float

  """Thời gian ước tính hoàn thiện"""
  expectedDelivery: String

  """Trọng lượng sản phẩm"""
  productWeight: Float

  """Dịch vụ giao hàng"""
  orderService: String

  """Vị trí hiện tại"""
  locationCurrently: String

  """Chi tiết"""
  detail: String

  """Đơn hàng"""
  order: Order
  image: String
  sharedLink: String
}

type DeliveryLogPageData {
  data: [DeliveryLog]
  total: Int
  pagination: Pagination
}

type DeliveryMethod {
  value: String
  label: String
}

type DeliveryService {
  """Phương thức vận chuyển """
  shipMethod: EShipMethod

  """Tên đơn vị vận chuyển"""
  deliveryName: String
  deliveryLogo: String

  """Mã dịch vụ"""
  serviceId: String

  """Tên dịch vụ"""
  serviceName: String

  """Hình icon"""
  iconUrl: String

  """Thời gian ước tính"""
  duration: String

  """Phí ship cuối dùng"""
  shipFee: Float

  """Phụ phí vận chuyển"""
  shipSurcharge: Float

  """Giảm giá"""
  discount: Float
  requests: [DeliveryServiceRequest]

  """Phí giao hàng cơ bản"""
  baseShipFee: Float

  """Khoảng cách"""
  distance: Float

  """Loại giao hàng"""
  deliveryType: String
  priceDetails: Mixed
  requested: Mixed
  estimatedTime: Mixed
}

type DeliveryServiceRequest {
  name: String
  requestId: String
  iconUrl: String
  type: String
  description: String
  price: Float
  distanceFee: Float
  tierList: [DeliveryServiceRequestTier]
  enable: Boolean
  groupId: String
  transferCod: Boolean
}

type DeliveryServiceRequestTier {
  code: String
  name: String
  price: Float
  priceDescription: String
  description: String
  imageUrl: String
}

type DepositBalanceToWallet {
  depositWalletRequestId: String
  mbQrCode: String
  isSuccess: Boolean
}

input DepositBalanceWalletInput {
  method: EDepositMethod
  amount: Float
}

type DepositWalletRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  customerId: ID
  transactionAmount: Mixed
  referenceLabelCode: String
  transactionPurpose: String
  status: EDepositWalletRequestStatus
}

type DepositWalletRequestPageData {
  data: [DepositWalletRequest]
  total: Int
  pagination: Pagination
}

type DetailDataInvoiceElectronicContract {
  taxCode: String
  username: String
  password: String
  loginUrl: String
}

type DetailedInventoryReport {
  productId: String
  productName: String
  productImageUrl: String
  product: Product
  inventoryStock: Int
  exportedStock: Int
  deliveryPending: Int
  processingOrders: Int
  processableStock: Int
}

input DetailedInventoryReportInput {
  targetDate: DateTime!
  shopBranchIds: [String]
}

type DetailedStatisticsByBookingType {
  preBookingTypeId: ID
  preBookingTypeName: String
  countTotalPreBookings: Int
  countCompletedBookings: Int
  countCancelledBookings: Int
  countPendingBookings: Int
}

type DirectSubordinatesProductSalesBonusByChildShopAffiliate {
  totalRevenueAmount: Mixed
  totalPointAmount: Mixed
  latestCreated: DateTime
  latestUpdate: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  totalOrderCount: Int
}

type DirectSubordinatesProductSalesBonusByChildShopAffiliatePageData {
  data: [DirectSubordinatesProductSalesBonusByChildShopAffiliate]
  total: Int
  pagination: Pagination
}

type DirectSubordinatesProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  disbursementPeriodId: String
  rules: [DirectSubordinatesProductSalesBonusPolicyRule]
  member: Member
  productWithinDirectSubordinatesProductSalesBonusPolicies: [ProductWithinDirectSubordinatesProductSalesBonusPolicy]
  directSubordinatesProductSalesBonusPolicyLogs: [DirectSubordinatesProductSalesBonusPolicyLog]
  totalBonus: Mixed
  shopAffiliateDirectSubordinatesProductSalesBonusPolicy: ShopAffiliateDirectSubordinatesProductSalesBonusPolicy
}

type DirectSubordinatesProductSalesBonusPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  member: Member
  shopAffiliateDirectSubordinatesProductSalesBonusPolicyId: String
  affiliateId: String
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerId: String
  customer: Customer
  customerName: String
  targetAffiliateId: String
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: String
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: String
  targetCustomer: Customer
  targetCustomerName: String
  globalBuyerId: String
  globalBuyer: GlobalCustomer
  buyerId: String
  buyer: Customer
  buyerName: String
  productId: String
  product: Product
  productName: String
  productAttributeElements: [OrderItemProductAttributeElement]
  revenue: Int
  point: Int
  qty: Int
  basePrice: Int
  directSubordinatesProductSalesBonusPolicyId: String
  directSubordinatesProductSalesBonusPolicy: DirectSubordinatesProductSalesBonusPolicy
  orderId: String
  order: Order
  orderCode: String

  """Trạng thái PENDING,APPROVED,CANCELED,DISABLED"""
  status: String
}

type DirectSubordinatesProductSalesBonusPolicyLogPageData {
  data: [DirectSubordinatesProductSalesBonusPolicyLog]
  total: Int
  pagination: Pagination
}

type DirectSubordinatesProductSalesBonusPolicyLogRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

type DirectSubordinatesProductSalesBonusPolicyPageData {
  data: [DirectSubordinatesProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type DirectSubordinatesProductSalesBonusPolicyRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

input DirectSubordinatesProductSalesBonusPolicyRuleInput {
  totalRevenue: Int!
  bonusValue: Float!
}

type Disburse {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: ID

  """Đợt giải ngân"""
  name: String

  """từ ngày"""
  startDate: DateTime

  """đến ngày"""
  endDate: DateTime

  """Trạng thái opening,closed"""
  status: String

  """Ghi chú"""
  note: String

  """Người mở đợt giải ngân"""
  ownerId: ID

  """Người đóng đợt giải ngân"""
  closeById: ID

  """Ngày đóng"""
  closeAt: DateTime
  owner: User
  closeBy: User
  member: Member
}

type DisburseItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã giải ngân"""
  disburseId: ID

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã chủ shop"""
  customerCode: String

  """Điện thoại chủ shop"""
  customerPhone: String

  """Tên chủ shop"""
  customerName: String

  """Giá trị giải ngân"""
  value: Float

  """Trạng thái pending,completed,failed"""
  status: String

  """Dữ liệu kèm theo"""
  meta: Mixed

  """Mã đợt chi"""
  payoutId: ID
  member: Member
  customer: Customer
}

type DisburseItemPageData {
  data: [DisburseItem]
  total: Int
  pagination: Pagination
}

type DisbursementPeriod {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String

  """PENDING,COMPLETE"""
  status: String

  """COMMISSION,PRODUCT_SALES_BONUS,REFERRAL_COMMISSION"""
  type: String
  memberId: String
  member: Member
  disbursementShopAffiliates: [DisbursementShopAffiliate]
  productCommissionPolicyId: String
  productSalesBonusPolicyId: String
  productCommissionPolicy: ProductCommissionPolicy
  productSalesBonusPolicy: ProductSalesBonusPolicy
  amountPending: Mixed
  amountCompleted: Mixed
  amountRejected: Mixed
  amount: Mixed
}

type DisbursementPeriodPageData {
  data: [DisbursementPeriod]
  total: Int
  pagination: Pagination
}

type DisbursementRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  status: String
  memberId: String
  member: MemberPublic
  shopAffiliateName: String
  shopAffiliate: ShopAffiliate
  shopAffiliateId: String
  affiliateId: String
  customerId: String
  globalCustomerId: String
  shopDisbursementPeriodId: String
  shopDisbursementPeriod: ShopDisbursementPeriod
  amountRequestedDisbursement: Mixed
  personalIncomeTaxPercent: Mixed

  """Số dư ví trước khi giải ngân"""
  amountBalanceWalletBeforeDisbursement: Mixed
  personalIncomeTaxAmount: Mixed
  amountReceived: Mixed
  taxCode: String
  bankName: String
  bankAccountNumber: String
  bankAccountName: String
  refusePaymentDate: DateTime
  refusePaymentNote: String
  paymentSuccessDate: DateTime
  paymentSuccessNote: String
  paymentFailedDate: DateTime
  paymentFailedNote: String
}

type DisbursementRequestPageData {
  data: [DisbursementRequest]
  total: Int
  pagination: Pagination
}

type DisbursementShopAffiliate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerName: String
  globalCustomerName: String

  """PENDING,COMPLETE,REJECTED"""
  status: String
  handleDate: DateTime
  memberId: String
  member: Member
  disbursementPeriodId: String
  disbursementPeriod: DisbursementPeriod
  rejectedReason: String

  """Só tiền"""
  amount: Mixed
}

type DisbursementShopAffiliatePageData {
  data: [DisbursementShopAffiliate]
  total: Int
  pagination: Pagination
}

type DisbursePageData {
  data: [Disburse]
  total: Int
  pagination: Pagination
}

type DisbursePayout {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: ID

  """Mã đợt giải ngân"""
  disburseId: ID

  """Người tạo"""
  ownerId: ID

  """Người duyệt"""
  approverId: ID

  """Ngày duyệt hoặc Ngày huỷ"""
  approveAt: DateTime

  """Tên đợt chi"""
  name: String

  """Tổng số tiền chi"""
  amount: Float

  """Số giao dịch"""
  transactionCount: Int

  """Số giao dịch thành công"""
  successCount: Int

  """Số tiên chi thành công"""
  successAmount: Float

  """Số giao dịch thất bại"""
  failedCount: Int

  """Trạng thái chi processing,pending,approved,denied,canceled,error"""
  status: String

  """Nội dung đang xử lý"""
  processingMsg: String

  """Dữ liệu kèm theo"""
  meta: Mixed
}

type DisbursePayoutPageData {
  data: [DisbursePayout]
  total: Int
  pagination: Pagination
}

type DiscountInfoEstimateFeeOrder {
  amount: Float
  success: Boolean
}

type DiscountItem {
  """Mã sản phẩm"""
  productId: ID

  """Đơn vị giảm giá VND,PERCENT"""
  discountUnit: String

  """Giá trị giảm giá"""
  discountValue: Float

  """Giảm giá tối đa"""
  maxDiscount: Float
  product: Product
}

input DiscountItemInput {
  """Mã sản phẩm"""
  productId: ID!

  """Đơn vị giảm giá VND,PERCENT"""
  discountUnit: String!

  """Giá trị giảm giá"""
  discountValue: Float!

  """Giảm giá tối đa"""
  maxDiscount: Float!
}

type DiscountPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type DiscountPolicyPageData {
  data: [DiscountPolicy]
  total: Int
  pagination: Pagination
}

type Disease {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên loại bệnh"""
  name: String!

  """Loại cây liên quan"""
  plantIds: [String]

  """Loại cây liên quan"""
  plants: [Plant]

  """Hình ảnh loại bệnh"""
  image: String
}

type DiseasePageData {
  data: [Disease]
  total: Int
  pagination: Pagination
}

type DisplayContentMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  merchantId: String

  """Mã minigame"""
  minigameId: String

  """Loại khu vực"""
  type: EMinigameDisplayContentType

  """Nội dung tiêu đề"""
  titleContent: String

  """Màu tiêu đề"""
  titleColor: String

  """Sử dụng hình ảnh tiêu đề"""
  shouldUseTitleImage: Boolean

  """Hình ảnh thay thế tiêu đề"""
  titleImage: String

  """Sử dụng hình thay thế"""
  shouldUseImage: Boolean

  """Hình thay thế"""
  image: String

  """Nội dung"""
  content: String

  """Bố cục"""
  gridColumns: Int

  """Minigame"""
  minigame: Minigame
}

input DisplayContentMinigameInput {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  merchantId: String

  """Mã minigame"""
  minigameId: String

  """Loại khu vực"""
  type: EMinigameDisplayContentType

  """Nội dung tiêu đề"""
  titleContent: String

  """Màu tiêu đề"""
  titleColor: String

  """Sử dụng hình ảnh tiêu đề"""
  shouldUseTitleImage: Boolean

  """Hình ảnh thay thế tiêu đề"""
  titleImage: String

  """Sử dụng hình thay thế"""
  shouldUseImage: Boolean

  """Hình thay thế"""
  image: String

  """Nội dung"""
  content: String

  """Bố cục"""
  gridColumns: Int
}

type DisplayMinigame {
  """Unique identifier for the display settings"""
  id: String

  """Timestamp for when the display settings were created"""
  createdAt: DateTime

  """Timestamp for the last update of the display settings"""
  updatedAt: DateTime

  """Timestamp for when the display settings were deleted"""
  deletedAt: DateTime

  """Indicates if the display settings are currently active"""
  isActive: Boolean

  """Identifier for the associated application"""
  applicationId: String

  """Identifier for the associated merchant"""
  merchantId: String

  """Primary color for the display"""
  primaryColor: String

  """Background color for the display"""
  backgroundColor: String

  """Text color for the display"""
  textColor: String

  """Form label text color"""
  formLabelColor: String

  """Content of the display title"""
  titleContent: String

  """Color of the display title"""
  titleColor: String

  """Whether to display an image in the title section"""
  shouldUseTitleImage: Boolean

  """URL or data for the title image (if used)"""
  titleImage: String

  """Whether the remaining time for the minigame should be shown"""
  shouldShowDurationTime: Boolean

  """Main image used in the minigame's display"""
  primaryImage: Mixed

  """Text displayed on the join button"""
  joinButtonContent: String

  """Color of the join button"""
  joinButtonColor: String

  """Whether to use a custom image for the join button"""
  shouldUseJoinButtonImage: Boolean

  """URL or data for the join button image (if used)"""
  joinButtonImage: String

  """Content of the play button"""
  playButtonContent: Mixed

  """Color of the play button"""
  playButtonColor: Mixed

  """Whether to use a custom image for the play button"""
  shouldUsePlayButtonImage: Boolean

  """URL or data for the play button image (if used)"""
  playButtonImage: String

  """Custom image for the rule button"""
  ruleButtonImage: Mixed

  """Custom image for the reward button"""
  rewardButtonImage: Mixed

  """Custom image for the history button"""
  historyButtonImage: Mixed

  """URL or data for the wallet button image"""
  walletButtonImage: String

  """URL or data for the background image"""
  backgroundImage: String

  """Whether to use a custom wheel template (for wheel-based games)"""
  shouldUseCustomWheelTemplate: Boolean

  """Custom border image for the minigame"""
  borderImage: Mixed

  """Custom wheel image (if applicable)"""
  wheelImage: Mixed

  """Custom pin image (if applicable)"""
  pinImage: Mixed

  """Merchant name displayed in the footer"""
  footerMerchantName: String

  """Merchant logo displayed in the footer"""
  footerLogo: String

  """Merchant address displayed in the footer"""
  footerAddress: String

  """Merchant email displayed in the footer"""
  footerEmail: String
  footerFacebookUrl: String
  footerYoutubeUrl: String
  shouldDisplayRewardImage: Boolean
  shouldDisplayRewardName: Boolean
  giftImage: String
  numberGiftDisplay: Int
}

input DisplayMinigameInput {
  """Unique identifier for the display settings"""
  id: String

  """Timestamp for when the display settings were created"""
  createdAt: DateTime

  """Timestamp for the last update of the display settings"""
  updatedAt: DateTime

  """Timestamp for when the display settings were deleted"""
  deletedAt: DateTime

  """Indicates if the display settings are currently active"""
  isActive: Boolean

  """Identifier for the associated application"""
  applicationId: String

  """Identifier for the associated merchant"""
  merchantId: String

  """Primary color for the display"""
  primaryColor: String

  """Background color for the display"""
  backgroundColor: String

  """Text color for the display"""
  textColor: String

  """Form label text color"""
  formLabelColor: String

  """Content of the display title"""
  titleContent: String

  """Color of the display title"""
  titleColor: String

  """Whether to display an image in the title section"""
  shouldUseTitleImage: Boolean

  """URL or data for the title image (if used)"""
  titleImage: String

  """Whether the remaining time for the minigame should be shown"""
  shouldShowDurationTime: Boolean

  """Main image used in the minigame's display"""
  primaryImage: Mixed

  """Text displayed on the join button"""
  joinButtonContent: String

  """Color of the join button"""
  joinButtonColor: String

  """Whether to use a custom image for the join button"""
  shouldUseJoinButtonImage: Boolean

  """URL or data for the join button image (if used)"""
  joinButtonImage: String

  """Content of the play button"""
  playButtonContent: Mixed

  """Color of the play button"""
  playButtonColor: Mixed

  """Whether to use a custom image for the play button"""
  shouldUsePlayButtonImage: Boolean

  """URL or data for the play button image (if used)"""
  playButtonImage: String

  """Custom image for the rule button"""
  ruleButtonImage: Mixed

  """Custom image for the reward button"""
  rewardButtonImage: Mixed

  """Custom image for the history button"""
  historyButtonImage: Mixed

  """URL or data for the wallet button image"""
  walletButtonImage: String

  """URL or data for the background image"""
  backgroundImage: String

  """Whether to use a custom wheel template (for wheel-based games)"""
  shouldUseCustomWheelTemplate: Boolean

  """Custom border image for the minigame"""
  borderImage: Mixed

  """Custom wheel image (if applicable)"""
  wheelImage: Mixed

  """Custom pin image (if applicable)"""
  pinImage: Mixed

  """Merchant name displayed in the footer"""
  footerMerchantName: String

  """Merchant logo displayed in the footer"""
  footerLogo: String

  """Merchant address displayed in the footer"""
  footerAddress: String

  """Merchant email displayed in the footer"""
  footerEmail: String
  footerFacebookUrl: String
  footerYoutubeUrl: String
  shouldDisplayRewardImage: Boolean
  shouldDisplayRewardName: Boolean
  giftImage: String
  numberGiftDisplay: Int
}

type DistributionRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Họ tên"""
  name: String

  """Email"""
  email: String

  """Số điện thoại"""
  phone: String

  """Id khách hàng"""
  customerId: ID

  """ID globalCustomer"""
  globalCustomerId: ID

  """Tài khoản chủ shop"""
  memberId: ID

  """Loại yêu cầu AGENCY,DISTRIBUTOR"""
  type: String

  """Trạng thái PENDING,APPROVED,REJECTED"""
  status: String

  """Ngày duyệt"""
  approvedAt: DateTime

  """Ngày từ chối"""
  rejectedAt: DateTime
}

type DistributionRequestPageData {
  data: [DistributionRequest]
  total: Int
  pagination: Pagination
}

type DistributorConfig {
  """Bật / tắt nhà phân phối"""
  active: Boolean

  """Bật / tắt tự động duyệt yêu cầu"""
  autoApproval: Boolean

  """Bật / tắt tự động gửi yêu cầu khi đủ điều kiện"""
  autoRequest: Boolean

  """Doanh số tối thiểu"""
  minimumSale: Float

  """Đơn hàng tối thiểu"""
  minimumOrder: Float

  """Nội dung điều khoản"""
  termsAndConditions: String
}

input DistributorConfigInput {
  """Bật / tắt nhà phân phối"""
  active: Boolean

  """Bật / tắt tự động duyệt yêu cầu"""
  autoApproval: Boolean

  """Bật / tắt tự động gửi yêu cầu khi đủ điều kiện"""
  autoRequest: Boolean

  """Doanh số tối thiểu"""
  minimumSale: Float

  """Đơn hàng tối thiểu"""
  minimumOrder: Float

  """Nội dung điều khoản"""
  termsAndConditions: String
}

type DistrictData {
  id: String
  district: String
}

type DomainConfig {
  """Bật / tắt tính năng"""
  active: Boolean

  """Tên miền"""
  hostName: String

  """Trạng thái kết nối pending,connected,disconnected"""
  status: String
}

input DomainConfigInput {
  """Bật / tắt tính năng"""
  active: Boolean
}

type DomainMapping {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type DomainMappingPageData {
  data: [DomainMapping]
  total: Int
  pagination: Pagination
}

type DraftOrderData {
  order: Order
  invalid: Boolean
  invalidReason: String
}

type DraftReservationData {
  serviceReservation: ServiceReservation
  invalid: Boolean
  invalidReason: String
}

type Driver {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Chủ shop"""
  memberId: ID

  """Tên tài xế"""
  name: String

  """Số điện thoại"""
  phone: String

  """Hình đại diện"""
  avatar: String

  """Biển số xe"""
  licensePlates: String

  """Trạng thái ONLINE,OFFLINE,ACCEPTED,DELIVERING"""
  status: String

  """Đơn hàng đang nhận, gần nhất"""
  orderIds: [ID]

  """Kích hoạt"""
  isActive: Boolean
  orders: [Order]
  member: Member
  orderStats: DriverOrderStats
}

type DriverOrderStats {
  shipfee: Float
  total: Int
  completed: Int
  failure: Int
}

type DriverPageData {
  data: [Driver]
  total: Int
  pagination: Pagination
}

enum EAccountTypeApply {
  ALL
  ALL_SHOP_AFFILIATE
  CUSTOMER_NOT_INCLUDE_SHOP_AFFILIATE
}

enum EAccountTypeDisplayCategory {
  ANONYMOUS
  ALL_SHOP_AFFILIATE
  CUSTOMER_NOT_INCLUDE_SHOP_AFFILIATE
}

enum EAccountTypeDisplayPost {
  ALL
  ALL_SHOP_AFFILIATE
  CUSTOMER_NOT_INCLUDE_SHOP_AFFILIATE
}

enum EAchievementRewardType {
  PHYSICAL
  SHOPPING_WALLET
  SHOP_AFFILIATE_WALLET
}

enum EAchievementType {
  REFERRAL_SHOP_AFFILIATE
}

enum EAddressType {
  PROVINCE
  DISTRICT
  WARD
}

enum EAgencyBusinessType {
  FoodAndBeverage
  FastMovingConsumerGoods
}

enum EAgencyMemberBillCreatorType {
  AGENCY
  MEMBER
}

enum EAgencyMemberBillItemType {
  PACKAGE_SUBSCRIPTION
  OTHER
}

enum EAgencyMemberBillPaymentMethod {
  MBBANK
  BANK_TRANSFER
  NONE
}

enum EAgencyMemberBillPaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum EAgencyMemberBillStatus {
  PENDING
  SUCCESS
  FAILED
}

enum EAgencyMemberBillType {
  PACKAGE_SUBSCRIPTION
  OTHER
}

enum EBank {
  MBBANK
}

enum ECarrierWalletTransactionType {
  """Nạp tiền vào ví"""
  DEPOSIT

  """Rút tiền từ ví"""
  WITHDRAWAL

  """Hoàn tiền"""
  REFUND

  """Phí ship shop trả, trừ trực tiếp khỏi ví"""
  SHIPPING_FEE_SHOP

  """Hold phí ship (khách hàng trả, hoàn sau đối soát)"""
  SHIPPING_FEE_HOLD

  """Hoàn trả lại phí ship sau khi đối soát xong"""
  SHIPPING_FEE_RECONCILIATION

  """Thanh toán đối soát"""
  RECONCILIATION_PAYMENT

  """Hủy giao dịch"""
  CANCELLATION

  """Các giao dịch khác không thuộc các loại trên"""
  OTHER
}

enum EChildrenFieldMode {
  OPTIONS
  SUB_FIELDS
  NONE
  ARRAY_ELEMENT
}

type EcommerceQuery {
  id: String
}

enum ECommissionPolicyCommissionType {
  FIXED
  PERCENTAGE
}

enum ECommissionRecurringPeriodType {
  WEEKLY
  MONTHLY
  DAILY
  YEARLY
}

enum ECommissionRuleType {
  COMMISSION_ACCUMULATE
  COMMISSION_DIRECT
  UNLIMITED_TIER_COMMISSION_DIRECT
}

enum ECustomCardElementType {
  SHAPE
  TEXT
  QR
  IMAGE
}

enum ECustomCardImageCropShapeType {
  CIRCLE
  SQUARE
  NONE
}

enum ECustomCardShapeType {
  CIRCLE
  RECTANGLE
  SQUARE
  TRIANGLE
}

enum ECustomCardType {
  VOUCHER_AFFILIATE
}

enum ECustomerDataKey {
  """
  Tên khách hàng. Ví dụ: Dùng để lưu trữ hoặc hiển thị tên của khách hàng trong các hệ thống.
  """
  CUSTOMER_NAME

  """
  Mã đối tác liên kết. Ví dụ: Mã riêng của một đối tác liên kết để theo dõi hoặc
  xác nhận giao dịch liên quan đến chương trình liên kết.
  """
  AFFILIATE_CODE

  """
  Tên đối tác liên kết. Ví dụ: Tên của đối tác liên kết liên quan đến các giao dịch hoặc chương trình khuyến mãi.
  """
  AFFILIATE_NAME

  """
  Số điện thoại của khách hàng. Ví dụ: Lưu trữ số điện thoại của khách hàng để liên lạc hoặc quản lý tài khoản.
  """
  CUSTOMER_PHONE

  """
  Số tiền thưởng từ việc chia sẻ voucher. Ví dụ: Số tiền mà đối tác liên kết nhận được sau khi chia sẻ voucher thành công.
  """
  AMOUNT_BONUS_SHARING_VOUCHER

  """
  Tên voucher liên quan đến tiền thưởng chia sẻ. Ví dụ: Tên voucher mà đối tác
  liên kết sử dụng để nhận tiền thưởng từ hệ thống.
  """
  NAME_VOUCHER_BONUS_SHARING_VOUCHER

  """
  Tên người nhận voucher chia sẻ. Ví dụ: Tên của khách hàng đã nhận voucher được chia sẻ bởi đối tác liên kết.
  """
  NAME_RECEIVER_VOUCHER_SHARING

  """ Chiến dịch minigame chia sẻ hoa hồng mới nhất"""
  LATEST_MINIGAME_AFFILIATE_VOUCHER_URL

  """Mã đơn hàng. Ví dụ : DH100123"""
  ORDER_CODE

  """Số tiền đơn hàng. Ví dụ : 100000"""
  ORDER_TOTAL_AMOUNT

  """Số lượng sản phẩm. Ví dụ: 10"""
  ORDER_TOTAL_QUANTITY_PRODUCT
  ORDER_STATUS
  ORDER_NOTE
  ORDER_ITEM_TEXT
  SHOP_BRANCH_NAME
  ORDER_SHIP_FEE
  VOUCHER_CODE_USING
  VOUCHER_NAME_USING
  NOTIFICATION_CONTENT
  ORDER_STATUS_CODE
  NOTIFICATION_IMAGE_URL
  SERVICE_CONTRACT_CODE
  SERVICE_CONTRACT_NAME
  SERVICE_CONTRACT_STATUS
  SERVICE_CONTRACT_TOTAL_AMOUNT
  SERVICE_CONTRACT_TOTAL_QUANTITY_SERVICE_CONTRACT_TYPE
}

enum ECustomFieldStage {
  CREATE
  UPDATE
  ALL
}

enum ECustomFieldType {
  text
  number
  date
  datetime
  boolean
}

enum EDateBucketUnit {
  HOUR
  DAY
  WEEK
  MONTH
  QUARTER
  YEAR
}

enum EDateFieldAutoIssuePerDay {
  CREATED_DATE
  PAYMENTED_DATE
}

enum EDebtReferenceType {
  ORDER
  SERVICE_CONTRACT
}

enum EDebtStatus {
  PENDING
  PARTIALLY
  PAID
  CANCELED
}

enum EDepositMethod {
  TRANSFER_FROM_SHOP_AFFILIATE_WALLET
  TRANSFER_FROM_MBBANK
}

enum EDepositWalletRequestStatus {
  PENDING
  SUCCEED
  FAILED
}

enum EDiscountUnit {
  VND
  PERCENT
}

input EditInvoiceInput {
  orderInvoiceId: ID!
  invoiceData: InvoiceDataInput
}

enum EDurationLeaderBoardConfig {
  WEEK
  MONTH
  YEAR
}

enum EDurationUnitPackageSubscription {
  DAYS
  WEEKS
  MONTHS
  QUARTERS
  YEARS
}

enum EEntryCategory {
  FIELD
  VALUE
}

enum EFeature {
  """✅ Tạo đơn hàng mới tại POS hoặc nền tảng bán hàng"""
  CREATED_ORDER

  """📦 Quản lý danh sách đơn hàng: xem, cập nhật, xử lý"""
  MANAGE_ORDERS

  """🏢 Quản lý chi nhánh (tên, địa chỉ, thông tin hoạt động)"""
  MANNAGE_SHOP_BRANCHES

  """👩‍💼 Quản lý nhân viên của cửa hàng"""
  MANAGE_STAFFS

  """🍽️ Quản lý bàn (đối với mô hình nhà hàng/café)"""
  MANAGE_TABLES

  """🚚 Quản lý vận đơn"""
  MANAGE_DRIVERY

  """🛍️ Quản lý sản phẩm có sẵn trong cửa hàng"""
  MANAGE_PRODUCTS

  """🏬 Quản lý kho hàng, nhập – xuất – tồn"""
  MANAGE_WAREHOUSES

  """🎟️ Quản lý voucher/phiếu giảm giá của cửa hàng"""
  MANAGE_SHOP_VOUCHERS

  """👥 Quản lý danh sách khách hàng"""
  MANAGE_CUSTOMERS

  """💳 Quản lý hệ thống POS (Point of Sale)"""
  MANAGE_POS

  """🧾 Quản lý hóa đơn bán hàng"""
  MANAGE_INVOICES

  """💰 Quản lý thanh toán, cấu hình cổng và phương thức thanh toán"""
  MANAGE_PAYMENTS

  """📜 Lịch sử thanh toán – giao dịch"""
  PAYMENT_HISTORY

  """🏭 Quản lý nhà cung cấp"""
  MANAGE_SUPPLIERS

  """📏 Quản lý đơn vị tính của sản phẩm (VD: kg, cái, ly...)"""
  MANAGE_UNITS

  """📃 Tạo hợp đồng dịch vụ mới (service contract)"""
  CREATED_SERVICE_CONTRACTS

  """🧰 Quản lý danh sách hợp đồng dịch vụ đã tạo"""
  MANAGE_SERVICE_CONTRACTS

  """⚙️ Quản lý loại hợp đồng dịch vụ (mẫu định nghĩa)"""
  MANAGE_SERVICE_CONTRACT_TYPES

  """📅 Quản lý đặt lịch (Booking) dịch vụ"""
  MANAGE_BOOKINGS

  """🤝 Quản lý đối tác liên kết (Shop Affiliate)"""
  MANAGE_SHOP_AFFILIATES

  """📨 Quản lý yêu cầu liên kết từ đối tác"""
  MANAGE_SHOP_AFFILIATE_REQUESTS
  GIVE_REWARD_MINIGAME
  MINIGAME_REPORT
  MANAGE_MINIGAME_CUSTOMERS

  """🎮 Quản lý mini game trong cửa hàng"""
  MANAGE_MINIGAMES

  """💵 Quản lý kỳ chi hoa hồng hoặc thanh toán (disbursement period)"""
  MANAGE_SHOP_DISBUREMENT_PERIOD

  """🔔 Quản lý thông báo gửi đến người dùng"""
  MANAGE_NOTIFICATIONS

  """🏆 Bảng xếp hạng (doanh thu, điểm, thành tích...)"""
  LEADER_BOARD
}

enum EFeatureDisplayPosition {
  """Trang chủ"""
  HOME

  """Thanh điều hướng chính (menu, bottom nav...)"""
  NAVIGATION
}

enum EFeatureGroup {
  ORDER
  TABLE
  INVOICE
  WAREHOUSES
  DELIVERY
  SHOP_AFFILIATES
  POS
  PAYMENT
  STAFFS
  SUPPLIERS
  SHOP_VOCHERS
  CUSTOMERS
  SERVICE_CONTRACTS
  REPORTS
  MINIGAME
}

enum EFieldType {
  TEXT
  TEXT_AREA
  NUMBER
  ARRAY
  HTML
  DATE
  DATETIME
  IMAGES
  IMAGE
  EMAIL
  PHONE_NUMBER
  SELECTION
  DROPDOWN
  CHECK_BOX
  BOOLEAN
  LOCATION
  LINK
  ELEMENT
}

enum EGoShipAccountType {
  ACCOUNT_MEMBER
  ACCOUNT_AGENCY
  ACCOUNT_ADMIN
}

enum EInvoiceContractPaymentStatus {
  UNPAID
  PAID
  REFUNDED
  FAILED
}

enum EInvoiceContractType {
  CREATE
  RENEW
}

enum EInvoiceElectronicContractStatus {
  NONE
  PENDING_CANCEL
  CANCELED
  REJECTED_CANCEL
}

enum EInvoiceInvoiceStatus {
  INIT
  CANCELED
  ADJUSTED
  REPLACED
  EXPLANATION
  REPLACED_BY
}

enum EInvoiceItemType {
  GOODS_OR_SERVICES
  PROMOTION
  TRADE_DISCOUNT
  NOTE
  SPECIAL_GOODS
}

enum EInvoiceSendStatus {
  PENDING_APPROVAL
  PENDING_SIGNATURE
  SIGNED
  SENT
  SUCCESS
  ERROR
  REJECTED
}

enum EInvoiceStatus {
  """Chờ duyệt"""
  PENDING_APPROVAL

  """Chờ ký"""
  PENDING_SIGNATURE

  """Đã ký"""
  SIGNED

  """Đã gửi"""
  SENT

  """Thành công"""
  SUCCESS

  """Có lỗi"""
  ERROR

  """Từ chối"""
  REJECTED
}

enum EInvoiceTaxRateCode {
  VAT_10
  VAT_8
  VAT_5
  VAT_0
  VAT_NONE
  VAT_NOT_DECLARED
}

type Email {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên mẫu email"""
  name: String

  """
  Loại email CUSTOM,PLAN_REMIND_EXPIRED,PLAN_EXPIRED,PLAN_REMIND_STOP,PLAN_STOPED
  """
  type: String

  """Tiêu đề email"""
  subject: String

  """Nội dung text"""
  text: String

  """Nội dung html"""
  html: String

  """Dữ liệu context"""
  context: [Mixed]

  """Data Design"""
  design: Mixed
}

type EmailPageData {
  data: [Email]
  total: Int
  pagination: Pagination
}

enum EManychatSendFlowTriggerType {
  """
  Kích hoạt khi khách hàng trở thành đối tác liên kết của cửa hàng.  Ví dụ: Khi
  một khách hàng đăng ký chương trình liên kết để quảng bá sản phẩm và nhận hoa
  hồng từ cửa hàng
  """
  BECOME_SHOP_AFFILIATE

  """
  Kích hoạt khi khách hàng nhận voucher chia sẻ từ đối tác liên kết của cửa
  hàng.  Ví dụ: Khi một đối tác liên kết chia sẻ voucher khuyến mãi với khách
  hàng qua hệ thống, và khách hàng đó nhận được voucher
  """
  CUSTOMER_RECEIVE_VOUCHER_SHARING_FROM_SHOP_AFFILIATE

  """
  Kích hoạt khi đối tác liên kết của cửa hàng nhận được tiền thưởng từ việc chia
  sẻ voucher.  Ví dụ: Khi đối tác liên kết chia sẻ voucher thành công và nhận
  được một khoản tiền thưởng dựa trên số lượng voucher đã chia sẻ
  """
  SHOP_AFFILIATE_RECEIVE_AMOUNT_BONUS_VOUCHER_SHARING

  """
  Kích hoạt khi tạo mới đơn hàng. Ví dụ: Khi khách hàng đặt một đơn hàng mới trên hệ thống.
  """
  INIT_ORDER

  """
  Kích hoạt khi trạng thái đơn hàng thay đổi. Ví dụ: Đơn hàng chuyển từ Đang xử lý sang Đã giao hàng
  """
  ORDER_CHANGE_STATUS

  """
  Kích hoạt khi tạo mới hợp đồng. Ví dụ: Khi khách hàng đặt một hợp đồng mới trên hệ thống.
  """
  INIT_SERVICE_CONTRACT

  """
  Kích hoạt khi trạng thái hợp đồng thay đổi. Ví dụ: Hợp đồng chuyển từ 'Đang xử lý' sang 'Đã giao hàng'.
  """
  SERVICE_CONTRACT_CHANGE_STATUS

  """Gửi thông báo qua message"""
  SEND_NOTIFICATION
  ORDER_DELIVERING
  ORDER_DELIVERY_SUCCESS
  ORDER_COMPLETED
  ORDER_CANCELED
}

enum EManychatSendFlowType {
  TRIGGER
}

enum EManyChatSettingType {
  """Thanh gia"""
  JOIN

  """Trả quà"""
  RETURN_GIFT

  """Chia sẻ"""
  SHARE

  """Phát quà"""
  GIVE_GIFT

  """Người chơi nhận lượt chơi sau khi chia sẻ thành côn"""
  SHARE_REWARD
}

enum EMediaSource {
  TIK_TOK
  YOUTUBE
}

type EMemberType {
  """Loại"""
  type: String

  """tên"""
  name: String
}

enum EMinigameDisplayContentType {
  """Khu vực giới thiệu chương trình """
  introduction

  """Khu vực hướng dẫn tham gia """
  user_guide

  """Khu vực thể lệ """
  rule

  """Khu vực danh sách giải thưởng """
  list_reward
}

enum EMinigameNotificationTriggerType {
  """Nhận được quà từ game"""
  RECEIVE_REWARD

  """Sử dụng quà thành công"""
  USE_REWARD

  """Chia sẻ thành công với một người"""
  SHARE_MINIGAME_SUCCESS

  """Nhận thêm lượt chơi từ việc chia sẻ"""
  RECEIVED_PLAY_TURN_FROM_SHARE_MINIGAME
}

enum EMinigameSuggestType {
  MINIGAME
  MINIGAME_PAGE
}

enum EMInvoiceAdminCustomerType {
  NEW
  RENEWAL
  CONVERSION
  OTHER
}

enum EMInvoiceAdminOwnerType {
  AGENCY
  ADMIN
}

enum EMInvoiceDeclarationRegisterInvoiceFormality {
  NEW_DECLARATION
  CHANGE_DECLARATION
}

enum EMInvoiceDeclarationRegisterInvoiceStatus {
  PENDING
  SENDED
}

enum EMInvoiceDeclarationRegisterInvoiceTaxAuthorityFeedback {
  NONE
  RECEIVED
  NOT_RECEIVED
  ACCEPTED
  NOT_ACCEPTED
  EXPLANATION
}

enum EMInvoiceFormInvoice {
  KMa
  CMa
  CMTMTTien
}

enum EMInvoiceFormSendData {
  DBKK
  UBND
  TSC
  TVAN
  GTT
}

enum EMInvoiceGender {
  MALE
  FEMALE
}

enum EMInvoiceInvoiceForm {
  VAT_INVOICE
  SALE_INVOICE
  ASSET_SALE_INVOICE
  NATIONAL_RESERVE_INVOICE
  TICKET_INVOICE
  INTERNAL_TRANSPORT_INVOICE
}

enum EMInvoiceInvoicePackageCategory {
  HD
  BQ
  DVK
  DA
  HDDV
}

enum EMInvoiceInvoicePackageType {
  GSL
  GTG
}

enum EMInvoiceInvoiceStatus {
  INIT
  CANCELED
  ADJUSTED
  REPLACED
  EXPLANATION
  REPLACED_BY
}

enum EMInvoiceInvoiceTypeUse {
  GTGT
  HDBH
  HDBTSCong
  HDBHDTQGia
  HDK
  CTu
  GTGTBL
  BHBL
  HDTM
}

enum EMInvoiceLineItemType {
  GOODS_OR_SERVICES
  PROMOTION
  TRADE_DISCOUNT
  NOTE
  SPECIAL_GOODS
}

enum EMInvoiceMethod {
  CDDu
  CBTH
}

enum EMInvoicePartnerType {
  PROVIDER
  TRANSMITTING_INFORMATION
}

enum EMInvoiceSendStatus {
  PENDING_APPROVAL
  PENDING_SIGNATURE
  SIGNED
  SENT
  SUCCESS
  ERROR
  REJECTED
}

enum EMInvoiceTaxRateCode {
  VAT_10
  VAT_8
  VAT_5
  VAT_0
  VAT_NONE
  VAT_NOT_DECLARED
}

enum EMInvoiceTokenSignatureForm {
  NEW
  EXTEND
  STOP_USING
}

enum EMobileAppType {
  APP_USER
  APP_MERCHANT
}

enum ENextPayPaymentMethod {
  CARD
  QR
  LINK
}

enum ENextPayPaymentType {
  NORMAL
  INSTALLMENT
  MOTO
  DEPOSIT
}

enum ENotificationReceiverType {
  ALL
  ALL_SHOP_AFFILIATE
  CUSTOMER_NOT_INCLUDE_SHOP_AFFILIATE
  SELECT_SPECIFIC_CUSTOMERS
  SELECT_SPECIFIC_SHOP_AFFILIATES
}

enum ENotificationScheduleType {
  """Khác"""
  OTHER

  """Bài đăng"""
  POST
}

enum ENotificationSettingType {
  TRIGGER
  SCHEDULE
}

enum ENotificationTriggerType {
  """Gửi thông báo khi có đơn hàng mới"""
  INIT_ORDER

  """Gửi thông báo khi đơn hàng được cập nhật"""
  ORDER_UPDATED

  """Gửi thông báo khi trạng thái đơn hàng thay đổi"""
  ORDER_STATUS_CHANGE

  """Thanh toán đơn hàng"""
  ORDER_PAYMENT

  """Gửi thông báo khi khách hàng trở thành đối tác"""
  BECOME_SHOP_AFFILIATE

  """Gửi thông báo khi khi vừa có một đối tác cấp dưới trực tiếp mới"""
  HAVE_NEW_DIRECT_DOWNLINE_SHOP_AFFILIATE

  """Gửi thông báo khi có chính sách hoa hồng mới"""
  NEW_PRODUCT_COMMISSION_POLICY

  """Gửi thông báo khi có chính sách thưởng doanh số mới"""
  NEW_PRODUCT_SALES_BONUS_POLICY

  """Gửi thông báo khi có chính sách thưởng doanh số cá nhân mới"""
  NEW_INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY

  """
  Gửi thông báo khi có chính sách thưởng doanh số từ cấp dưới trực tiếp mới
  """
  NEW_DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY

  """Gửi thông báo khi có chính sách khuyến mãi mới"""
  NEW_PROMOTION_POLICY

  """Gửi thông báo khi có lịch sử chính sách hoa hồng được khởi tạo"""
  INIT_PRODUCT_COMMISSION_POLICY_LOG

  """Gửi thông báo khi có lịch sử chính sách thưởng doanh số được khởi tạo"""
  INIT_PRODUCT_SALES_BONUS_POLICY_LOG

  """
  Gửi thông báo khi có lịch sử chính sách hoa hồng giới thiệu được khởi tạo
  """
  INIT_REFERRAL_COMMISSION_POLICY_LOG

  """
  Gửi thông báo khi có lịch sử chính sách thưởng doanh số cá nhân được khởi tạo
  """
  INIT_INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY_LOG

  """
  Gửi thông báo khi có lịch sử chính sách thưởng doanh số từ cấp dưới trực tiếp được khởi tạo
  """
  INIT_DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY_LOG

  """Gửi thông báo khi có lịch sử chính sách chia sẻ mã khuyến mãi khởi tạo"""
  INIT_SHOP_VOUCHER_SHARING_POLICY_LOG

  """Gửi thông báo có hợp đồng mới"""
  INIT_SERVICE_CONTRACT

  """Gửi thông báo khi yêu cầu đặt lịch mới"""
  INIT_PRE_BOOKING

  """
  Gửi thông báo khi trạng thái lịch sử chính sách hoa hồng cập nhật trạng thái
  """
  PRODUCT_COMMISSION_POLICY_LOG_STATUS_CHANGE

  """
  Gửi thông báo khi trạng thái lịch sử chính sách thưởng doanh số cập nhật trạng thái
  """
  PRODUCT_SALES_BONUS_POLICY_LOG_STATUS_CHANGE

  """
  Gửi thông báo khi trạng thái lịch sử chính sách hoa hồng giới thiệu cập nhật trạng thái
  """
  REFERRAL_COMMISSION_POLICY_LOG_STATUS_CHANGE

  """
  Gửi thông báo khi trạng thái lịch sử chính sách thưởng doanh số cá nhân cập nhật trạng thái
  """
  INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY_LOG_STATUS_CHANGE

  """
  Gửi thông báo khi trạng thái lịch sử chính sách thưởng doanh số từ cấp dưới trực tiếp cập nhật trạng thái
  """
  DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY_LOG_STATUS_CHANGE

  """
  Gửi thông báo khi trạng thái lịch sử chính sách chia sẻ voucher của cửa hàng cập nhật trạng thái
  """
  SHOP_VOUCHER_SHARING_POLICY_LOG_CHANGE_STATUS

  """
  Gửi thông báo khi trạng thái yêu cầu đặt lịch trước cập nhật trạng thái
  """
  PRE_BOOKING_CHANGE_STATUS

  """Gửi thông báo khi trạng thái hợp đồng cập nhật trạng thái"""
  SERVICE_CONTRACT_CHANGE_STATUS

  """Thanh toán hợp đồng"""
  SERVICE_CONTRACT_PAYMENT

  """Gửi thông báo khi check-in dịch vụ."""
  INIT_SERVICE_CONTRACT_TYPE_SESSION_LOG

  """Gửi thông báo khi trạng thái yêu cầu giải ngân cập nhật trạng thái"""
  DISBURSEMENT_REQUEST_STATUS_CHANGE

  """Gửi thông báo khi kỳ giải ngân bắt đầu nhận yêu cầu"""
  DISBURSEMENT_PERIOD_POLICY_START_RECEIVE_REQUEST

  """Gửi thông báo khi kỳ giải ngân sắp kết thúc việc nhận yêu cầu"""
  DISBURSEMENT_PERIOD_POLICY_WILL_END_RECEIVE_REQUEST
  ORDER_PRODUCT_PRICE_UPDATED
  ORDER_PRODUCT_SHIP_FEE_UPDATED

  """Gửi thông báo khi số dư ví bị giảm"""
  REDUCE_WALLET_BALANCE

  """Gửi thông báo khi số dư ví tăng"""
  RECEIVE_WALLET_BALANCE

  """Gửi thông báo vào ngày sinh nhật của người dùng"""
  HAPPY_BIRTHDAY

  """Gửi thông báo khi nhiệm vụ được hoàn thành"""
  COMPLETED_TASK
  SHOP_AFFILIATE_LEVEL_UP
}

enum EOrdererType {
  SHOP
  CUSTOMER
  STAFF
}

enum EOrderInvoiceType {
  ORDER_PRODUCT
  ORDER_SERVICE_CONTRACT
}

type EOrderStatus {
  """Mã trạng thái"""
  code: String

  """Tên hiển thị"""
  name: String
}

enum EPackageSubscriptionLogType {
  NEW_PACKAGE
  RENEWAL_PACKAGE
  NONE
}

enum EPaymentGateway {
  PAY_FRONTS
  NEXT_PAY
  INTERNAL
}

enum EPaymentHistoryType {
  PAYMENT_ORDER
  PAYMENT_SERVICE_CONTRACT
  PAYMENT_REGISTER_SHOP_AFFILIATE
  PAYMENT_RENEWAL_SHOP_AFFILIATE
}

enum EPaymentLogMinigamePaymentMethod {
  MANUAL
  BANK
}

enum EPaymentLogMinigameStatus {
  SUCCESS
  PENDING
  FAILED
}

enum EPaymentMetaType {
  QR
  CARD
  EDC
  TRANSFER
  CASD
  WALLET
  LINK
  DEBT
}

enum EPaymentMethod {
  NONE
  DEBT
  COD
  MOMO
  BAOKIM
  PAYPAL
  BANK_TRANSFER
  ZALO_PAY
  VNPAY
  PAYON
  MBBANK
  NAPAS
  ONLINE_QR
  SHOPPING_WALLET
  NEXT_PAY_EDC_CARD
  NEXT_PAY_EDC_QR
  NEXT_PAY_EDC_INSTALLMENT_CARD
  NEXT_PAY_ONLINE_QR
  NEXT_PAY_ONLINE_LINK
  NEXT_PAY_ONLINE_INSTALLMENT_LINK
}

enum EPaymentStatus {
  PENDING
  SUCCEED
  PARTIALLY
  FAILED
  DEBT_RECOGNIZED
}

enum EPaymentStatusMinigame {
  SUCCESS
  PENDING
  FAILED
}

enum EPermissionType {
  SHOP
  SHOP_BRANCH
}

enum EPickupMethod {
  DELIVERY
  STORE
  IN_STORE_PURCHASE
}

enum EPlatform {
  """Ứng dụng di động"""
  APP

  """Giao diện web quản trị / desktop"""
  WEB

  """Trang web chính (thường là website marketing, landing page)"""
  WEB_MAIN

  """Ứng dụng mini bên trong Zalo"""
  ZALO_MINI_APP
}

enum EPlatformMobile {
  ANDROID
  IOS
}

enum EPolicy {
  DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY
  INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY
  PRODUCT_COMMISSION_POLICY
  PRODUCT_SALES_BONUS_POLICY
}

enum EPreBookingStatus {
  COMPLETED
  PENDING
  CANCELLED
}

enum EProductPriceConditionType {
  ORDER_TOTAL_AMOUNT
  PRODUCT_TOTAL_AMOUNT
  PRODUCT_QUANTITY
}

enum EProductStatus {
  SELLING
  PAUSED
  OUT_OF_STOCK
  GIFT_ONLY
}

enum EPromotionAssignmentFrom {
  MINIGAME
}

enum EProviderCarrier {
  GO_SHIP
}

enum EQRCodeType {
  PRODUCT
  ORDER
  SERVICE_CONTRACT
  SERVICE_CONTRACT_TYPE
  SERVICE_CONTRACT_TYPE_SESSION_LOG
  PRE_BOOKING
}

enum EReceivePromotionThrough {
  MINIGAME
  TASK
  AFFILIATE_VOUCHER
  DEFAULT
}

enum EReceiveShopVoucherThrough {
  MINIGAME
  TASK
  AFFILIATE_VOUCHER
  DEFAULT
}

enum ERecurringCommissionStatus {
  PENDING
  AWAIT_APPROVED
  APPROVED
  CANCELED
  REJECTED
  DISABLED
}

enum EReturnGiftSettingType {
  GIFT_ID
  GIFT_NAME
  GIFT_IMAGE
  GIFT_DATE
  PLAYER_NAME
  PLAYER_PHONE
  PLAYER_EMAIL
  PLAYER_ADDRESS
  PLAYER_BIRTHDAY
  DESCRIPTION_VOUCHER

  """Số lần chia sẻ thành công"""
  SHARE_COUNT

  """Tên người được chia sẻ"""
  SHARED_WITH_NAME

  """Số điện thoại người được chia sẻ"""
  SHARED_WITH_PHONE

  """Email người được chia sẻ"""
  SHARED_WITH_EMAIL

  """Số lượt chơi thưởng từ chia sẻ"""
  SHARE_REWARD_AMOUNT

  """Tên minigame được chia sẻ"""
  MINIGAME_NAME

  """Slug minigame được chia sẻ"""
  MINIGAME_SLUG
}

enum ERevenueSharingPolicyLogStatus {
  PENDING
  APPROVED
  CANCELED
  DISABLED
}

enum ERevenueSharingType {
  FIXED
  PERCENTAGE
}

enum ERewardType {
  """Phần thưởng là một mã khuyến mãi."""
  PROMOTION

  """Phần thưởng là voucher từ cửa hàng."""
  SHOP_VOUCHER

  """Phần thưởng là vật phẩm (hàng vật lý)."""
  PHYSICAL

  """Phần thưởng là tiền vào ví mua sắm."""
  SHOPPING_WALLET

  """Phần thưởng là tiền vào ví đối tác."""
  SHOP_AFFILIATE_WALLET

  """Điểm thưởng"""
  REWARD_POINT
}

enum ERole {
  AGENCY
  MEMBER
  ADMIN
  CUSTOMER
}

enum EServiceContractCreateBy {
  MEMBER
  STAFF
  CUSTOMER
}

enum EServiceContractPaymentStatus {
  PENDING
  SUCCEED
  FAILED
  DEBT_RECOGNIZED
}

enum EServiceContractStatus {
  PENDING
  IN_PROCESSING
  APPROVED
  REJECTED
  CANCELED
  ENDED
}

enum EShipMethod {
  """Nhận hàng tại chi nhánh"""
  POST

  """Vietnam Post"""
  VNPOST

  """Không vận chuyển"""
  NONE

  """Ahamove"""
  AHAMOVE

  """Tài xế nội bộ"""
  DRIVER
  GRAB_EXPRESS
  GO_SHIP
  GO_SHIP_ON_DEMAND
}

enum EShopFeature {
  SERVICE_CONTRACT
  PRODUCT
  WAREHOUSE
  PRE_BOOKING
}

enum EShopType {
  ENTERPRISE
  FOOD_AND_BEVERAGE_DEPARTMENT
  DISTRIBUTOR
  FAST_MOVING_CONSUMER_GOODS
  ELECTRONICS
  SERVICE
  OTHER
}

enum EShopVoucherApplyForOrder {
  PRODUCT
  SERVICE_CONTRACT_TYPE
}

enum EShopVoucherAssignmentFrom {
  MINIGAME
  TASK
}

enum EShopVoucherSharingPolicyLogStatus {
  RELEASED
  PENDING
  APPROVED
  CANCELED
  DISABLED
}

enum EShopVoucherType {
  """Giảm giá đơn"""
  DISCOUNT_BILL

  """Giảm giá sản phẩm"""
  DISCOUNT_ITEM
}

enum ESignatureRegistrationRequestAttachedDocumentType {
  REGISTRATION_FORM
  CITIZEN_ID_CARD_FRONT
  CITIZEN_ID_CARD_BACK
  CITIZEN_ID_CARD_TWO_SIDES
  BUSINESS_LICENSE
  OTHER
}

enum ESignatureRegistrationRequestAttachedFileFormat {
  PDF
  IMAGE
  WORD
  OTHER
}

enum ESignatureRegistrationRequestPaymentStatus {
  UNPAID
  PAID
  REFUNDED
  FAILED
}

enum ESignatureRegistrationRequestStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

enum ESocialMedia {
  Facebook
  Zalo
  TikTok
  Youtube
  Instagram
  LinkedIn
}

enum ESourceInvoiceType {
  M_INVOICE
  OTHER
}

enum EStaffPermissionScope {
  VIEW_CUSTOMER
  VIEW_HISTORY_ORDERS
  VIEW_HISTORY_SHOP_VOUCHERS
  VIEW_HISTORY_REWARD_POINTS
  UPDATE_PASSWORD
  VIEW_PRODUCT
  CREATE_PRODUCT
  UPDATE_PRODUCT
  DELETE_PRODUCT
  MANAGE_PRODUCT_TAB
  MANAGE_PRODUCT_CATEGORY
  VIEW_WAREHOUSE_INVENTORY
  VIEW_WAREHOUSE_INVENTORY_VOUCHER
  CREATE_IMPORT_WAREHOUSE_INVENTORY_VOUCHER
  CREATE_EXPORT_WAREHOUSE_INVENTORY_VOUCHER
  VIEW_WAREHOUSE_PRODUCT_AUDIT
  CREATE_WAREHOUSE_PRODUCT_AUDIT
  VIEW_ORDER
  CREATE_ORDER
  UPDATE_ORDER
  PAYMENT_CONFIRM_ORDER
  CONFIRM_ORDER
  SORT_ORDER
  PACKAGED_ORDER
  TRANSFER_DELIVERY_ORDER
  TRANSFER_DELIVERY_ORDER_SUCCESS
  TRANSFER_DELIVERY_ORDER_FAILED
  APPROVED_ORDER
  CANCEL_ORDER
  VIEW_SHOP_AFFILIATE
  VIEW_SHOP_AFFILIATE_REQUEST
  CREATE_SHOP_AFFILIATE_REQUEST
  PAYMENT_CONFIRM_SHOP_AFFILIATE_REQUEST
  HANDLE_SHOP_AFFILIATE_REQUEST
  DELETE_SHOP_AFFILIATE_REQUEST
  VIEW_DISBURSEMENT_PERIOD
  CREATE_DISBURSEMENT_PERIOD
  UPDATE_DISBURSEMENT_PERIOD
  DELETE_DISBURSEMENT_PERIOD
  HANDLE_DISBURSEMENT_REQUEST
  COMPLETE_DISBURSEMENT_PERIOD
  VIEW_POLICY_STATISTIC
  VIEW_INCOME_AND_EXPENDITURE_CASH_FLOW
  VIEW_SERVICE_CONTRACT
  CREATE_SERVICE_CONTRACT
  PAYMENT_CONFIRM_SERVICE_CONTRACT
  VIEW_SERVICE_CONTRACT_TYPE_SESSION_LOG
  CREATE_SERVICE_CONTRACT_TYPE_SESSION_LOG
  HANDLE_SERVICE_CONTRACT
  VIEW_PRE_BOOING
  CREATE_PRE_BOOING
  HANDLE_PRE_BOOKING
}

enum EStaffPermissionScopeGroup {
  CUSTOMER_MANAGEMENT
  PRODUCT_MANAGEMENT
  WAREHOUSE_MANAGEMENT
  ORDER_MANAGEMENT
  SHOP_AFFILIATE_MANAGEMENT
  DISBURSEMENT_PERIODS_MANAGEMENT
  STATISTICS_AND_REPORTING_MANAGEMENT
  SERVICE_CONTRACT_MANAGEMENT
  SERVICE_CONTRACT_TYPE_SESSION_LOG_MANAGEMENT
  PRE_BOOKING_MANAGEMENT
}

type EstimateFeeOrder {
  orderAmount: Float
  customerShipFee: Float
  shopShipFee: Float
  discountInfo: DiscountInfoEstimateFeeOrder
}

input EstimateFeeOrderInput {
  orderId: ID!
  shipMethod: EShipMethod!
  serviceId: String
  promotionCode: String
  requests: [RequestToAhamoveInput]
}

enum ETableStatus {
  EMPTY
  USING
  RESERVED
  NEED_CLEANING
}

enum ETaskTimeCalculation {
  """Tính từ lúc nhiệm vụ được tạo ra"""
  FROM_CREATION

  """Tính từ trước tới nay"""
  SINCE_BEGINNING
}

enum ETaskType {
  """Đơn hàng đầu tiên."""
  FIRST_ORDER

  """Tổng Giới thiệu đối tác."""
  TOTAL_COUNT_REFERRAL_SHOP_AFFILIATE

  """Giới thiệu khách hàng"""
  TOTAL_COUNT_REFERRAL_CUSTOMER

  """Đăng ký trở thành đối tác bán hàng."""
  BECOME_SHOP_AFFILIATE

  """Nhiệm vụ mừng sinh nhật"""
  BIRTHDAY

  """Tích lũy doanh thu bán hàng"""
  ORDER_SALES_ACCUMULATION

  """Doanh số bán hàng toàn bộ nhóm"""
  ORDER_SALES_ACCUMULATION_BRANCH

  """Giá trị đơn hàng đã mua"""
  ORDER_TOTAL_AMOUNT

  """Đăng nhập lần đầu trên ứng dụng di động."""
  FIRST_LOGIN_MOBILE_APP

  """Mua thành công hợp đồng đầu tiên"""
  FIRST_SERVICE_CONTRACT

  """Tổng giá trị hợp đồng đã mua"""
  SERVICE_CONTRACT_TOTAL_AMOUNT

  """Check-in dịch vụ"""
  TOTAL_CHECK_IN_SERVICE_CONTRACT_TYPE_BY_SERVICE_CONTRACT
}

enum ETemplateConfigBannerType {
  CENTER_ALIGNED_BANNER
  BETWEEN_ALIGNED_BANNER
}

enum ETemplateContactType {
  CENTER_LAYOUT
  BETWEEN_LAYOUT
}

enum ETemplateHomePageOrientation {
  HORIZONTAL
  VERTICAL
}

enum ETemplatePage {
  HOME_PAGE
  MIDDLE_HOME_PAGE
  ABOUT_PAGE
  PRODUCTS_PAGE
  PRODUCT_DETAIL_PAGE
  PROFILE_PAGE
  CONTACT_PAGE
  QUOTE_PAGE
  POLICY_PAGE
  NEWS_PAGE
  OTHER
}

enum ETemplateType {
  TEMPLATE_1
  TEMPLATE_2
  TEMPLATE_FNB
}

enum ETokenSignatureType {
  USB_TOKEN
  FILECA
  ESAYCA
  NCCA
  ICA
  INTRUSTCA
}

enum ETopLeaderBoardBonusPolicyScheduleLogStatus {
  PENDING
  COMPLETED
}

enum ETriggerTypeIssueInvoiceForOrder {
  """Tự động xuất hóa đơn khi thanh toán thành công"""
  PAYMENT_SUCCESS

  """Tự động xuất hóa đơn khi đơn hàng hoàn thành"""
  ORDER_COMPLETED

  """Tự động xuất hóa đơn khi đơn hàng được giao"""
  ORDER_SHIPPED

  """Tự động xuất hóa đơn khi đơn hàng được giao tới tay khách hàng"""
  ORDER_DELIVERED
}

enum ETriggerTypeIssueInvoiceForServiceContract {
  """Tự động xuất hóa đơn khi thanh toán hợp đồng thành công"""
  PAYMENT_SUCCESS

  """Tự động xuất hóa đơn khi hợp đồng hoàn thành"""
  SERVICE_CONTRACT_APPROVED
}

enum ETypeLeaderBoardConfig {
  TOP_SHOP_AFFILIATE_HIGHEST_BRANCH_SHOP_AFFILIATE_REVENUE
  TOP_SHOP_AFFILIATE_HIGHEST_PERSONAL_REVENUE
  TOP_SHOP_AFFILIATE_MOST_REFERRAL
}

enum EUnitApplyType {
  PRODUCT
  SERVICE_CONTRACT_TYPE
}

enum EUrlType {
  VIDEO
  IMAGE
}

type EventError {
  id: String
  type: String!
  data: Mixed

  """error|resolved"""
  errorName: String
  errorStack: Mixed
  errorMessage: String
  status: String
  createdAt: DateTime
  updatedAt: DateTime
}

type EventErrorPageData {
  data: [EventError]
  total: Int
  pagination: Pagination
}

type EVoucher {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã voucher"""
  code: String!

  """Tên voucher"""
  name: String!

  """Thông tin voucher"""
  desc: String

  """Chi tiết voucher"""
  eVoucherItems: [EVoucherItem]

  """Số lượng evoucher"""
  itemCount: Int

  """Số lượng evoucher đã sử dụng"""
  usedCount: Int

  """Số lượng evoucher chưa sử dụng"""
  unUsedCount: Int
}

enum EVoucherGroupExpirationTypeMinigame {
  DURATION
  DAY
  UNLIMITED
}

enum EVoucherGroupTypeMinigame {
  PERCENT
  MONEY
  GIFT
}

type EVoucherItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  code: String!
  eVoucherId: ID!
  activated: Boolean
  eVoucher: EVoucher
  customer: Customer
  luckyWheel: LuckyWheel
}

type EVoucherItemPageData {
  data: [EVoucherItem]
  total: Int
  pagination: Pagination
}

type EVoucherPageData {
  data: [EVoucher]
  total: Int
  pagination: Pagination
}

enum EVoucherUsageTypeMinigame {
  SINGLE
  MULTIPLE
}

enum EWalletType {
  SHOP_AFFILIATE_WALLET
  SHOPPING_WALLET
}

enum EWarehouseProductAuditInventoryVoucherType {
  WAREHOUSE_PRODUCT_AUDIT_INVENTORY_VOUCHER
  WAREHOUSE_PRODUCT_IMPORT_INVENTORY_VOUCHER
  WAREHOUSE_PRODUCT_EXPORT_INVENTORY_VOUCHER
}

enum EWarehouseProductAuditLogActionRole {
  MEMBER
  STAFF
}

enum EWarehouseProductAuditLogActionType {
  UPDATE
  CREATE
}

enum EWarehouseProductAuditStatus {
  DRAFT
  COMPLETED
}

type ExpenditureRelatedPaymentForShopAffiliate {
  totalAmount: Mixed
  countShopDisbursementPeriod: Mixed
}

type ExpenditureRelatedProduct {
  totalAmountImportInventoryProduct: Mixed
  countImportInventoryProduct: Mixed
}

type ExpenditureRelatedServiceContract {
  """Số dịch vụ (tổng quantity) trong hợp đồng đã hoàn thành"""
  countServiceQuantityInCompletedContracts: Mixed

  """Số loại dịch vụ khác nhau trong hợp đồng hoàn thành"""
  countDistinctServiceContractTypeCountInCompletedContracts: Mixed

  """Số hợp đồng đã hoàn thành"""
  countCompletedServiceContracts: Mixed

  """Tổng giá trị hợp đồng đã hoàn thành"""
  totalAmountOfCompletedServiceContracts: Mixed

  """
  Tổng giá trị hợp đồng đã thanh toán (paymentStatus = PAID) & số hợp đồng đã thanh toán
  """
  totalAmountOfPaidServiceContracts: Mixed
  countPaidServiceContracts: Mixed
  paidToSupplierFromServiceContracts: StatisticTotalAmountAndCount
  serviceContractPaymentSuccess: StatisticTotalAmountAndCount
  serviceContractPaymentByMethod: [ServiceContractPaymentByMethod]
}

type Expert {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Đánh dấu xóa mềm """
  isDeleted: Boolean

  """Thời gian xóa mềm """
  deletedAt: DateTime

  """Số điện thoại quốc tế"""
  internationalPhone: String

  """Tên chuyên gia"""
  name: String

  """email"""
  email: String

  """Anh đại diện"""
  avatar: String

  """Địa chỉ"""
  address: Place

  """chuyên môn"""
  specializes: String

  """Loại cây chuyên môn"""
  specializesInPlantIds: [String]
  specializesInPlants: [Plant]

  """Loại bệnh chuyên môn"""
  specializesInDiseaseIds: [String]
  specializesInDiseases: [Disease]

  """ID nhóm chuyên gia"""
  expertGroupId: String
  expertGroup: ExpertGroup
}

type ExpertGroup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên nhóm chuyên gia"""
  name: String

  """Người đại diện"""
  representative: String

  """Số điện thoại"""
  phone: String @deprecated(reason: "This field is deprecated, and will be delete soon. User internationalPhone instead")

  """Số điện thoại quốc tế"""
  internationalPhone: String

  """Địa chỉ"""
  address: Place

  """Giấy phép kinh doanh (nhiều ảnh)"""
  businessLicense: [String]!
}

type ExpertGroupPageData {
  data: [ExpertGroup]
  total: Int
  pagination: Pagination
}

type ExpertLoginData {
  expert: Expert
  token: String
}

type ExpertPageData {
  data: [Expert]
  total: Int
  pagination: Pagination
}

type ExternalContentOrderBillConfig {
  isActivated: Boolean
  content: String
}

input ExternalContentOrderBillConfigInput {
  isActivated: Boolean
  content: String
}

enum EZaloShopOwnerType {
  AGENCY
  MEMBER
}

type FeatureGroupData {
  featureGroup: EFeatureGroup
  title: String
  subTitle: String
}

type FeedbackProduct {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Product Id"""
  productId: String

  """Product"""
  product: Product

  """Member Id"""
  memberId: String
  member: Member

  """loại phản hồi SHOP,CUSTOMER"""
  type: String

  """Tên khách hàng"""
  customerName: String

  """Urk avatar khách hàng"""
  customerAvatarUrl: String

  """Số sao feedback"""
  feedbackStar: Int

  """Nội dung feedback"""
  feedbackContent: String

  """Ảnh feedback"""
  feedbackImageUrl: [String]

  """Customer Id"""
  customerId: String
  customer: Customer

  """globalCustomer Id"""
  globalCustomerId: String
  globalCustomer: GlobalCustomer
}

type FeedbackProductPageData {
  data: [FeedbackProduct]
  total: Int
  pagination: Pagination
}

type File {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên của file"""
  name: String

  """Url của file"""
  file: String

  """Url thumbnail của file"""
  thumbnail: String

  """Loại VIDEO"""
  type: String

  """Trạng thái DRAFT,PUBLIC"""
  status: String

  """Kích thước của file"""
  size: String
}

type FilePageData {
  data: [File]
  total: Int
  pagination: Pagination
}

type FilteredCollaborator {
  code: String
  name: String
  phone: String
  memberIds: [ID]
  customerId: ID
  customer: Customer
  members: [Member]
  memberId: ID
  member: Member
  total: Float
}

type FilteredCollaboratorPageData {
  data: [FilteredCollaborator]
  total: Int
  pagination: Pagination
}

type FixedConfig {
  tierCount: Int
  tierConfigs: [TierConfig]
}

input FixedConfigInput {
  tierCount: Int
  tierConfigs: [TierConfigInput!]
}

input FixedConfigUpdateInput {
  tierCount: Int
  tierConfigs: [TierConfigInput]
}

input FlowZaloOAUInput {
  zaloUserIdByApp: String
}

input GenerateAgencyMemberBillInput {
  dueAt: DateTime
  paymentMethod: EAgencyMemberBillPaymentMethod
  memberId: ID
  type: EAgencyMemberBillType
  agencyMemberBillItems: [GenerateAgencyMemberBillItemInput]
}

input GenerateAgencyMemberBillItemInput {
  quantity: Int!
  price: Int
  name: String
  description: String
  packageSubscriptionType: EPackageSubscriptionLogType
  packageSubscriptionId: ID
  agencyMemberBillItemType: EAgencyMemberBillItemType
}

input GenerateDraftServiceReservationInput {
  """ID dịch vụ gốc"""
  serviceId: ID

  """ngày hẹn"""
  reservationDate: DateTime

  """Loại địa điểm AT_SHOP,AT_RESERVER"""
  addressType: String

  """Họ và tên người hẹn"""
  reserverFullname: String

  """SDT người hẹn"""
  reserverPhone: String

  """Mã quốc gia (VN,...)"""
  reserverPhoneRegionCode: String

  """ID chi nhánh đặt hẹn"""
  reservationShopBranchId: String

  """Địa chỉ người đặt hẹn"""
  reservationAddress: PlaceInput

  """ghi chú dịch vụ"""
  note: String

  """hình thức thanh toán CASH"""
  paymentMethod: String

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String

  """ID chuyên viên phụ trách"""
  shopServiceSpecialistId: ID

  """dịch vụ bổ sung"""
  additionalServices: [AdditionalServiceItemInput]
}

input GetAllDeliveryServiceAvailableInput {
  """Sản phẩm"""
  items: [OrderItemInput]!

  """Chi nhánh"""
  shopBranchId: ID!

  """Toạ độ"""
  latitude: Float
  longitude: Float
  provinceId: String
  districtId: String
  wardId: String
  ahamovePromotionCode: String
}

input GetAllDeliveryServicesForOrderInput {
  orderId: ID!
  customData: CustomDataDeliveryServicesForOrderInput
  ahamovePromotionCode: String
}

input GetDetailedInventoryReportInput {
  targetDate: String
  filter: Mixed
  order: Mixed
}

"""Input để lấy thông tin hóa đơn đã phát hành."""
input GetInfoInvoiceMInvoiceInput {
  """Ký hiệu hóa đơn (inv_invoiceSeries)"""
  serial: String!

  """Số hóa đơn (inv_invoiceNumber)"""
  number: Int
}

input getProductStockNeedInput {
  startDate: DateTime
  endDate: DateTime
}

input GetTopMediaCollaboratorProductsInput {
  sellerIds: [ID]
  branchId: ID
}

input GetTopMediaCollaboratorsInput {
  sellerIds: [ID]
  branchId: ID
}

type Gift {
  id: ID

  """mã quà"""
  code: String

  """tên quà"""
  name: String

  """diển giải"""
  desc: String

  """hình ảnh quà"""
  image: String

  """phần thưởng"""
  payPresent: String

  """số lượng"""
  qty: Int

  """đã sử dụng"""
  usedQty: Int

  """mã eVoucher"""
  voucherId: ID

  """Số lượng voucher tặng"""
  voucherQty: Int

  """Số ngày sử dụng"""
  voucherExpiredDay: Int

  """loại quà COMMISSION,VOUCHER"""
  type: String

  """Loại thua"""
  isLose: Boolean

  """Hoa hồng"""
  commission: Float
}

input GiftInput {
  """mã quà"""
  code: String

  """tên quà"""
  name: String

  """diển giải"""
  desc: String

  """hình ảnh quà"""
  image: String

  """phần thưởng"""
  payPresent: String

  """số lượng"""
  qty: Int

  """đã sử dụng"""
  usedQty: Int

  """mã eVoucher"""
  voucherId: ID

  """Số lượng voucher tặng"""
  voucherQty: Int

  """Số ngày sử dụng"""
  voucherExpiredDay: Int

  """loại quà COMMISSION,VOUCHER"""
  type: String

  """Loại thua"""
  isLose: Boolean

  """Hoa hồng"""
  commission: Float
}

type GlobalCollaboratorRegistration {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã đăng ký"""
  code: String

  """Mã khách hàng"""
  customerId: ID

  """Tên khách hàng"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email"""
  email: String

  """Mã giới thiệu (SDT)"""
  referralCode: String

  """Mã Người Giới Thiệu"""
  referralGlobalCustomerId: ID

  """Thời gian duyệt"""
  approvedAt: DateTime

  """Thời gian từ chối"""
  rejectedAt: DateTime

  """Lý do từ chối"""
  rejectReason: String

  """Người duyệt"""
  updateByUserId: ID

  """Trạng thái PENDING,APPROVED,REJECTED"""
  status: String

  """Số CMND"""
  identityNumber: String

  """Người duyệt"""
  updateBy: User

  """Khách hàng"""
  customer: GlobalCustomer
}

type GlobalCollaboratorRegistrationPageData {
  data: [GlobalCollaboratorRegistration]
  total: Int
  pagination: Pagination
}

type GlobalCustomer {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã khách hàng"""
  code: String

  """Tên khách hàng"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email"""
  email: String

  """Ảnh đại diện"""
  avatar: String

  """Giới tính male,female,other"""
  gender: String

  """Ngày sinh"""
  birthday: DateTime

  """Full địa chỉ"""
  fullAddress: String
  latitude: Float
  longitude: Float

  """Là cộng tác viên"""
  isCTV: Boolean

  """Id của cộng tác viên"""
  refId: String

  """Thời gian cộng tác viên"""
  isCTVAt: DateTime

  """Mã Người Giới Thiệu"""
  referralGlobalCustomerId: ID

  """danh sách customerid"""
  customerIds: [String]

  """Có mật khẩu"""
  hasPassword: Boolean

  """Loại người dùng INDIVIDUAL,COMPANY"""
  type: String

  """Tên công ty"""
  companyName: String

  """MST công ty"""
  companyTaxNumber: String

  """Hotline công ty"""
  companyHotline: String

  """Địa chỉ công ty"""
  companyAddress: String

  """Mã đối tác"""
  affiliateId: String
  citizenId: String
  address: String
  affiliate: Affiliate
  commissionWalletId: Mixed
  commissionWallet: WalletBalance
  statisticProductSalesBonusPolicy: [GlobalCustomerStatisticProductSalesBonusPolicy]
  refLink: String
  collaboratorRegis: GlobalCollaboratorRegistration

  """Ví Momo"""
  momoWallet: CustomerMomoWallet
}

type GlobalCustomerCheckPhoneExist {
  isDupplicate: Boolean
}

input GlobalCustomerCreateShopAffiliateRequestInput {
  shopId: String!
  taxCode: String
  referrerPhoneNumber: String
  referrerCode: String
  bankName: String!
  bankAccountName: String!
  bankAccountNumber: String!
}

type GlobalCustomerLoginData {
  globalCustomer: GlobalCustomer
  token: String
}

type GlobalCustomerPageData {
  data: [GlobalCustomer]
  total: Int
  pagination: Pagination
}

type GlobalCustomerStatisticProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type GlobalProductCategory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên danh mục dịch vụ sản phẩm"""
  name: String

  """Slug"""
  slug: String
  icon: String
  image: String

  """Độ ưu tiên dịch vụ sản phẩm"""
  priority: Int

  """Cấp độ của danh mục dịch vụ (cha: 1, con: 2)"""
  level: Int

  """Có danh mục con không"""
  hasChildren: Boolean

  """Trạng thái đã ẩn"""
  isHidden: Boolean

  """Id danh mục dịch vụ cha"""
  parentId: String

  """Danh mục cha"""
  parentCategory: GlobalProductCategory
}

type GlobalProductCategoryPageData {
  data: [GlobalProductCategory]
  total: Int
  pagination: Pagination
}

input GoShipApiQuery {
  size: Int!
  page: Int!
}

type GoShipCity {
  id: String
  name: String
}

type GoShipDistrict {
  id: String
  name: String
  cityId: String
}

type GoShipSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type GoShipSettingPageData {
  data: [GoShipSetting]
  total: Int
  pagination: Pagination
}

type GoShipShopConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isAllowCustomerChoose: Boolean
  goShipAccountInformation: Mixed
  memberId: ID
  agencyId: ID
  goShipSettingId: ID
  isUsingAccountSystem: Boolean
  accountTypeUsing: EGoShipAccountType

  """Số tiền markup cứng luôn cộng vào phí ship"""
  fixedMarkupShipmentFee: Float

  """Phần trăm markup cộng vào phí ship"""
  percentageMarkupShipmentFee: Float
}

type GoShipShopConfigPageData {
  data: [GoShipShopConfig]
  total: Int
  pagination: Pagination
}

type GoShipWard {
  id: Int
  name: String
  districtId: String
}

type GrabExpressConfig {
  """Đã kích hoạt"""
  isActivated: Boolean

  """Tên của tài khoản sử dụng cho GrabExpress"""
  name: String

  """Tính phí ship theo GrabExpress ?"""
  isCalculateShipFeeByGrabExpress: Boolean

  """Số điện thoại sử dụng cho GrabExpress"""
  phoneNumber: String

  """Địa chỉ"""
  address: String

  """Vĩ độ"""
  lat: Float

  """Kinh độ"""
  lng: Float

  """Mã quốc gia (Mặc định : VN)"""
  countryCode: String
  email: String
  approvalServices: [String]
}

input GrabExpressConfigInput {
  """Đã kích hoạt"""
  isActivated: Boolean

  """Tên của tài khoản sử dụng cho GrabExpress"""
  name: String

  """Số điện thoại sử dụng cho GrabExpress"""
  phoneNumber: String

  """Địa chỉ"""
  address: String

  """Tính phí ship theo GrabExpress ?"""
  isCalculateShipFeeByGrabExpress: Boolean

  """Vĩ độ"""
  lat: Float

  """Kinh độ"""
  lng: Float

  """Mã quốc gia (Mặc định : VN)"""
  countryCode: String
  email: String
  approvalServices: [String]
}

type GrabExpressDeliveryService {
  id: String
  name: String
}

input GuestCreateShopAffiliateRequestInput {
  psid: Mixed
  taxCode: String
  shopId: String!
  phone: String
  name: String
  email: String
  citizenId: String
  fullAddress: String
  gender: String
  referrerPhoneNumber: String
  referrerCode: String
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  type: ShopAffiliateRequestType
  password: String
}

type HistoryServiceReservation {
  """Ngày tạo"""
  date: DateTime

  """Tên người thực hiện thao tác"""
  name: String

  """Loại thao tác: RESERVED,UPDATED,CONFIRMED,COMPLETED,CANCELED"""
  type: String

  """Giá đã được updated"""
  updatedTotalPrice: Float
}

type imageData {
  url: String
  width: Float
  height: Float
  alt: String
  type: String
}

input imageDataInput {
  url: String
  width: Float
  height: Float
  alt: String
  type: String
}

type IndividualProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  disbursementPeriodId: String
  rules: [IndividualProductSalesBonusPolicyRule]
  member: Member
  productWithinIndividualProductSalesBonusPolicies: [ProductWithinIndividualProductSalesBonusPolicy]
  individualProductSalesBonusPolicyLogs: [IndividualProductSalesBonusPolicyLog]
  totalBonus: Mixed
  shopAffiliateIndividualProductSalesBonusPolicy: ShopAffiliateIndividualProductSalesBonusPolicy
}

type IndividualProductSalesBonusPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  member: Member
  shopAffiliateIndividualProductSalesBonusPolicyId: String
  affiliateId: String
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerId: String
  customer: Customer
  customerName: String
  targetAffiliateId: String
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: String
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: String
  targetCustomer: Customer
  targetCustomerName: String
  globalBuyerId: String
  globalBuyer: GlobalCustomer
  buyerId: String
  buyer: Customer
  buyerName: String
  productId: String
  product: Product
  productName: String
  productAttributeElements: [OrderItemProductAttributeElement]
  revenue: Int
  point: Int
  qty: Int
  basePrice: Int
  individualProductSalesBonusPolicyId: String
  individualProductSalesBonusPolicy: IndividualProductSalesBonusPolicy
  orderId: String
  order: Order
  orderCode: String

  """Trạng thái PENDING,APPROVED,CANCELED,DISABLED"""
  status: String
}

type IndividualProductSalesBonusPolicyLogPageData {
  data: [IndividualProductSalesBonusPolicyLog]
  total: Int
  pagination: Pagination
}

type IndividualProductSalesBonusPolicyLogRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

type IndividualProductSalesBonusPolicyPageData {
  data: [IndividualProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type IndividualProductSalesBonusPolicyRule {
  totalRevenue: Int
  bonusValue: Float
}

input IndividualProductSalesBonusPolicyRuleInput {
  totalRevenue: Int!
  bonusValue: Float!
}

type IndividualServiceContractTypeSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  disbursementPeriodId: String
  rules: [IndividualServiceContractTypeSalesBonusPolicyRule]
  member: Member
  serviceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicies: [ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy]
  individualServiceContractTypeSalesBonusPolicyLogs: [IndividualServiceContractTypeSalesBonusPolicyLog]
  totalBonus: Mixed
  shopAffiliateIndividualServiceContractTypeSalesBonusPolicy: ShopAffiliateIndividualServiceContractTypeSalesBonusPolicy
}

type IndividualServiceContractTypeSalesBonusPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  member: Member
  shopAffiliateIndividualServiceContractTypeSalesBonusPolicyId: String
  affiliateId: String
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerId: String
  customer: Customer
  customerName: String
  targetAffiliateId: String
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: String
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: String
  targetCustomer: Customer
  targetCustomerName: String
  globalBuyerId: String
  globalBuyer: GlobalCustomer
  buyerId: String
  buyer: Customer
  buyerName: String
  serviceContractTypeId: String
  serviceContractType: ServiceContractType
  serviceContractTypeName: String
  revenue: Int
  point: Int
  qty: Int
  quantity: Int
  basePrice: Int
  individualServiceContractTypeSalesBonusPolicyId: String
  individualServiceContractTypeSalesBonusPolicy: IndividualServiceContractTypeSalesBonusPolicy
  serviceContractId: ID
  serviceContractCode: String
  serviceContract: ServiceContract

  """Trạng thái PENDING,APPROVED,CANCELED,DISABLED"""
  status: String
}

type IndividualServiceContractTypeSalesBonusPolicyLogPageData {
  data: [IndividualServiceContractTypeSalesBonusPolicyLog]
  total: Int
  pagination: Pagination
}

type IndividualServiceContractTypeSalesBonusPolicyLogRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

type IndividualServiceContractTypeSalesBonusPolicyPageData {
  data: [IndividualServiceContractTypeSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type IndividualServiceContractTypeSalesBonusPolicyRule {
  totalRevenue: Int
  bonusValue: Float
}

input IndividualServiceContractTypeSalesBonusPolicyRuleInput {
  totalRevenue: Int!
  bonusValue: Float!
}

type InteractiveInformationCustomer {
  registerAt: DateTime
  latestLoginAt: DateTime
  latestOrderAt: DateTime
  accessesStatistic: [AmountByPlatform]
}

type InternalDriverConfig {
  isCalculateShipFeeByShopSetting: Boolean

  """Tính phí ship theo ahamove ?"""
  isCalculateShipFeeByAhamove: Boolean
  isCalculateShipFeeByGrabExpress: Boolean
  isAllowCustomerChoose: Boolean
}

input InternalDriverConfigInput {
  isCalculateShipFeeByShopSetting: Boolean

  """Tính phí ship theo ahamove ?"""
  isCalculateShipFeeByAhamove: Boolean
  isCalculateShipFeeByGrabExpress: Boolean
  isAllowCustomerChoose: Boolean
}

type InventoryVoucher {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã phiếu"""
  code: String

  """Loại phiếu IMPORT,EXPORT"""
  type: String

  """Mã cửa hàng"""
  memberId: String

  """Mã chi nhánh"""
  branchId: String

  """Id đơn hàng"""
  orderId: String

  """Ngày hạch toán"""
  accountingDate: DateTime

  """Ngày chứng từ"""
  voucherDate: DateTime

  """Tên người xử lý phiêu kho (chủ cửa hàng, nhân viên)"""
  staffName: String

  """Mã nhân viên"""
  staffCode: String

  """Id của nhân viên"""
  staffId: String

  """Mã phiếu chứng từ """
  voucherCode: String

  """Lý do IMPORT,RETURN,ONLINE,RETAIL,WHOLESALE,DAMAGED,OTHER,AUDIT"""
  reason: String

  """Diễn giải"""
  explain: Mixed

  """Tổng tiền phiếu kho"""
  total: Float

  """Link hình ảnh"""
  images: [String]

  """Danh sách sản phẩm trong phiếu kho"""
  inventoryVoucherProductList: [InventoryVoucherProduct]

  """Thông tin chi nhánh"""
  branch: ShopBranch

  """Thông tin kho"""
  warehouse: Warehouse

  """Đơn hàng"""
  order: Order

  """Số lượng sản phẩm trong phiếu"""
  totalAmount: Int

  """Tông chiết khấu"""
  totalDiscount: Float
}

type InventoryVoucherPageData {
  data: [InventoryVoucher]
  total: Int
  pagination: Pagination
  error: Mixed
}

type InventoryVoucherProduct {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã phiếu kho"""
  inventoryVoucherId: String

  """Id của sản phẩm"""
  productId: String

  """Mã sản phẩm"""
  productCode: String

  """Tên sản phẩm"""
  productName: String
  productImageUrl: String

  """Nhà cung"""
  provider: String

  """Giá"""
  price: Float

  """Số lượng"""
  amount: Int

  """Chiết khấu"""
  discount: Float

  """Tổng tiền sản phẩm"""
  total: Float

  """Id sản phẩm trong kho """
  warehouseProductId: String

  """Id của cửa hàng """
  memberId: String

  """Id của chi nhánh """
  branchId: String

  """Id của danh mục sản phẩm """
  categoryId: String
  type: String

  """Id của kho"""
  warehouseId: String

  """Lý do"""
  reason: String

  """Số lượng hàng sau khi nhập xuất"""
  currentInStockCount: Mixed

  """Kho hàng"""
  warehouse: Warehouse

  """Sản phẩm trong kho"""
  warehouseProduct: WarehouseProduct

  """Phiếu nhập/xuất kho"""
  inventoryVoucher: InventoryVoucher
}

type InventoryVoucherProductPageData {
  data: [InventoryVoucherProduct]
  total: Int
  pagination: Pagination
  error: Mixed
}

type InvitedCustomer {
  """Mã KH"""
  id: ID

  """Tên KH"""
  name: String

  """Ảnh đại diện"""
  avatar: String

  """Điện thoại"""
  phone: String

  """Đã mua hàng"""
  ordered: Boolean

  """Hoa hồng"""
  commission: Float
}

type InvitedCustomerPageData {
  data: [InvitedCustomer]
  total: Int
  pagination: Pagination
}

type Invoice {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Invoice GUID / provider-specific id (dùng để tra cứu, update, ký)"""
  invoiceAuthId: String

  """Invoice series / ký hiệu hóa đơn"""
  invoiceSeries: String

  """Mã nội bộ đơn/hóa đơn"""
  internalReferenceCode: String

  """Ngày phát hành (YYYY-MM-DD)"""
  issuedDate: DateTime

  """Tên người mua (cá nhân) hoặc tên đại diện doanh nghiệp"""
  buyerDisplayName: String

  """Địa chỉ người mua / địa chỉ chi nhánh mua hàng"""
  buyerAddress: String

  """Email người mua"""
  buyerEmail: String

  """Mã số thuế người mua"""
  buyerTaxCode: String

  """Hình thức thanh toán (TM, CK, ...)"""
  paymentMethod: String

  """Tổng tiền chiết khấu"""
  discountAmount: Mixed

  """Số tài khoản người mua"""
  buyerBankAccount: String

  """Ngân hàng người mua"""
  buyerBankName: String

  """Tên pháp lý người mua (dành cho doanh nghiệp)"""
  buyerLegalName: String

  """Tổng tiền chưa thuế (subtotal)"""
  totalWithoutValueAddedTax: Mixed

  """Tổng tiền thuế GTGT"""
  valueAddedTaxAmount: Mixed

  """Tổng tiền sau thuế (grand total)"""
  totalAmount: Mixed

  """Phụ phí khác hoặc phí dịch vụ"""
  otherFee: Mixed

  """Giảm trừ an sinh xã hội (nếu áp dụng)"""
  socialDeductionAmount: Mixed

  """Mã chi nhánh bán hàng"""
  branchCode: String

  """Địa chỉ chi nhánh cửa hàng (dchicuahang)"""
  branchAddress: String

  """Số tiền viết bằng chữ"""
  amountInWords: String

  """Căn cước công dân / CMND người mua (nếu có)"""
  buyerIdentityCard: String

  """Số điện thoại người mua (nếu có)"""
  buyerPhone: String

  """Số hộ chiếu người mua (nếu có)"""
  buyerPassport: String

  """Mã đơn vị Quan hệ Ngân sách (nếu cần)"""
  budgetEntityCode: String
  items: [InvoiceItem]
}

enum InvoiceCategory {
  T
  D
  L
  M
  N
  B
  G
  H
  X
}

enum InvoiceCodeType {
  C
  K
}

type InvoiceConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  autoIssueInvoiceConfig: AutoIssueInvoiceConfig
  invoiceFieldConfig: InvoiceFieldConfig
  isAutoIssuePerDay: Boolean
  dateFieldAutoIssuePerDay: EDateFieldAutoIssuePerDay
  fixedIssueTimePerDay: String
  showInvoiceRequestQR: Boolean
  qrExpiryHours: Int
}

type InvoiceConfigPageData {
  data: [InvoiceConfig]
  total: Int
  pagination: Pagination
}

type InvoiceContractPackageDetail {
  packageId: String
  packageCode: String
  packageName: String
  packageUnit: String
  packageProvider: String
  amountInvoice: Int
  quantity: Int
  pricePerItem: Float
  totalPrice: Float
  packageCategory: String
  packageType: String
}

input InvoiceDataInput {
  """Invoice GUID / provider-specific id (dùng để tra cứu, update, ký)"""
  invoiceAuthId: String

  """Invoice series / ký hiệu hóa đơn"""
  invoiceSeries: String

  """Mã nội bộ đơn/hóa đơn"""
  internalReferenceCode: String

  """Ngày phát hành (YYYY-MM-DD)"""
  issuedDate: String

  """Tên người mua (cá nhân) hoặc tên đại diện doanh nghiệp"""
  buyerDisplayName: String

  """Địa chỉ người mua / địa chỉ chi nhánh mua hàng"""
  buyerAddress: String

  """Email người mua"""
  buyerEmail: String

  """Mã số thuế người mua"""
  buyerTaxCode: String

  """Hình thức thanh toán (TM, CK, ...)"""
  paymentMethod: String

  """Tổng tiền chiết khấu"""
  discountAmount: Mixed

  """Số tài khoản người mua"""
  buyerBankAccount: String

  """Ngân hàng người mua"""
  buyerBankName: String

  """Tên pháp lý người mua (dành cho doanh nghiệp)"""
  buyerLegalName: String

  """Tổng tiền chưa thuế (subtotal)"""
  totalWithoutValueAddedTax: Mixed

  """Tổng tiền thuế GTGT"""
  valueAddedTaxAmount: Mixed

  """Tổng tiền sau thuế (grand total)"""
  totalAmount: Mixed

  """Phụ phí khác hoặc phí dịch vụ"""
  otherFee: Mixed

  """Giảm trừ an sinh xã hội (nếu áp dụng)"""
  socialDeductionAmount: Mixed

  """Mã chi nhánh bán hàng"""
  branchCode: String

  """Địa chỉ chi nhánh cửa hàng (dchicuahang)"""
  branchAddress: String

  """Số tiền viết bằng chữ"""
  amountInWords: String

  """Căn cước công dân / CMND người mua (nếu có)"""
  buyerIdentityCard: String

  """Số điện thoại người mua (nếu có)"""
  buyerPhone: String

  """Số hộ chiếu người mua (nếu có)"""
  buyerPassport: String

  """Mã đơn vị Quan hệ Ngân sách (nếu cần)"""
  budgetEntityCode: String
  items: [InvoiceItemDataInput]
}

"""Định nghĩa chi tiết từng dòng hóa đơn trả về"""
type InvoiceDetailItemMInvoice {
  tchat: EMInvoiceLineItemType
  stt_rec0: String
  inv_itemCode: String
  inv_itemName: String
  inv_unitCode: String
  inv_unitPrice: Float
  inv_quantity: Int
  inv_discountPercentage: Float
  inv_discountAmount: Float
  inv_TotalAmountWithoutVat: Float
  ma_thue: Mixed
  inv_vatAmount: Float
  inv_TotalAmount: Float
}

"""Chi tiết từng dòng hóa đơn."""
input InvoiceDetailItemMInvoiceInput {
  """Loại dòng (hàng hóa, khuyến mãi, chiết khấu, ghi chú...)"""
  tchat: EMInvoiceLineItemType!

  """Mã số thứ tự dòng (4 ký tự)"""
  stt_rec0: String!

  """Mã hàng hóa/dịch vụ"""
  inv_itemCode: String

  """Tên hàng hóa/dịch vụ"""
  inv_itemName: String

  """Mã đơn vị tính"""
  inv_unitCode: String

  """Đơn giá (chưa thuế)"""
  inv_unitPrice: Float

  """Số lượng"""
  inv_quantity: Int

  """Tỷ lệ chiết khấu (%)"""
  inv_discountPercentage: Float

  """Tiền chiết khấu"""
  inv_discountAmount: Float

  """Thành tiền chưa thuế"""
  inv_TotalAmountWithoutVat: Float

  """Mã thuế GTGT"""
  ma_thue: Mixed

  """Tiền thuế"""
  inv_vatAmount: Float

  """Thành tiền sau thuế"""
  inv_TotalAmount: Float
}

"""Nhóm chi tiết hóa đơn (tương ứng với details trong type)"""
type InvoiceDetailMInvoice {
  data: [InvoiceDetailItemMInvoice!]
}

"""Nhóm chi tiết hóa đơn, mỗi nhóm có list items."""
input InvoiceDetailMInvoiceInput {
  """Danh sách dòng chi tiết"""
  data: [InvoiceDetailItemMInvoiceInput!]!
}

type InvoiceElectronicContract {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  member: Member
  agencyId: String
  agency: Agency
  contractName: String
  buyerName: String
  representativeName: String
  representativeTitle: String
  taxCode: String
  phoneNumberContact: String
  emailContact: String
  bankAccount: String
  provider: String
  providerContractId: String
  buyerTaxCode: String
  startDate: DateTime
  endDate: DateTime
  paymentMethod: String
  paymentMeta: Mixed
  paymentMetas: Mixed
  totalPrice: Float
  contractStatus: EInvoiceElectronicContractStatus
  contractType: EInvoiceContractType
  paymentStatus: EInvoiceContractPaymentStatus
  packageDetails: [InvoiceContractPackageDetail]
}

type InvoiceElectronicContractPageData {
  data: [InvoiceElectronicContract]
  total: Int
  pagination: Pagination
}

type InvoiceFieldConfig {
  taxCode: BaseField
  companyName: BaseField
  buyerName: BaseField
  phone: BaseField
  email: BaseField
  address: BaseField
  citizenId: BaseField
  passport: BaseField
  buyerBankAccount: BaseField
  buyerBankName: BaseField
  budgetRelationUnitCode: BaseField
}

input InvoiceFieldConfigInput {
  taxCode: BaseFieldInput
  companyName: BaseFieldInput
  buyerName: BaseFieldInput
  phone: BaseFieldInput
  email: BaseFieldInput
  address: BaseFieldInput
  citizenId: BaseFieldInput
  passport: BaseFieldInput
  buyerBankAccount: BaseFieldInput
  buyerBankName: BaseFieldInput
  budgetRelationUnitCode: BaseFieldInput
}

type InvoiceInformationRequest {
  """Mã số thuế (Tax code)"""
  taxCode: String

  """Tên đơn vị (Company / Organization name)"""
  companyName: String

  """Tên người mua (Buyer name)"""
  buyerName: String

  """Số điện thoại (Phone)"""
  phone: String

  """Email"""
  email: String

  """Địa chỉ (Address)"""
  address: String

  """CCCD / CMND (Citizen ID)"""
  citizenId: String

  """Hộ chiếu (Passport)"""
  passport: String

  """Số tài khoản bên mua (Buyer's bank account)"""
  buyerBankAccount: String

  """Tên ngân hàng (Buyer's bank name)"""
  buyerBankName: String

  """Mã đơn vị quan hệ ngân sách (Budget relationship unit code)"""
  budgetRelationUnitCode: String
}

input InvoiceInformationRequestInput {
  """Mã số thuế (Tax code)"""
  taxCode: String

  """Tên đơn vị (Company / Organization name)"""
  companyName: String

  """Tên người mua (Buyer name)"""
  buyerName: String

  """Số điện thoại (Phone)"""
  phone: String

  """Email"""
  email: String

  """Địa chỉ (Address)"""
  address: String

  """CCCD / CMND (Citizen ID)"""
  citizenId: String

  """Hộ chiếu (Passport)"""
  passport: String

  """Số tài khoản bên mua (Buyer's bank account)"""
  buyerBankAccount: String

  """Tên ngân hàng (Buyer's bank name)"""
  buyerBankName: String

  """Mã đơn vị quan hệ ngân sách (Budget relationship unit code)"""
  budgetRelationUnitCode: String
}

type InvoiceItem {
  """
  Loại dòng (HANG_HOA, KHUYEN_MAI, CHIET_KHAU, GHI_CHU, ...) - enum dùng chung
  """
  lineType: EMInvoiceLineItemType!

  """Mã số thứ tự dòng """
  lineNumber: Int

  """Mã hàng hóa/dịch vụ (inv_itemCode)"""
  itemCode: String

  """Tên hàng hóa/dịch vụ (inv_itemName)"""
  itemName: String

  """Mã đơn vị tính (inv_unitCode)"""
  unitCode: String

  """Đơn giá chưa thuế (inv_unitPrice)"""
  unitPrice: Mixed

  """Số lượng (inv_quantity)"""
  quantity: Int

  """Tỷ lệ chiết khấu (%) (inv_discountPercentage)"""
  discountPercentage: Mixed

  """Tiền chiết khấu (inv_discountAmount)"""
  discountAmount: Mixed

  """Thành tiền chưa thuế (inv_TotalAmountWithoutVat)"""
  totalWithoutValueAddedTax: Mixed

  """Mã thuế"""
  taxCode: EInvoiceTaxRateCode

  """Tiền thuế (inv_valueAddedTaxAmount)"""
  valueAddedTaxAmount: Mixed

  """Thành tiền sau thuế (inv_TotalAmount)"""
  totalAmount: Mixed

  """Ghi chú dòng (nếu cần)"""
  note: String

  """Đơn vị tiền tệ (VD: VND, USD) nếu cần mở rộng"""
  currency: String
}

input InvoiceItemDataInput {
  """
  Loại dòng (HANG_HOA, KHUYEN_MAI, CHIET_KHAU, GHI_CHU, ...) - enum dùng chung
  """
  lineType: EMInvoiceLineItemType!

  """Mã số thứ tự dòng """
  lineNumber: Int

  """Mã hàng hóa/dịch vụ (inv_itemCode)"""
  itemCode: String

  """Tên hàng hóa/dịch vụ (inv_itemName)"""
  itemName: String

  """Mã đơn vị tính (inv_unitCode)"""
  unitCode: String

  """Đơn giá chưa thuế (inv_unitPrice)"""
  unitPrice: Mixed

  """Số lượng (inv_quantity)"""
  quantity: Int

  """Tỷ lệ chiết khấu (%) (inv_discountPercentage)"""
  discountPercentage: Mixed

  """Tiền chiết khấu (inv_discountAmount)"""
  discountAmount: Mixed

  """Thành tiền chưa thuế (inv_TotalAmountWithoutVat)"""
  totalWithoutValueAddedTax: Mixed

  """Mã thuế"""
  taxCode: EInvoiceTaxRateCode

  """Tiền thuế (inv_valueAddedTaxAmount)"""
  valueAddedTaxAmount: Mixed

  """Thành tiền sau thuế (inv_TotalAmount)"""
  totalAmount: Mixed

  """Ghi chú dòng (nếu cần)"""
  note: String

  """Đơn vị tiền tệ (VD: VND, USD) nếu cần mở rộng"""
  currency: String
}

"""Kết quả trả về của mutation preview/create/getInfo."""
type InvoiceMInvoiceInfo {
  """Mã nội bộ đơn/hóa đơn"""
  so_benh_an: String

  """Mã tiền tệ (VD: VND)"""
  inv_currencyCode: String

  """Tỷ giá so với VND"""
  inv_exchangeRate: Int

  """ID xác thực hóa đơn từ M-Invoice"""
  inv_invoiceAuth_id: String

  """Ngày phát hành (định dạng ISO)"""
  inv_invoiceIssuedDate: String

  """Ký hiệu hóa đơn"""
  inv_invoiceSeries: String

  """Số hóa đơn"""
  inv_invoiceNumber: Int

  """MST người bán"""
  inv_sellerTaxCode: String

  """Tên pháp lý người bán"""
  inv_sellerLegalName: String

  """Tên người mua"""
  inv_buyerDisplayName: String

  """MST người mua"""
  inv_buyerTaxCode: String

  """Địa chỉ người mua"""
  inv_buyerAddressLine: String

  """Email người mua"""
  inv_buyerEmail: String

  """Số TK người mua"""
  inv_buyerBankAccount: String

  """Ngân hàng người mua"""
  inv_buyerBankName: String

  """Căn cước công dân người mua"""
  buyerIdentityCard: String

  """Số điện thoại người mua"""
  buyerTel: String

  """Tên doanh nghiệp người mua"""
  inv_buyerLegalName: String

  """Tổng tiền chưa thuế"""
  inv_TotalAmountWithoutVat: Float

  """Tổng thuế GTGT"""
  inv_vatAmount: Float

  """Tổng tiền đã thuế"""
  inv_TotalAmount: Float

  """Hình thức thanh toán"""
  inv_paymentMethodName: String

  """Tiền chiết khấu"""
  inv_discountAmount: Float

  """Phí khác"""
  ortherFee: Float

  """Khấu trừ an sinh xã hội"""
  socialDeductionAmount: Float

  """Mã chi nhánh"""
  ma_ch: String

  """Địa chỉ chi nhánh"""
  dchicuahang: String

  """Tổng tiền viết bằng chữ"""
  amount_to_word: String

  """Trạng thái hóa đơn"""
  is_tthdon: EMInvoiceInvoiceStatus

  """Trạng thái gửi cơ quan thuế"""
  tthai: EMInvoiceSendStatus

  """Chi tiết các dòng hóa đơn"""
  details: [InvoiceDetailMInvoice]

  """Số hóa đơn do CQT cấp"""
  soHoaDon: String

  """Mã cơ quan thuế"""
  maCQT: String

  """Số hộ chiếu người mua (nếu có)"""
  so_hchieu: String

  """Mã đơn vị Quan hệ Ngân sách"""
  mdvqhnsach_nmua: String
}

"""Các trường override cho Preview/Tạo hóa đơn."""
input InvoiceOverrideMInvoiceInput {
  """
  ID định danh hóa đơn (GUID), thường dùng để tra cứu hoặc update hoặc ký hóa đơn
  """
  inv_invoiceAuth_id: String

  """Ký hiệu hóa đơn"""
  inv_invoiceSeries: String

  """Mã nội bộ đơn/hóa đơn"""
  so_benh_an: String

  """Ngày phát hành (YYYY-MM-DD)"""
  inv_invoiceIssuedDate: String

  """Tên người mua (cá nhân) hoặc đại diện doanh nghiệp"""
  inv_buyerDisplayName: String

  """Địa chỉ chi nhánh mua hàng"""
  inv_buyerAddressLine: String

  """Email người mua"""
  inv_buyerEmail: String

  """Mã số thuế người mua"""
  inv_buyerTaxCode: String

  """Số TK người mua"""
  inv_buyerBankAccount: String

  """Ngân hàng người mua"""
  inv_buyerBankName: String

  """Tên pháp lý người mua (doanh nghiệp)"""
  inv_buyerLegalName: String

  """Tổng tiền chưa thuế"""
  inv_TotalAmountWithoutVat: Float

  """Tổng tiền thuế GTGT"""
  inv_vatAmount: Float

  """Tổng tiền sau thuế"""
  inv_TotalAmount: Float

  """Hình thức thanh toán (TM, CK, ...)"""
  inv_paymentMethodName: String

  """Tiền chiết khấu"""
  inv_discountAmount: Float

  """Phụ phí khác"""
  ortherFee: Float

  """Giảm trừ an sinh xã hội"""
  socialDeductionAmount: Float

  """Mã chi nhánh"""
  ma_ch: String

  """Địa chỉ chi nhánh cửa hàng"""
  dchicuahang: String

  """Số tiền viết bằng chữ"""
  amount_to_word: String

  """Căn cước công dân người mua (nếu có)"""
  buyerIdentityCard: String

  """Số điện thoại người mua (nếu có)"""
  buyerTel: String

  """Số hộ chiếu người mua (nếu có)"""
  so_hchieu: String

  """Mã đơn vị Quan hệ Ngân sách"""
  mdvqhnsach_nmua: String

  """Mảng nhóm chi tiết hóa đơn"""
  details: [InvoiceDetailMInvoiceInput]
}

type InvoicePageData {
  data: [Invoice]
  total: Int
  pagination: Pagination
}

type InvoiceRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  invoiceInformationRequest: InvoiceInformationRequest
  memberId: ID
  customerId: ID
  customerName: String
  customerPhone: String
  orderId: ID
  orderCode: String
  serviceContractId: ID
  serviceContractCode: String
  hadIssueInvoice: Boolean
  orderInvoiceId: ID

  """Ký hiệu hóa đơn"""
  sourceSerialNo: String

  """Số hóa đơn """
  sourceNumberNo: Mixed

  """Đơn vị HDDT"""
  sourceInvoiceType: ESourceInvoiceType
  amount: Mixed
}

type InvoiceRequestPageData {
  data: [InvoiceRequest]
  total: Int
  pagination: Pagination
}

type InvoiceSerialMetadata {
  invoiceTypeSerialMetadata: MInvoiceInvoiceTypeSerialMetadata
  invoiceCodeTypeLabel: CodeTypeLabelMetadata
  invoiceCategoryLabel: CategoryLabelMetadata
}

type InvoiceTypeSerialEntry {
  reportName: String
  formNumber: String
  possibleCodeTypes: [InvoiceCodeType]
  possibleCategories: [InvoiceCategory]
}

input IssueInvoiceInput {
  isAutoSign: Boolean
  orderId: ID
  serviceContractId: ID
  invoiceRequestId: ID
  sourceInvoiceType: ESourceInvoiceType!
  invoiceData: InvoiceDataInput
}

type JoinedFormMinigame {
  name: String
  phone: String
  email: String
  birthday: String
  address: String
  image: String
}

type JoinedMinigame {
  id: String
  type: String
  name: String
  rewards: [JoinedRewardMinigame]
  form: JoinedFormMinigame
  isDeleted: Boolean
  totalRewardCount: Int
  playerTurnLogs: [PlayerTurnLogMinigame]
  minigameTypeName: String
}

type JoinedRewardMinigame {
  name: String
  quantity: Int
}

type KeyValue {
  key: String
  value: String
}

type KlineData {
  labels: [String]
  datasets: [DataSet]
}

type KpiReferralCommissionPolicy {
  """Số người giới thiệu"""
  referralAmount: Int

  """Loại thưởng hoa hồng"""
  commissionType: ReferralCommissionPolicyCommissionType

  """Giá trị thưởng hoa hồng"""
  commissionValue: Float
}

input KpiReferralCommissionPolicyInput {
  """Số người giới thiệu"""
  referralAmount: Int

  """Loại thưởng hoa hồng"""
  commissionType: ReferralCommissionPolicyCommissionType

  """Giá trị thưởng hoa hồng"""
  commissionValue: Float
}

type Label {
  label: String
  value: String
}

type LeaderBoard {
  shopAffiliateId: String
  shopAffiliate: ShopAffiliatePublic
  value: Mixed
}

type LeaderBoardConfig {
  isActivated: Boolean
  numberTopDisplay: Int

  """Thời gian setting này được áp dụng"""
  applyTime: DateTime

  """Loại định kỳ cho BXH tuần hoăc tháng"""
  duration: EDurationLeaderBoardConfig

  """Số tuần hoặc số tháng"""
  amountDuration: Int

  """
  Thời điểm. Đối tới tuần thì 1:Monday, 2:Tuesday....(1->7). Đối với tháng thì như bình thường 1->31
  """
  timePointOfDuration: Int

  """Giờ"""
  timePointOfHour: Int

  """phút"""
  timePointOfMinute: Int
  selectedTypes: [ETypeLeaderBoardConfig]
}

input LeaderBoardConfigInput {
  isActivated: Boolean!
  numberTopDisplay: Int
  applyTime: DateTime

  """Loại định kỳ cho BXH tuần hoăc tháng"""
  duration: EDurationLeaderBoardConfig

  """Số tuần hoặc số tháng"""
  amountDuration: Int

  """
  Thời điểm. Đối tới tuần thì 1:Monday, 2:Tuesday....(1->7). Đối với tháng thì như bình thường 1->31
  """
  timePointOfDuration: Int

  """Giờ"""
  timePointOfHour: Int

  """phút"""
  timePointOfMinute: Int
  selectedTypes: [ETypeLeaderBoardConfig]
}

type LeaderBoardSetting {
  recentResetTime: DateTime
  nextResetTime: DateTime
  numberTopDisplay: Int
  applyTime: DateTime
  duration: EDurationLeaderBoardConfig
  timePointOfDuration: Int
  timePointOfHour: Int
  timePointOfMinute: Int
  amountDuration: Int
}

type LoginAgencyUserData {
  agencyUser: AgencyUser
  token: String
}

input LoginAgencyUserInput {
  username: String!
  password: String!
  deviceId: String
  deviceToken: String
}

input LoginAnonymousInput {
  agencyCode: String
  shopCode: String
}

type LoginData {
  user: User
  token: String
}

type loginDriverData {
  driver: Driver
  token: String
}

type LoginStaffData {
  staff: Staff
  token: String
}

type LuckyWheel {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã vòng quay"""
  code: String

  """Tiêu đề vòng quay"""
  title: String

  """màu nền vòng quay"""
  backgroundColor: String

  """hình nền vòng quay"""
  backgroundImage: String

  """màu nút"""
  buttonColor: String

  """ảnh banner"""
  bannerImage: String

  """ảnh footer"""
  footerImage: String

  """ảnh vòng quay"""
  wheelImage: String

  """ảnh pin"""
  pinImage: String

  """tiêu đề nút quay"""
  btnTitle: String

  """ngày bắt đầu"""
  startDate: DateTime

  """ngày kết thúc"""
  endDate: DateTime

  """tỉ lệ thắng"""
  successRatio: Int

  """Điểm chơi game được yêu cầu"""
  gamePointRequired: Int

  """danh sách món quà"""
  gifts: [Gift]

  """Kích hoạt"""
  isActive: Boolean

  """Cấu hình thiết kế vòng quay"""
  designConfig: Mixed

  """Số lượng phát hành"""
  issueNumber: Int

  """Phát hành mỗi ngày"""
  issueByDate: Boolean

  """Số lượng sử dụng / mỗi khách"""
  useLimit: Int

  """Số lượng sử dụng theo ngày"""
  useLimitByDate: Boolean

  """Vong quay riêng tư"""
  isPrivate: Boolean
  turn: Int
  turnOfDay: Int
}

type LuckyWheelGift {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã quà"""
  code: String

  """Tên quà"""
  name: String!

  """diển giải"""
  desc: String

  """hình ảnh quà"""
  image: String

  """vị trí"""
  position: Int

  """phần thưởng"""
  payPresent: String

  """điểm trả thưởng"""
  payPoint: Float

  """số lượng"""
  qty: Int

  """đã sử dụng"""
  usedQty: Int

  """mã vòng quay"""
  luckyWheelId: String

  """
  Loại quà CUMMULATIVE_POINT,DILIGENCE_POINT,COMMISSION,PRESENT,EVOUCHER,NOTHING
  """
  type: String

  """Mã eVoucher"""
  eVoucherId: ID

  """Vòng quay"""
  luckyWheel: LuckyWheel

  """eVoucher"""
  eVoucher: EVoucher
}

type LuckyWheelGiftPageData {
  data: [LuckyWheelGift]
  total: Int
  pagination: Pagination
}

type LuckyWheelPageData {
  data: [LuckyWheel]
  total: Int
  pagination: Pagination
}

type LuckyWheelResult {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """mã khách hàng"""
  customerId: ID

  """mã vòng quay"""
  luckyWheelId: ID

  """Mã quà"""
  code: String

  """Quà"""
  gift: Gift
  customer: Customer
  voucher: CustomerVoucher
}

type LuckyWheelResultPageData {
  data: [LuckyWheelResult]
  total: Int
  pagination: Pagination
}

type ManychatConfig {
  """Bật / tắt manychat"""
  active: Boolean

  """Trạng thái kết nối disconnected | connected"""
  status: String

  """Thông tin trang"""
  pageInfo: Mixed

  """Thường thông tin liên kết"""
  mappingField: String
}

input ManychatConfigInput {
  """Bật / tắt manychat"""
  active: Boolean

  """Thường thông tin liên kết"""
  mappingField: String
}

type ManychatCustomFieldSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  manychatId: Mixed
  manychatCustomFieldId: Mixed
  manychatCustomFieldName: String
  customerDataKey: ECustomerDataKey
}

type ManychatCustomFieldSettingPageData {
  data: [ManychatCustomFieldSetting]
  total: Int
  pagination: Pagination
}

input ManyChatCustomSetBotFieldInput {
  fieldId: Mixed
  fieldValue: Mixed
}

type ManyChatPageBotField {
  id: Mixed
  name: String
  type: String
  value: Mixed
  description: String
}

type ManyChatPageCustomField {
  id: Mixed
  name: String
  type: String
  description: String
}

type ManychatPageFlow {
  ns: String
  name: String
  folderId: Int
}

type ManychatPageFlowData {
  flows: [ManychatPageFlow]
  folders: [ManychatPageFolder]
}

type ManychatPageFolder {
  id: String
  name: String
  folderId: Int
}

type ManychatPsid {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  customerId: ID
  psid: Mixed
  manychatId: Mixed
  subscriberInfo: Mixed
}

type ManychatPsidPageData {
  data: [ManychatPsid]
  total: Int
  pagination: Pagination
}

type ManychatSendFlowSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  memberId: String
  triggerType: EManychatSendFlowTriggerType
  sendType: EManychatSendFlowType
  manychatFlowNs: String
  manychatFlowName: String
  isActivated: Boolean
}

type ManychatSendFlowSettingPageData {
  data: [ManychatSendFlowSetting]
  total: Int
  pagination: Pagination
}

type ManychatSendNotificationSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  memberId: ID
  agencyId: ID
  ownerType: EZaloShopOwnerType
  title: String
  content: String
  imageUrl: String
  isActivated: Boolean
}

type ManychatSendNotificationSettingPageData {
  data: [ManychatSendNotificationSetting]
  total: Int
  pagination: Pagination
}

type ManychatSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  manychatApiKey: String
  manychatName: String
  manychatId: Mixed
  isConnectSucceeded: Boolean
  memberId: ID
  isActivated: Boolean
}

type ManyChatSettingAttributeMinigame {
  key: String
  value: EReturnGiftSettingType
}

input ManyChatSettingAttributeMinigameInput {
  key: String
  value: EReturnGiftSettingType
}

type ManyChatSettingMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  merchantId: String
  minigameId: String
  type: EManyChatSettingType
  flowId: String
  attr: [ManyChatSettingAttributeMinigame]
  label: String
}

type ManyChatSettingMinigamePageData {
  data: [ManyChatSettingMinigame]
  total: Int
  pagination: Pagination
}

input ManyChatSettingMinigameUpdateInput {
  minigameId: String
  type: EManyChatSettingType
  flowId: String
  attr: [ManyChatSettingAttributeMinigameInput]
}

type ManychatSettingPageData {
  data: [ManychatSetting]
  total: Int
  pagination: Pagination
}

type MBTerminal {
  """Tên chủ tk"""
  ownerName: String

  """Số tài khoản ngân hàng"""
  bankNumber: String

  """TerminalID của MBBank"""
  terminalId: String
}

input MBTerminalInput {
  """Tên chủ tk"""
  ownerName: String

  """Số tài khoản ngân hàng"""
  bankNumber: String

  """TerminalID của MBBank"""
  terminalId: String
}

type MediaCentral {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type MediaCentralCategory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  memberId: ID
  mediaSource: EMediaSource
  priority: Int
  isActivated: Boolean
  countMediaCentralItem: Int
}

type MediaCentralCategoryPageData {
  data: [MediaCentralCategory]
  total: Int
  pagination: Pagination
}

type MediaCentralItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  mediaCentralCategoryIds: [ID]
  mediaCentralCategories: [MediaCentralCategory]
  thumbnails: [MediaCentralThumbnail]
  lengthSeconds: Mixed
  name: String
  description: String
  mediaSource: EMediaSource
  originalUrl: String
  originalVideoId: String
  originalDescription: String
  originalAuthorId: String
  originalAuthorName: String
  memberId: ID
  isActivated: Boolean
  priority: Int
}

type MediaCentralItemPageData {
  data: [MediaCentralItem]
  total: Int
  pagination: Pagination
}

type MediaCentralPageData {
  data: [MediaCentral]
  total: Int
  pagination: Pagination
}

type MediaCentralThumbnail {
  url: String
  urlType: EUrlType
  name: String
  urlExpireTimestamp: Mixed
  urlExpireAt: DateTime
}

input MediaCentralThumbnailInput {
  url: String
  urlType: EUrlType
  name: String
  urlExpireTimestamp: Mixed
  urlExpireAt: DateTime
}

type MediaCollaboratorProducts {
  mostLikeProducts: [CollaboratorProduct]
  mostShareProducts: [CollaboratorProduct]
  mostCommentProducts: [CollaboratorProduct]
  mostViewProducts: [CollaboratorProduct]
}

type MediaCollaborators {
  mostLikeCollaborators: [Collaborator]
  mostShareCollaborators: [Collaborator]
  mostCommentCollaborators: [Collaborator]
  mostViewCollaborators: [Collaborator]
}

type MediaCollaboratorStats {
  """Tổng lượt xem SP"""
  productsViewCount: Int

  """Tổng lượt like SP"""
  productsLikeCount: Int

  """Tổng lượt share SP"""
  productsShareCount: Int

  """Tổng lượt comment SP"""
  productsCommentCount: Int

  """Tổng link SP"""
  productLinksCount: Int
}

type MediaProductsStats {
  """Số lần SP trong đơn chưa đặt"""
  unCompletedProductsCount: Int

  """Tổng lượng SP chưa đặt"""
  unCompletedProductsQty: Int

  """Số lần SP trong đơn thành công"""
  completedProductsCount: Int

  """Tổng lượng SP chưa đặt"""
  completedProductsQty: Int
}

type MediaProductStats {
  """Số lượng SP chưa đặt"""
  unCompletedQty: Int

  """Số lượng SP thành công"""
  completedQty: Int
}

type Member {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isTesting: Boolean
  domain: String

  """Mã chủ shop"""
  code: String

  """Tên đăng nhập"""
  username: String

  """UID Firebase"""
  uid: String

  """Họ tên"""
  name: String

  """Avatar"""
  avatar: String

  """Điện thoại"""
  phone: String

  """Đã xác thực điện thoại"""
  phoneVerified: Boolean

  """Mã Fanpage"""
  fanpageId: String

  """Tên Fanpage"""
  fanpageName: String

  """Hình Fanpage"""
  fanpageImage: String

  """Tên cửa hàng"""
  shopName: String

  """Logo cửa hàng"""
  shopLogo: String

  """Hình cover cửa hàng"""
  shopCover: String

  """Điểm tích lũy"""
  cumulativePoint: Float

  """Điểm chuyên cần"""
  diligencePoint: Float

  """Hoa hồng"""
  commission: Float

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """CMND"""
  identityCardNumber: String
  gender: String

  """Sinh nhật"""
  birthday: DateTime

  """Mã người giới thiệu"""
  parentIds: [ID]

  """Ngày đăng ký"""
  activedAt: DateTime

  """Chủ shop đã kích hoạt"""
  activated: Boolean

  """Loại chủ shop """
  type: String

  """Mã chi nhánh"""
  branchId: ID

  """Mã chức vụ"""
  positionId: ID

  """Mã PSID ở trang Fanpage chính"""
  psids: [String]

  """Kịch bản chatbot"""
  chatbotStory: [ChatbotStory]
  allowSale: Boolean

  """Loai cua hang"""
  shopType: EShopType

  """Id cua hang cha"""
  parentMemberId: ID

  """Id khach hang"""
  customerId: ID

  """Ma so thue"""
  taxCode: String
  branch: Branch
  position: Position
  parents: [Member]
  subscribers: [SubscriberInfo]

  """Đường dẫn mở inbox fanpage"""
  chatbotRef: String

  """Cua hang cha"""
  parentMember: Member

  """Khach hang"""
  customer: Customer

  """Danh sách mã kho"""
  addressStorehouseIds: [ID]
  addressStorehouses: [AddressStorehouse]
  mainAddressStorehouseId: ID
  mainAddressStorehouse: AddressStorehouse

  """Danh sách mã điểm nhận hàng"""
  addressDeliveryIds: [ID]
  addressDeliverys: [AddressDelivery]

  """Điểm nhận hàng cửa hàng"""
  addressDelivery: AddressDelivery

  """Đường dẩn cửa hàng"""
  shopUrl: String

  """Số lượng đơn hàng"""
  ordersCount: Int

  """Số lượng đơn hàng chuyển giao"""
  toMemberOrdersCount: Int

  """Phân loại cửa hàng"""
  categoryId: ID
  category: ShopCategory

  """Bị khoá"""
  locked: Boolean

  """Gói dịch vụ đăng ký"""
  subscription: ShopSubscription
  affiliateConfigId: String
  affiliateConfig: AffiliateConfig

  """Ngày xoá"""
  deletedAt: DateTime

  """Danh sách tên danh mục của sản phẩm"""
  categoryNames: [String]
  isShopAffiliate: Boolean
  templateConfig: TemplateConfig
  statisticProductSalesBonusPolicy: [MemberStatisticProductSalesBonusPolicy]
  featureAllows: [EShopFeature]
  wallet: WalletBalance
  hasMinigame: Boolean
  hasShopVoucher: Boolean
  hasPromotion: Boolean
  hasProductCommissionPolicy: Boolean
  hasProductSalesBonusPolicy: Boolean
  hasShopVoucherSharingPolicy: Boolean
  hasDirectSubordinatesProductSalesBonusPolicy: Boolean
  hasIndividualProductSalesBonusPolicy: Boolean
  hasShopAffiliateConfig: Boolean
  expireAt: DateTime
  isExpired: Boolean
  deliveryDistricts: [String]

  """Mã trao đổi"""
  threadId: ID
  thread: Thread

  """Mã globalCustomer"""
  globalCustomerId: ID

  """GlobalCustomer"""
  globalCustomer: GlobalCustomer
}

type MemberCollaboratorCommissionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Giá trị"""
  value: String

  """Mã đơn hàng"""
  orderId: ID

  """Ghi chú"""
  note: String

  """Mã cửa hàng ctv"""
  returnMemberId: ID
  order: Order
  returnMember: Member
}

type MemberCollaboratorCommissionLogPageData {
  data: [MemberCollaboratorCommissionLog]
  total: Int
  pagination: Pagination
}

type MemberCommissionType {
  """Loại"""
  type: String

  """Tên"""
  name: String
}

input MemberCreateFeedbackProductInput {
  productId: String!
  customerName: String!
  customerAvatarUrl: String
  feedbackStar: Int!
  feedbackContent: String!
  feedbackImageUrl: [String]
}

type MemberImportingLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type MemberImportingLogPageData {
  data: [MemberImportingLog]
  total: Int
  pagination: Pagination
}

type MemberLoginData {
  member: Member
  token: String
}

type MemberPackageSubscriptionExpire {
  expireAt: DateTime
  isExpired: Boolean
}

type MemberPageData {
  data: [Member]
  total: Int
  pagination: Pagination
}

type MemberPublic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  code: String

  """Tên đăng nhập"""
  username: String

  """UID Firebase"""
  uid: String

  """Họ tên"""
  name: String

  """Avatar"""
  avatar: String

  """Điện thoại"""
  phone: String

  """Mã Fanpage"""
  fanpageId: String

  """Tên Fanpage"""
  fanpageName: String

  """Hình Fanpage"""
  fanpageImage: String

  """Tên cửa hàng"""
  shopName: String

  """Logo cửa hàng"""
  shopLogo: String

  """Hình cover cửa hàng"""
  shopCover: String

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Giới tính"""
  gender: String

  """Ngày đăng ký"""
  activedAt: DateTime

  """Chủ shop đã kích hoạt"""
  activated: Boolean

  """Loại chủ shop"""
  type: String
  allowSale: Boolean

  """Loai cua hang"""
  shopType: EShopType

  """Id cua hang cha"""
  parentMemberId: ID

  """Id khach hang"""
  customerId: ID

  """Ma so thue"""
  taxCode: String

  """Đường dẩn cửa hàng"""
  shopUrl: String

  """Phân loại cửa hàng"""
  categoryId: ID
  category: ShopCategory

  """Bị khoá"""
  locked: Boolean
  affiliateConfigId: String
  affiliateConfig: AffiliateConfig
  featureAllows: [EShopFeature]

  """Ngày xoá"""
  deletedAt: DateTime
  hasMinigame: Boolean
  hasShopVoucher: Boolean
  hasPromotion: Boolean
  hasProductCommissionPolicy: Boolean
  hasProductSalesBonusPolicy: Boolean
  hasShopVoucherSharingPolicy: Boolean
  hasDirectSubordinatesProductSalesBonusPolicy: Boolean
  hasIndividualProductSalesBonusPolicy: Boolean
  hasShopAffiliateConfig: Boolean
}

type MemberStatisticProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type MemberStatistics {
  """Số lượng khách hàng"""
  customersCount: Int

  """Số lượng cộng tác viên"""
  collaboratorsCount: Int

  """Số lượng khách hàng CTV"""
  customersAsCollaboratorCount: Int

  """Số lượng đơn hàng"""
  ordersCount: Int

  """Số lượng Đơn hàng chờ"""
  pendingCount: Int

  """Số lượng Đơn hàng xác nhận"""
  confirmedCount: Int

  """Số lượng Đơn hàng giao"""
  deliveringCount: Int

  """Số lượng Đơn hàng thành công"""
  completedCount: Int

  """Số lượng Đơn hàng không thành công"""
  failureCount: Int

  """Số lượng Đơn hàng bị huỷ"""
  canceledCount: Int

  """Tổng hoa hồng dự kiến"""
  estimatedCommission: Float

  """Tổng hoa hồng thực nhận"""
  realCommission: Float

  """Doanh thu dự kiến"""
  estimatedIncome: Float

  """Doanh thu thực nhận"""
  income: Float
}

input MemberUpdateFeedbackProductInput {
  productId: String
  customerName: String
  customerAvatarUrl: String
  feedbackStar: Int
  feedbackContent: String
  feedbackImageUrl: [String]
}

type MerchantMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  application: ApplicationMinigame
  email: String
  username: String
  name: String
  phone: String
  address: String
  websiteUrl: String
  facebookUrl: String
  youtubeUrl: String
  logo: String
  representativeName: String
  provinceId: String
  districtId: String
  wardId: String
  subscriptionId: String
  subscriptionType: String
  endSubscriptionDate: String
  provinceName: String
  districtName: String
  wardName: String
  language: String
  avatar: String
  countPlayer: Int
  countPlayerPlayGameLog: Int
  totalAccess: Int
  lastLogin: DateTime
  totalMinigameCount: Int
  activeMinigameCount: Int
  totalPlayer: Int
  totalPlayGame: Int
  totalRewarded: Int
}

type MerchantMinigamePageData {
  data: [MerchantMinigame]
  total: Int
  pagination: Pagination
}

type MicConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type MicConfigPageData {
  data: [MicConfig]
  total: Int
  pagination: Pagination
}

type MicInsuranceConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type MicInsuranceConfigPageData {
  data: [MicInsuranceConfig]
  total: Int
  pagination: Pagination
}

type Migration {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type Minigame {
  """Unique identifier for the minigame"""
  id: String

  """Timestamp for when the minigame was created"""
  createdAt: DateTime

  """Timestamp for when the minigame was last updated"""
  updatedAt: DateTime

  """Timestamp for when the minigame was deleted (if applicable)"""
  deletedAt: DateTime

  """Identifier for the application to which this minigame belongs"""
  applicationId: String

  """Identifier for the merchant that owns the minigame"""
  merchantId: String

  """Name of the minigame"""
  name: String

  """Type/category of the minigame (e.g., game mechanics)"""
  type: String

  """Date when the minigame starts"""
  startDate: String

  """Optional end date for the minigame (can be null for ongoing games)"""
  endDate: String

  """Identifier for the associated minigame settings"""
  settingId: String

  """Detailed settings of the minigame"""
  setting: SettingMinigame

  """Identifier for the display settings (UI/UX related) of the minigame"""
  displayId: String

  """Optional identifier for a related service (if applicable)"""
  serviceId: String

  """Total number of times the minigame has been played"""
  totalPlayCount: Int

  """Total number of unique participants who have joined the minigame"""
  totalJoinCount: Int

  """Total number of wins by players in the minigame"""
  totalWinCount: Int

  """Total number of times the minigame has been shared by players"""
  totalShareCount: Int

  """Total number of players who have joined the minigame"""
  playerJoinGameCount: Int

  """Total number of rewards available for the minigame"""
  totalRewardCount: Int

  """Total number of rewards that have been distributed"""
  totalRewardedCount: Int

  """Data log showing access/usage statistics for the minigame"""
  accessGameLogs: MinigameAccessGameLogs

  """Log showing player participation statistics"""
  playerJoinGameLogs: MinigamePlayerJoinGameLogs

  """Information about the merchant that owns the minigame"""
  merchant: MinigameMerchantInfo

  """UI-related settings for the minigame's display and visuals"""
  display: DisplayMinigame

  """Optional service data associated with the minigame (dynamic format)"""
  service: ServiceMinigame

  """Additional content or metadata for the minigame (dynamic format)"""
  contents: [DisplayContentMinigame]

  """Settings related to chat or communication bots (dynamic format)"""
  manyChatSetting: [ManyChatSettingMinigame]

  """List of rewards available in the minigame"""
  rewards: [MinigameReward]

  """Display name of the minigame type"""
  minigameTypeName: String

  """Indicates if access to the landing page is allowed"""
  isAllowAccessLandingPage: Boolean
  isActive: Boolean
  minigameUrl: String
}

type MinigameAccessGameLogs {
  """Labels for data points (e.g., dates)"""
  labels: [String]

  """Values corresponding to each label (e.g., number of accesses)"""
  values: [Int]
}

type MinigameData {
  minigame: Minigame
  player: Player
  playerTurn: PlayerTurnMinigame
}

input MinigameInput {
  """Unique identifier for the minigame"""
  id: String

  """Timestamp for when the minigame was created"""
  createdAt: DateTime

  """Timestamp for when the minigame was last updated"""
  updatedAt: DateTime

  """Timestamp for when the minigame was deleted (if applicable)"""
  deletedAt: DateTime

  """Identifier for the application to which this minigame belongs"""
  applicationId: String

  """Identifier for the merchant that owns the minigame"""
  merchantId: String

  """Name of the minigame"""
  name: String

  """Type/category of the minigame (e.g., game mechanics)"""
  type: String

  """Date when the minigame starts"""
  startDate: String

  """Optional end date for the minigame (can be null for ongoing games)"""
  endDate: String

  """Identifier for the associated minigame settings"""
  settingId: String

  """Detailed settings of the minigame"""
  setting: SettingMinigameInput

  """Identifier for the display settings (UI/UX related) of the minigame"""
  displayId: String

  """Optional identifier for a related service (if applicable)"""
  serviceId: String

  """Total number of times the minigame has been played"""
  totalPlayCount: Int

  """Total number of unique participants who have joined the minigame"""
  totalJoinCount: Int

  """Total number of wins by players in the minigame"""
  totalWinCount: Int

  """Total number of times the minigame has been shared by players"""
  totalShareCount: Int

  """Total number of players who have joined the minigame"""
  playerJoinGameCount: Int

  """Total number of rewards available for the minigame"""
  totalRewardCount: Int

  """Total number of rewards that have been distributed"""
  totalRewardedCount: Int

  """UI-related settings for the minigame's display and visuals"""
  display: DisplayMinigameInput

  """Additional content or metadata for the minigame (dynamic format)"""
  contents: [DisplayContentMinigameInput]

  """List of rewards available in the minigame"""
  rewards: [MinigameRewardInput]

  """Display name of the minigame type"""
  minigameTypeName: String

  """Indicates if access to the landing page is allowed"""
  isAllowAccessLandingPage: Boolean
  isActive: Boolean
  minigameUrl: String
}

type MinigameMerchantInfo {
  minigameMerchantId: String
  email: String
  username: String
  name: String
  phone: String
  logo: String
}

type MinigamePageData {
  data: [Minigame]
  total: Int
  pagination: Pagination
}

type MinigamePlayerJoinGameLogs {
  """Labels for data points (e.g., dates)"""
  labels: [String]

  """
  Values corresponding to each label (e.g., number of players who joined)
  """
  values: [Int]
}

type MiniGamePlayerPlayGameLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  merchantId: String
  playerId: String
  minigameId: String
  voucherId: String
  minigameRewardId: String
  status: Boolean
  havePsid: Boolean
  giveRewardTime: String
  minigameReward: MinigameReward
  player: Player
  voucherCode: String
  voucher: VoucherMinigame
}

type MinigamePopup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  isActivated: Boolean
  minigameId: String
  imageUrl: String
  content: String
}

type MinigamePopupPageData {
  data: [MinigamePopup]
  total: Int
  pagination: Pagination
}

type MinigameReward {
  id: String
  content: String
  type: String
  turnNumber: Int
  topUpAmount: Int
  isWinningReward: Boolean
  voucherGroupId: String
  voucherGroup: VoucherGroupMinigame
  name: String
}

input MinigameRewardInput {
  id: String
  content: String
  type: String
  turnNumber: Int
  topUpAmount: Int
  isWinningReward: Boolean
  voucherGroupId: String
  name: String
}

type MinigameRewardLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type MinigameRewardLogPageData {
  data: [MinigameRewardLog]
  total: Int
  pagination: Pagination
}

type MinigameSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  apiKey: String
  memberId: ID
  minigameMerchantId: String
  minigameMerchantInfo: MinigameMerchantInfo
  minigameSuggestConfig: MinigameSuggestConfig
}

type MinigameSettingPageData {
  data: [MinigameSetting]
  total: Int
  pagination: Pagination
}

type MinigameSuggestConfig {
  isActivated: Boolean
  iconUrl: String
  suggestType: EMinigameSuggestType
  minigameId: String
  minigameName: String
  minigameUrl: String
}

input MinigameSuggestConfigInput {
  isActivated: Boolean
  iconUrl: String
  suggestType: EMinigameSuggestType
  minigameId: String
  minigameName: String
}

type MinigameType {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  enum: String
  name: String
  image: String
  description: String
}

type MinigameTypePageData {
  data: [MinigameType]
  total: Int
  pagination: Pagination
}

type MinigameVoucherGroupMapping {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  memberId: ID
  minigameMerchantId: String
  minigameApplicationId: String
  minigameVoucherGroupId: String
  minigameVoucherInfo: VoucherGroupMinigame
  targetShopVoucherId: ID
  targetShopVoucher: ShopVoucher
  targetShopVoucherContent: String
  targetPromotionId: ID
  targetPromotion: Promotion
  targetPromotionName: String
  isConnected: Boolean
}

type MinigameVoucherGroupMappingPageData {
  data: [MinigameVoucherGroupMapping]
  total: Int
  pagination: Pagination
}

type MInoviceIdValue {
  """ID của mã số thuế"""
  id: String
  value: String
}

type MInoviceSignatureRegistrationData {
  id: String

  """Tổng số tiền thanh toán"""
  totalAmount: Float

  """Phương thức thanh toán"""
  paymentMethod: EPaymentMethod

  """Thông tin metadata của thanh toán"""
  paymentMeta: Mixed

  """Thông tin metadata khác của thanh toán"""
  paymentMetas: [Mixed]

  """Trạng thái thanh toán"""
  paymentStatus: ESignatureRegistrationRequestPaymentStatus

  """Trạng thái xử lý yêu cầu"""
  requestStatus: ESignatureRegistrationRequestStatus
}

input MInoviceSignatureRegistrationInput {
  """dmcks_id — ID bản ghi chữ ký số (để update nếu đã tồn tại)"""
  signatureRecordId: String

  """ms_thue — Mã số thuế người đăng ký"""
  taxCode: String!

  """ten_kh — Tên doanh nghiệp/khách hàng"""
  customerName: String!
  address: String

  """diachi_lh — Địa chỉ liên hệ"""
  contactAddress: String!

  """nguoi_dai_dien — Người đại diện pháp luật"""
  representative: String!

  """chuc_vu — Chức vụ người đại diện"""
  representativeTitle: String!

  """co_quan_thue — Cơ quan thuế quản lý"""
  taxOffice: String!

  """cmt — Số CMT/CCCD/Hộ chiếu"""
  citizenId: String

  """noi_cap — Nơi cấp CMT/CCCD/Hộ chiếu"""
  citizenIdIssuedPlace: String

  """ngay_cap — Ngày cấp CMT/CCCD/Hộ chiếu"""
  citizenIdIssuedDate: String

  """stk — Số tài khoản ngân hàng"""
  bankAccount: String

  """ngan_hang — Ngân hàng"""
  bankName: String

  """dia_chi_ddpl — Địa chỉ trụ sở chính"""
  legalAddress: String

  """nguoi_lien_he — Người liên hệ kỹ thuật"""
  contactPerson: String!

  """diachi_nhan_cks — Địa chỉ nhận USB token (nếu có)"""
  tokenDeliveryAddress: String

  """sdt_nguoi_lien_he — SĐT người liên hệ"""
  contactPhone: String!

  """email_nguoi_lien_he — Email người liên hệ"""
  contactEmail: String!

  """sd_sdt_email — Cờ ưu tiên thông báo (1=qua SĐT, 2=qua Email, 3=cả hai)"""
  notificationMethod: Int

  """goicuocchukyso_id — ID gói chữ ký số đã chọn"""
  packageId: String!

  """serial — Số seri USB token (nếu có)"""
  serial: String

  """ngay_kichhoat — Ngày kích hoạt (ISO string)"""
  activationDate: String

  """ngay_hethan — Ngày hết hạn (ISO string)"""
  expirationDate: String

  """choose — Cờ lựa chọn (nếu cần)"""
  chooseFlag: Int

  """ghi_chu — Ghi chú thêm"""
  notes: String
}

type MInvoiceAdminAllCustomerDetailItem {
  """dmkh_id — ID chi tiết khách hàng"""
  customerDetailId: String

  """ma_dvcs — Mã đơn vị cung cấp dịch vụ"""
  unitCode: String

  """ten_kh — Tên khách hàng"""
  customerName: String

  """ms_thue — Mã số thuế của khách hàng"""
  taxCode: String

  """diachi_lh — Địa chỉ liên hệ của khách hàng"""
  contactAddress: String

  """tinh_thanh — Tên tỉnh/thành phố"""
  city: String

  """nguoi_lien_he — Người liên hệ chính"""
  contactPerson: String

  """sdt — Số điện thoại chính"""
  phone: String

  """email — Email liên hệ"""
  email: String

  """dmserver_id — ID server (nếu có)"""
  serverId: String

  """user_new — Người tạo bản ghi"""
  createdBy: String

  """date_new — Ngày tạo bản ghi"""
  createdDate: String

  """date_new_db — Ngày tạo trên DB backup"""
  dbCreatedDate: String

  """trang_thai_db — Trạng thái trên DB backup"""
  dbStatus: Int

  """trang_thai_bq — Trạng thái báo cáo"""
  bqStatus: Int

  """ngay_cap_bq — Ngày cấp báo cáo"""
  bqIssuedDate: String

  """link_su_dung — URL truy cập hệ thống"""
  usageLink: String

  """ghi_chu — Ghi chú thêm"""
  notes: String

  """so_luong_hd — Số lượng hóa đơn được phép phát hành"""
  invoiceCount: Int

  """loai_kh — Loại khách hàng (enum)"""
  customerType: EMInvoiceAdminCustomerType

  """nguoi_dai_dien — Người đại diện pháp luật"""
  representative: String

  """chuc_vu — Chức vụ của người đại diện"""
  position: String

  """stk — Số tài khoản ngân hàng"""
  bankAccount: String

  """ma_co_quan_thue — Mã cơ quan thuế quản lý"""
  taxOfficeCode: String

  """sdt_nguoi_lien_he — Số điện thoại người liên hệ"""
  contactPhone: String

  """email_nguoi_lien_he — Email người liên hệ"""
  contactEmail: String

  """ngay_kich_hoat — Ngày kích hoạt tài khoản"""
  activationDate: String

  """lan_gia_han — Số lần gia hạn dịch vụ"""
  renewalCount: Int

  """ngay_hop_dong — Ngày ký hợp đồng"""
  contractDate: String

  """dmhopdong_id — ID hợp đồng hiện tại"""
  contractId: String

  """loai_phanmem — Loại phần mềm (mã)"""
  softwareType: Int

  """loai_sp — Regex biểu diễn loại sản phẩm/hóa đơn"""
  productType: String

  """so_thang — Số tháng sử dụng dịch vụ"""
  durationMonths: Int

  """ngay_het_han — Ngày hết hạn dịch vụ"""
  expirationDate: DateTime
  createdByDb: String
  editedBy: String
  editDate: DateTime
  taxOfficeRegion: String
  website: String
  bankName: String
  endUser: String
  collectedInvoiceFee: Mixed
  collectedDocuments: Mixed
  contractNumber: String
  contractTerminated: Mixed
  integrationUnit: Mixed
  integrationMethod: String
  softwareCode: String
  softwareName: String
  establishmentDate: String
  bqIssued: Mixed
  serviceProviderId: String
  serviceProviderName: String
  customerKind: String
  isHaiphong: Mixed
  status: Mixed

  """Tổng số tiền thanh toán"""
  totalPrice: Float

  """Phương thức thanh toán"""
  paymentMethod: EPaymentMethod

  """Thông tin metadata của thanh toán"""
  paymentMeta: Mixed

  """Thông tin metadata khác của thanh toán"""
  paymentMetas: [Mixed]

  """Trạng thái thanh toán"""
  paymentStatus: ESignatureRegistrationRequestPaymentStatus

  """Trạng thái xử lý yêu cầu"""
  requestStatus: ESignatureRegistrationRequestStatus
}

type MInvoiceAdminConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  ownerType: EMInvoiceAdminOwnerType
  username: String
  password: String
  taxCode: String
  isConnected: Boolean
  invoicePackages: [MInvoiceInvoicePackage]
  signaturePackages: [MInvoiceSignaturePackage]
  defaultInvoicePackagesNewAccount: [MInvoiceInvoicePackage]
}

type MInvoiceAdminConfigPageData {
  data: [MInvoiceAdminConfig]
  total: Int
  pagination: Pagination
}

input MInvoiceAdminCreateCustomerInput {
  """ms_thue — Mã số thuế """
  taxCode: String

  """ten_kh — Tên khách hàng """
  customerName: String

  """diachi_lh — Địa chỉ liên hệ """
  contactAddress: String

  """tinh_thanh — Tỉnh/Thành """
  city: String

  """ma_co_quan_thue_tinh — Mã cơ quan thuế tỉnh """
  taxOfficeRegion: String

  """ma_co_quan_thue — Mã cơ quan thuế quản lý """
  taxOfficeCode: String

  """nguoi_dai_dien — Người đại diện """
  representative: String

  """chuc_vu — Chức vụ """
  position: String

  """ngay_thanh_lap — Ngày thành lập """
  establishmentDate: String

  """sdt — Số điện thoại """
  phone: String

  """email — Email công ty """
  email: String

  """stk — Số tài khoản """
  bankAccount: String

  """ngan_hang — Tên ngân hàng """
  bankName: String

  """nguoi_lien_he — Người liên hệ """
  contactPerson: String

  """sdt_nguoi_lien_he — SĐT người liên hệ """
  contactPhone: String

  """email_nguoi_lien_he — Email người liên hệ """
  contactEmail: String
}

type MInvoiceAdminCustomerDetailPagination {
  data: [MInvoiceAdminAllCustomerDetailItem]
  position: Int
  totalCount: Int
}

input MInvoiceAdminSignDeclarationInput {
  documentIds: [String]
  tokenId: String
}

type MInvoiceConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String

  """Tên đăng nhập M-Invoice"""
  username: String
  taxCode: String
  isConnected: Boolean
  accountIsActivated: Boolean

  """Series hóa đơn măc định"""
  defaultInvoiceSeries: String

  """Series hóa đơn mặc định của EDC"""
  defaultEDCInvoiceSeries: String

  """Cờ tự động xuất hóa đơn khi thanh toán thành công"""
  isAutoIssueInvoice: Boolean

  """Cờ tự động ký hóa đơn sau khi tạo chờ ký"""
  isAutoSignInvoice: Boolean

  """Sự kiện kích hoạt xuất hóa đơn cho đơn hàng"""
  triggerIssueInvoiceForOrderType: ETriggerTypeIssueInvoiceForOrder

  """Sự kiện kích hoạt xuất hóa đơn cho hợp đồng"""
  triggerIssueInvoiceForServiceContractType: ETriggerTypeIssueInvoiceForServiceContract
}

type MInvoiceConfigPageData {
  data: [MInvoiceConfig]
  total: Int
  pagination: Pagination
}

input MInvoiceDeclarationInput {
  id: String
  creatorId: String
  creationTime: DateTime
  cityCode: String
  cityName: String
  taxAuthorityCode: String
  formality: EMInvoiceDeclarationRegisterInvoiceFormality
  dateCreate: String
  region: String
  taxpayers: String
  taxCode: String
  taxAuthorityName: String
  legalRepName: String
  legalRepPhone: String
  legalRepIdentificationNumber: String
  legalRepPassport: String
  legalRepDob: String
  legalRepGender: EMInvoiceGender
  personContact: String
  phone: String
  address: String
  email: String
  formInvoice: [EMInvoiceFormInvoice]
  formSendData: [EMInvoiceFormSendData]
  method: [EMInvoiceMethod]
  invoiceTypeUse: [EMInvoiceInvoiceTypeUse]
  inputChange: Mixed
  partners: [MInvoiceDeclarationInvoicePartnerInput]
  tokens: [MInvoiceTokenSignatureInput]
}

type MInvoiceDeclarationInvoicePartner {
  partnerName: String
  partnerTaxCode: String
  fromDate: String
  toDate: String
  note: String
  type: EMInvoicePartnerType
  declarationRegisterId: String
  default: Boolean
  id: String
}

input MInvoiceDeclarationInvoicePartnerInput {
  partnerName: String
  partnerTaxCode: String
  fromDate: String
  toDate: String
  note: String
  type: EMInvoicePartnerType
  declarationRegisterId: String
  default: Boolean
  id: String
  declarationPartnerModelDefault: Mixed
}

type MInvoiceDeclarationRegisterInvoice {
  formality: EMInvoiceDeclarationRegisterInvoiceFormality
  taxpayers: String
  taxCode: String
  personContact: String
  legalRepName: String
  legalRepPhone: String
  legalRepIdentificationNumber: String
  legalRepPassport: String
  legalRepDob: String
  legalRepGender: EMInvoiceGender
  address: String
  email: String
  phone: String
  region: String
  cityCode: String
  cityName: String
  taxAuthorityCode: String
  taxAuthorityName: String
  isAuthorised: Boolean
  taxAuthorityFeedback: EMInvoiceDeclarationRegisterInvoiceTaxAuthorityFeedback
  taxAuthorityNotificationNo: String
  taxAuthorityNotificationDate: String
  dateCreate: String
  status: EMInvoiceDeclarationRegisterInvoiceStatus
  dateSign: String
  subjectName: String
  fileUpload: Mixed
  tokens: [MInvoiceTokenSignature]
  dependentUnits: Mixed
  suspensions: Mixed
  integrations: Mixed
  lastModificationTime: String
  lastModifierId: String
  creationTime: String
  creatorId: String
  id: String
  formInvoice: [EMInvoiceFormInvoice]
  formSendData: [EMInvoiceFormSendData]
  method: [EMInvoiceMethod]
  invoiceTypeUse: [EMInvoiceInvoiceTypeUse]
  inputChange: Mixed
  partners: [MInvoiceDeclarationInvoicePartner]
}

type MInvoiceDeclarationRegisterInvoicePageData {
  data: [MInvoiceDeclarationRegisterInvoice]
  total: Int
  pagination: Pagination
}

type MInvoiceInvoicePackage {
  rootPackageId: String
  rootPackageCode: String
  rootPackageName: String
  rootPackageUnit: String
  rootPackageCategory: EMInvoiceInvoicePackageCategory
  rootPackageType: EMInvoiceInvoicePackageType
  rootPackagePrice: Float
  amountInvoice: Int
  newPrice: Float
  newName: String
  description: String
}

type MInvoiceInvoicePackageData {
  packageId: String
  unitPrice: Float
  unitAbbr: String
  note: String
  taxCode: Int
  quantity: Int
  licensedQuantity: Int
  months: Int
  displayValue: String
  totalPrice: Float
  code: String
  category: EMInvoiceInvoicePackageCategory
  name: String
  itemCode: String
  allowEdit: Boolean
  packageType: EMInvoiceInvoicePackageType
}

input MInvoiceInvoicePackageInput {
  rootPackageId: String
  rootPackageCode: String
  rootPackageName: String
  rootPackageUnit: String
  rootPackageCategory: EMInvoiceInvoicePackageCategory
  rootPackageType: EMInvoiceInvoicePackageType
  rootPackagePrice: Float
  amountInvoice: Int
  newPrice: Float
  newName: String
  description: String
}

type MInvoiceInvoiceTypeSerialMetadata {
  HDGTGT: InvoiceTypeSerialEntry
  HDBHang: InvoiceTypeSerialEntry
  HDBTSCong: InvoiceTypeSerialEntry
  HDBHDTQGia: InvoiceTypeSerialEntry
  HDKhac: InvoiceTypeSerialEntry
  PXKhoNoiBo: InvoiceTypeSerialEntry
  PXKho: InvoiceTypeSerialEntry
  HDGTGT_MTT: InvoiceTypeSerialEntry
  HDBHang_MTT: InvoiceTypeSerialEntry
  HDKhac_MTT: InvoiceTypeSerialEntry
}

type MInvoiceRegisterInvoice {
  invoiceType: String
  invoiceTemplateId: String
  tenantInvoiceSettingMasterId: String
  pattern: Mixed
  symbolCode: String
  invoiceForm: String
  invoiceYear: Int
  number: Mixed
  orders: Mixed
  use: Boolean
  signOnly: Boolean
  invoiceTypeName: String
  useBarcode: Mixed
  numberRecord: Int
  tenantRegisterTemplateDto: Mixed
  tenantInvoiceSettingDtos: Mixed
  fileContent: Mixed
  creatorName: String
  typeCompany: Mixed
  waitSign: Int
  sending: Int
  lastModificationTime: Mixed
  lastModifierId: Mixed
  creationTime: String
  creatorId: String
  id: String
}

type MInvoiceRegisterInvoicePageData {
  data: [MInvoiceRegisterInvoice]
  total: Int
  pagination: Pagination
}

type MInvoiceSignaturePackage {
  rootPackageId: String
  rootPackageCode: String
  rootPackageName: String
  rootPackagePrice: Float
  rootPackageProvider: String
  signatureType: String
  newPrice: Float
  description: String
  newName: String
  validityMonths: Int
  isDefault: Boolean
}

type MInvoiceSignaturePackageData {
  packageId: String
  providerCode: String
  packageCode: String
  packageName: String
  signatureType: String
  durationMonths: Int
  totalAmount: Float
  createdBy: String
  createdAt: DateTime
  updatedBy: String
  updatedAt: DateTime
  taxCode: Int
  unit: String
  unitAbbr: String
  isActive: Boolean
  providerName: String
  id: String
  displayValue: String
}

input MInvoiceSignaturePackageInput {
  rootPackageId: String
  rootPackageCode: String
  rootPackageName: String
  rootPackagePrice: Float
  rootPackageProvider: String
  newPrice: Float
  description: String
  newName: String
  validityMonths: Int
  isDefault: Boolean
}

type MInvoiceTenantCompany {
  tenantCompanyId: Mixed
  name: String
  taxCode: String
  address: String
  tel: String
  fax: String
  email: String
  personContact: Mixed
  delegate: String
  bankAccount: String
  accountHolder: Mixed
  bankName: String
  logoFileName: Mixed
  level: Mixed
  mobile: Mixed
  position: String
  webSite: String
  cityCode: String
  cityName: String
  taxAuthorityCode: String
  taxAuthorityName: String
  province: String
  agentInfo: String
  regionData: Mixed
  identityCode: String
  paymentCode: String
  deviceId: Mixed
  currentDateTime: String
  identityCard: String
  useIdentityCard: Boolean
  taxAuthoritiesId: String
  legalRepPhone: Mixed
  legalRepPassport: Mixed
  legalRepDob: Mixed
  legalRepGender: Mixed
  lastModificationTime: String
  lastModifierId: String
  creationTime: String
  creatorId: Mixed
  id: String
}

type MInvoiceTokenSignature {
  vender: String
  form: EMInvoiceTokenSignatureForm
  dateFrom: String
  expireDate: String
  serialNumber: String
  sha256: Mixed
  timeApprove: String
  timeSing: String
  tokenType: ETokenSignatureType
  passwordCer: String
  pathCer: String
  defaultSign: Boolean
  authCode: String
  taxCode: String
  status: String
  used: Boolean
  user: String
  pin: String
  subjectName: String
  numberDayExprire: Int
  venderShortcut: String
  lastModificationTime: String
  lastModifierId: String
  creationTime: String
  creatorId: String
  id: String
  numberDayExpire: Int
}

input MInvoiceTokenSignatureInput {
  vender: String
  form: EMInvoiceTokenSignatureForm
  dateFrom: String
  expireDate: String
  serialNumber: String
  sha256: Mixed
  timeApprove: String
  timeSing: String
  tokenType: ETokenSignatureType
  passwordCer: String
  pathCer: String
  defaultSign: Boolean
  authCode: String
  taxCode: String
  status: EMInvoiceDeclarationRegisterInvoiceStatus
  used: Boolean
  user: String
  pin: String
  subjectName: String
  numberDayExpire: Int
  venderShortcut: String
  numberDayExprire: Int
  lastModificationTime: String
  lastModifierId: String
  creationTime: String
  creatorId: String
  id: String
}

type MInvoiceTokenSignaturePageData {
  data: [MInvoiceTokenSignature]
  total: Int
  pagination: Pagination
}

type MInvoiceTypeInvoice {
  code: String
  name: String
  created: String
  reportName: String
  type: Int
  isDeleted: Boolean
  deleterId: String
  deletionTime: String
  lastModificationTime: String
  lastModifierId: String
  creationTime: String
  creatorId: String
  id: String
}

scalar Mixed

type Mutation {
  _empty: String
  createAccountingSystemSyncLog(data: CreateAccountingSystemSyncLogInput!): AccountingSystemSyncLog
  updateAccountingSystemSyncLog(id: ID!, data: UpdateAccountingSystemSyncLogInput!): AccountingSystemSyncLog
  deleteOneAccountingSystemSyncLog(id: ID!): AccountingSystemSyncLog
  updateAccumulatedDepositRewardLog(id: ID!, data: UpdateAccumulatedDepositRewardLogInput!): AccumulatedDepositRewardLog
  updateAchievementRewardLog(id: ID!, data: UpdateAchievementRewardLogInput!): AchievementRewardLog
  createActivity(data: CreateActivityInput!): Activity
  updateActivity(id: ID!, data: UpdateActivityInput!): Activity
  deleteOneActivity(id: ID!): Activity
  deleteManyActivity(ids: [ID]): Int
  createAddressBook(data: CreateAddressBookInput!): AddressBook
  updateAddressBook(id: ID!, data: UpdateAddressBookInput!): AddressBook
  deleteOneAddressBook(id: ID!): AddressBook
  createAddressDelivery(data: CreateAddressDeliveryInput!): AddressDelivery
  updateAddressDelivery(id: ID!, data: UpdateAddressDeliveryInput!): AddressDelivery
  deleteOneAddressDelivery(id: ID!): AddressDelivery
  createAddressDeliveryImportingLog(data: CreateAddressDeliveryImportingLogInput!): AddressDeliveryImportingLog
  updateAddressDeliveryImportingLog(id: ID!, data: UpdateAddressDeliveryImportingLogInput!): AddressDeliveryImportingLog
  deleteOneAddressDeliveryImportingLog(id: ID!): AddressDeliveryImportingLog
  createAddressStorehouse(data: CreateAddressStorehouseInput!): AddressStorehouse
  updateAddressStorehouse(id: ID!, data: UpdateAddressStorehouseInput!): AddressStorehouse
  deleteOneAddressStorehouse(id: ID!): AddressStorehouse
  createAddressStorehouseImportingLog(data: CreateAddressStorehouseImportingLogInput!): AddressStorehouseImportingLog
  updateAddressStorehouseImportingLog(id: ID!, data: UpdateAddressStorehouseImportingLogInput!): AddressStorehouseImportingLog
  deleteOneAddressStorehouseImportingLog(id: ID!): AddressStorehouseImportingLog
  createAdminNotification(data: CreateAdminNotificationInput!): AdminNotification
  updateAdminNotification(id: ID!, data: UpdateAdminNotificationInput!): AdminNotification
  deleteOneAdminNotification(id: ID!): AdminNotification
  createAffiliate(data: CreateAffiliateInput!): Affiliate
  updateAffiliate(id: ID!, data: UpdateAffiliateInput!): Affiliate
  deleteOneAffiliate(id: ID!): Affiliate
  createAffiliateConfig(data: CreateAffiliateConfigInput!): AffiliateConfig
  updateAffiliateConfig(id: ID!, data: UpdateAffiliateConfigInput!): AffiliateConfig
  deleteOneAffiliateConfig(id: ID!): AffiliateConfig
  createAffiliateLevelDiscountPolicy(data: CreateAffiliateLevelDiscountPolicyInput!): AffiliateLevelDiscountPolicy
  updateAffiliateLevelDiscountPolicy(id: ID!, data: UpdateAffiliateLevelDiscountPolicyInput!): AffiliateLevelDiscountPolicy
  deleteOneAffiliateLevelDiscountPolicy(id: ID!): AffiliateLevelDiscountPolicy
  createAffiliateLevelDiscountPolicyLog(data: CreateAffiliateLevelDiscountPolicyLogInput!): AffiliateLevelDiscountPolicyLog
  updateAffiliateLevelDiscountPolicyLog(id: ID!, data: UpdateAffiliateLevelDiscountPolicyLogInput!): AffiliateLevelDiscountPolicyLog
  deleteOneAffiliateLevelDiscountPolicyLog(id: ID!): AffiliateLevelDiscountPolicyLog
  createAgency(data: CreateAgencyInput!): Agency
  updateAgency(id: ID!, data: UpdateAgencyInput!): Agency
  deleteOneAgency(id: ID!): Agency
  createAgencyConfig(data: CreateAgencyConfigInput!): AgencyConfig
  updateMyAgencyConfig(data: UpdateAgencyConfigInput!): AgencyConfig
  updateAgencyConfig(id: ID!, data: UpdateAgencyConfigInput!): AgencyConfig
  createAgencyContract(data: CreateAgencyContractInput!): AgencyContract
  updateAgencyContract(id: ID!, data: UpdateAgencyContractInput!): AgencyContract
  deleteOneAgencyContract(id: ID!): AgencyContract
  createAgencyManageMember(data: CreateAgencyManageMemberInput!): AgencyManageMember
  updateAgencyManageMember(id: ID!, data: UpdateAgencyManageMemberInput!): AgencyManageMember
  deleteOneAgencyManageMember(id: ID!): AgencyManageMember
  updateAgencyMemberBill(id: ID!, data: UpdateAgencyMemberBillInput!): AgencyMemberBill
  createAgencyUser(data: CreateAgencyUserInput!): AgencyUser
  updateAgencyUser(id: ID!, data: UpdateAgencyUserInput!): AgencyUser
  deleteOneAgencyUser(id: ID!): AgencyUser
  createApiTracking(data: CreateApiTrackingInput!): ApiTracking
  updateApiTracking(id: ID!, data: UpdateApiTrackingInput!): ApiTracking
  deleteOneApiTracking(id: ID!): ApiTracking
  createApplicationMember(data: CreateApplicationMemberInput!): ApplicationMember
  updateApplicationMember(id: ID!, data: UpdateApplicationMemberInput!): ApplicationMember
  deleteOneApplicationMember(id: ID!): ApplicationMember
  createArea(data: CreateAreaInput!): Area
  updateArea(id: ID!, data: UpdateAreaInput!): Area
  deleteOneArea(id: ID!): Area
  createAuditLog(data: CreateAuditLogInput!): AuditLog
  updateAuditLog(id: ID!, data: UpdateAuditLogInput!): AuditLog
  deleteOneAuditLog(id: ID!): AuditLog
  createBanner(data: CreateBannerInput!): Banner
  updateBanner(id: ID!, data: UpdateBannerInput!): Banner
  deleteOneBanner(id: ID!): Banner
  createBranch(data: CreateBranchInput!): Branch
  updateBranch(id: ID!, data: UpdateBranchInput!): Branch
  deleteOneBranch(id: ID!): Branch
  deleteManyBranch(ids: [ID]): Int
  createCarrierWallet(data: CreateCarrierWalletInput!): CarrierWallet
  updateCarrierWallet(id: ID!, data: UpdateCarrierWalletInput!): CarrierWallet
  deleteOneCarrierWallet(id: ID!): CarrierWallet
  createCarrierWalletTransaction(data: CreateCarrierWalletTransactionInput!): CarrierWalletTransaction
  updateCarrierWalletTransaction(id: ID!, data: UpdateCarrierWalletTransactionInput!): CarrierWalletTransaction
  deleteOneCarrierWalletTransaction(id: ID!): CarrierWalletTransaction
  createCategory(data: CreateCategoryInput!): Category
  updateCategory(id: ID!, data: UpdateCategoryInput!): Category
  deleteOneCategory(id: ID!): Category
  createCollaborator(data: CreateCollaboratorInput!): Collaborator
  updateCollaborator(id: ID!, data: UpdateCollaboratorInput!): Collaborator
  deleteOneCollaborator(id: ID!): Collaborator
  trackCollaboratorUrlEngagement(id: String!, accessToken: String): [Collaborator]
  createCollaboratorCampaign(data: CreateCollaboratorCampaignInput!): CollaboratorCampaign
  updateCollaboratorCampaign(id: ID!, data: UpdateCollaboratorCampaignInput!): CollaboratorCampaign
  deleteOneCollaboratorCampaign(id: ID!): CollaboratorCampaign
  createCollaboratorProduct(data: CreateCollaboratorProductInput!): CollaboratorProduct
  deleteOneCollaboratorProduct(id: ID!): CollaboratorProduct
  trackProductUrlEngagement(campaignId: String!, accessToken: String): [CollaboratorProduct]
  disburseCommission(data: CreateCommissionLogInput!): CommissionLog
  updateContractSignatureRegistrationRequest(id: ID!, data: UpdateContractSignatureRegistrationRequestInput!): ContractSignatureRegistrationRequest
  createCounter(data: CreateCounterInput!): Counter
  updateCounter(id: ID!, data: UpdateCounterInput!): Counter
  deleteOneCounter(id: ID!): Counter
  deleteManyCounter(ids: [ID]): Int
  createCrossSale(productId: ID!): CrossSale
  deleteOneCrossSale(id: ID!): CrossSale
  createCustomCard(data: CreateCustomCardInput!): CustomCard
  updateCustomCard(id: ID!, data: UpdateCustomCardInput!): CustomCard
  deleteOneCustomCard(id: ID!): CustomCard
  loginCustomerByToken(idToken: String!, psid: Mixed, pageId: String): CustomerLoginData
  loginCustomerByPhoneAndPassword(phone: String!, password: String!, deviceId: String, deviceToken: String, countryCode: String): CustomerLoginData
  customerUpdateMe(data: UpdateCustomerInput!): Customer
  shopUpdateCustomer(id: ID!, data: UpdateCustomerInput!): Customer
  shopCreateCustomer(data: CreateCustomerInput!): Customer
  createCustomerByApiKey(data: CreateCustomerInput): Customer
  loginCustomerByApiKey(phone: String): CustomerLoginData
  generateCustomerTokenByApiKey(data: CreateCustomerInput!): CustomerLoginData
  createGlobalCollaboratorRegistration(data: CreateGlobalCollaboratorRegistrationInput!): GlobalCollaboratorRegistration
  createGlobalCustomer(data: CreateGlobalCustomerInput!): GlobalCustomer
  loginGlobalCustomerByPhone(idToken: String!, deviceId: String, deviceToken: String): GlobalCustomerLoginData
  loginGlobalCustomerByPhoneAndPassword(phone: String!, password: String!): GlobalCustomerLoginData
  updateGlobalCustomer(id: ID!, data: UpdateGlobalCustomerInput!): GlobalCustomer
  recordReferralCustomer(refId: String!): String
  createCustomerAddress(data: CreateCustomerAddressInput!): CustomerAddress
  updateCustomerAddress(id: ID!, data: UpdateCustomerAddressInput!): CustomerAddress
  deleteOneCustomerAddress(id: ID!): CustomerAddress
  createCustomerCompletedTask(data: CreateCustomerCompletedTaskInput!): CustomerCompletedTask
  updateCustomerCompletedTask(id: ID!, data: UpdateCustomerCompletedTaskInput!): CustomerCompletedTask
  deleteOneCustomerCompletedTask(id: ID!): CustomerCompletedTask
  createCustomerContact(data: CreateCustomerContactInput!): CustomerContact
  deleteOneCustomerContact(id: ID!): CustomerContact
  createCustomerGroup(data: CreateCustomerGroupInput!): CustomerGroup
  updateCustomerGroup(id: ID!, data: UpdateCustomerGroupInput!): CustomerGroup
  deleteOneCustomerGroup(id: ID!): CustomerGroup
  createDebtAllocation(data: CreateDebtAllocationInput!): DebtAllocation
  updateDebtAllocation(id: ID!, data: UpdateDebtAllocationInput!): DebtAllocation
  deleteOneDebtAllocation(id: ID!): DebtAllocation
  createDebtPaymentRequest(data: CreateDebtPaymentRequestInput!): DebtPaymentRequest
  updateDebtPaymentRequest(id: ID!, data: UpdateDebtPaymentRequestInput!): DebtPaymentRequest
  depositBalanceToWallet(data: DepositBalanceWalletInput!): DepositBalanceToWallet
  createDirectSubordinatesProductSalesBonusPolicy(data: CreateDirectSubordinatesProductSalesBonusPolicyInput!): DirectSubordinatesProductSalesBonusPolicy
  updateDirectSubordinatesProductSalesBonusPolicy(id: ID!, data: UpdateDirectSubordinatesProductSalesBonusPolicyInput!): DirectSubordinatesProductSalesBonusPolicy
  deleteOneDirectSubordinatesProductSalesBonusPolicy(id: ID!): DirectSubordinatesProductSalesBonusPolicy
  createDisburse(data: CreateDisburseInput!): Disburse
  updateDisburse(id: ID!, data: UpdateDisburseInput!): Disburse
  deleteOneDisburse(id: ID!): Disburse
  createDisburseItem(data: CreateDisburseItemInput!): DisburseItem
  deleteOneDisburseItem(id: ID!): DisburseItem
  createDisbursePayout(data: CreateDisbursePayoutInput!): DisbursePayout
  deleteOneDisbursePayout(id: ID!): DisbursePayout
  closeDisbursementPeriod(id: ID!): DisbursementPeriod
  createDisbursementRequest(data: CreateDisbursementRequestInput!): DisbursementRequest
  updateDisbursementRequest(id: ID!, data: UpdateDisbursementRequestInput!): DisbursementRequest
  deleteOneDisbursementRequest(id: ID!): DisbursementRequest
  handleDisbursementShopAffiliate(id: ID!, status: String!, reason: String): DisbursementShopAffiliate
  createDiscountPolicy(data: CreateDiscountPolicyInput!): DiscountPolicy
  updateDiscountPolicy(id: ID!, data: UpdateDiscountPolicyInput!): DiscountPolicy
  deleteOneDiscountPolicy(id: ID!): DiscountPolicy
  createDisease(data: CreateDiseaseInput!): Disease
  updateDisease(id: ID!, data: UpdateDiseaseInput!): Disease
  deleteOneDisease(id: ID!): Disease
  createDomainMapping(data: CreateDomainMappingInput!): DomainMapping
  updateDomainMapping(id: ID!, data: UpdateDomainMappingInput!): DomainMapping
  deleteOneDomainMapping(id: ID!): DomainMapping
  createDriver(data: CreateDriverInput!): Driver
  updateDriver(id: ID!, data: UpdateDriverInput!): Driver
  deleteOneDriver(id: ID!): Driver
  deleteOneEVoucher(id: ID!): EVoucher
  deleteOneEVoucherItem(id: ID!): EVoucherItem
  deleteAllEvoucherItems(eVoucherId: ID!, onlyDeleteUnused: Boolean!): DeleteAllEvoucherItemsData
  createEmail(data: CreateEmailInput!): Email
  updateEmail(id: ID!, data: UpdateEmailInput!): Email
  deleteOneEmail(id: ID!): Email
  resolveEventError(id: ID!): EventError
  createExpert(data: CreateExpertInput!): Expert
  updateExpert(id: ID!, data: UpdateExpertInput!): Expert
  deleteOneExpert(id: ID!): Expert
  createExpertGroup(data: CreateExpertGroupInput!): ExpertGroup
  updateExpertGroup(id: ID!, data: UpdateExpertGroupInput!): ExpertGroup
  deleteOneExpertGroup(id: ID!): ExpertGroup
  memberCreateFeedbackProduct(data: MemberCreateFeedbackProductInput!): FeedbackProduct
  memberUpdateFeedbackProduct(id: ID!, data: MemberUpdateFeedbackProductInput!): FeedbackProduct
  memberDeleteOneFeedbackProduct(id: ID!): FeedbackProduct
  createGlobalProductCategory(data: CreateGlobalProductCategoryInput!): GlobalProductCategory
  updateGlobalProductCategory(id: ID!, data: UpdateGlobalProductCategoryInput!): GlobalProductCategory
  deleteOneGlobalProductCategory(id: ID!): GlobalProductCategory
  createGoShipSetting(data: CreateGoShipSettingInput!): GoShipSetting
  updateGoShipSetting(id: ID!, data: UpdateGoShipSettingInput!): GoShipSetting
  deleteOneGoShipSetting(id: ID!): GoShipSetting
  connectGoShipShopConfig(data: ConnectGoShipShopConfigInput!): GoShipShopConfig
  disconnectGoShipShopConfig: GoShipShopConfig
  updateMyGoShipShopConfig(data: UpdateConnectGoShipShopConfigInput!): GoShipShopConfig
  createIndividualProductSalesBonusPolicy(data: CreateIndividualProductSalesBonusPolicyInput!): IndividualProductSalesBonusPolicy
  updateIndividualProductSalesBonusPolicy(id: ID!, data: UpdateIndividualProductSalesBonusPolicyInput!): IndividualProductSalesBonusPolicy
  deleteOneIndividualProductSalesBonusPolicy(id: ID!): IndividualProductSalesBonusPolicy
  createIndividualServiceContractTypeSalesBonusPolicy(data: CreateIndividualServiceContractTypeSalesBonusPolicyInput!): IndividualServiceContractTypeSalesBonusPolicy
  updateIndividualServiceContractTypeSalesBonusPolicy(id: ID!, data: UpdateIndividualServiceContractTypeSalesBonusPolicyInput!): IndividualServiceContractTypeSalesBonusPolicy
  deleteOneIndividualServiceContractTypeSalesBonusPolicy(id: ID!): IndividualServiceContractTypeSalesBonusPolicy
  createInventoryVoucher(data: CreateInventoryVoucherInput!): InventoryVoucher
  createInventoryVoucherImportAllProduct(data: CreateInventoryVoucherImportAllProductInput!): InventoryVoucher
  updateInventoryVoucher(id: ID!, data: UpdateInventoryVoucherInput!): InventoryVoucher
  editInvoice(data: EditInvoiceInput!): Invoice
  issueInvoiceByInvoiceRequestId(invoiceRequestId: ID!, data: IssueInvoiceInput!): Invoice
  issueInvoice(data: IssueInvoiceInput!): Invoice
  prepareInvoicePayload(data: IssueInvoiceInput!): Invoice
  updateMyInvoiceConfig(data: UpdateInvoiceConfigInput!): InvoiceConfig
  updateInvoiceElectronicContract(id: ID!, data: UpdateInvoiceElectronicContractInput!): InvoiceElectronicContract
  createInvoiceRequest(data: CreateInvoiceRequestInput!): InvoiceRequest
  updateInvoiceRequest(id: ID!, data: UpdateInvoiceRequestInput!): InvoiceRequest
  deleteOneInvoiceRequest(id: ID!): InvoiceRequest
  createLuckyWheel(data: CreateLuckyWheelInput!): LuckyWheel
  updateLuckyWheel(id: ID!, data: UpdateLuckyWheelInput!): LuckyWheel
  deleteOneLuckyWheel(id: ID!): LuckyWheel
  createDeclarationRegisterInvoice(data: MInvoiceDeclarationInput): MInvoiceDeclarationRegisterInvoice
  signDeclarationRegisterInvoice(data: MInvoiceAdminSignDeclarationInput): signDeclarationRegisterInvoiceData
  convertOrderToInvoiceMInvoice(orderId: ID!): Mixed

  """
  Tạo preview hóa đơn dựa trên order và các tuỳ chọn của người dùng.
  Trả về thông tin tóm tắt (preview) để frontend hiển thị cho user xem trước.
  """
  previewInvoiceMInvoice(data: CreateInvoiceMInvoiceInput!): InvoiceMInvoiceInfo
  updateInvoiceForMember(data: UpdateInvoiceMInvoiceInput!): InvoiceMInvoiceInfo
  signInvoiceForMember(mInvoiceId: String!): InvoiceMInvoiceInfo

  """
  Tạo hóa đơn thực tế trên M-Invoice.
  - data.orderId: ID của Order
  - data.isAutoSign: true để ký & gửi CQT ngay, false chỉ tạo chờ ký
  - data.overrides: Các trường tùy chỉnh ghi đè lên payload gốc
  Trả về thông tin hóa đơn sau khi xử lý.
  """
  createInvoiceFromOrderMInvoice(data: CreateInvoiceMInvoiceInput!): InvoiceMInvoiceInfo
  createInvoiceFromServiceContractMInvoice(data: CreateInvoiceMInvoiceInput!): InvoiceMInvoiceInfo

  """Lấy thông tin chi tiết hóa đơn từ M-Invoice."""
  getInfoInvoiceMInvoice(data: GetInfoInvoiceMInvoiceInput!): InvoiceMInvoiceInfo
  createMInoviceRegisterInvoice(data: CreateRegisterInvoiceInput): MInvoiceRegisterInvoice
  connectTokenSignature(input: ConnectTokenSignatureInput): MInvoiceTokenSignature
  updateMInoviceTokenSignatureBySerialNumber(serialNumber: String, data: UpdateMInvoiceTokenSignatureInput!): MInvoiceTokenSignature
  memberRegisterMInvoiceAccountCustomer(data: MInvoiceAdminCreateCustomerInput): MInvoiceAdminAllCustomerDetailItem
  memberCreateMInoviceSignatureRegistration(data: MInoviceSignatureRegistrationInput): MInoviceSignatureRegistrationData
  updateMyMInvoiceAdminConfig(data: UpdateMInvoiceAdminConfigInput!): MInvoiceAdminConfig
  connectMInvoiceAdminConfig(data: ConnectMInvoiceConfigInput!): MInvoiceAdminConfig
  disconnectMyMInvoiceAdminConfig: MInvoiceAdminConfig
  updateMyMInvoiceConfig(data: UpdateMInvoiceConfigInput!): MInvoiceConfig
  connectMInvoiceConfig(data: ConnectMInvoiceConfigInput!): MInvoiceConfig
  disconnectMyMInvoiceConfig: MInvoiceConfig
  setManychatPageBotField(data: ManyChatCustomSetBotFieldInput): [ManyChatPageBotField]
  createManychatCustomFieldSetting(data: CreateManychatCustomFieldSettingInput!): ManychatCustomFieldSetting
  updateManychatCustomFieldSetting(id: ID!, data: UpdateManychatCustomFieldSettingInput!): ManychatCustomFieldSetting
  deleteOneManychatCustomFieldSetting(id: ID!): ManychatCustomFieldSetting
  createManychatSendFlowSetting(data: CreateManychatSendFlowSettingInput!): ManychatSendFlowSetting
  updateManychatSendFlowSetting(id: ID!, data: UpdateManychatSendFlowSettingInput!): ManychatSendFlowSetting
  deleteOneManychatSendFlowSetting(id: ID!): ManychatSendFlowSetting
  createManychatSendNotificationSetting(data: CreateManychatSendNotificationSettingInput!): ManychatSendNotificationSetting
  updateManychatSendNotificationSetting(id: ID!, data: UpdateManychatSendNotificationSettingInput!): ManychatSendNotificationSetting
  deleteOneManychatSendNotificationSetting(id: ID!): ManychatSendNotificationSetting
  updateManychatSetting(data: UpdateManychatSettingInput!): ManychatSetting
  createMediaCentral(data: CreateMediaCentralInput!): MediaCentral
  updateMediaCentral(id: ID!, data: UpdateMediaCentralInput!): MediaCentral
  deleteOneMediaCentral(id: ID!): MediaCentral
  createMediaCentralCategory(data: CreateMediaCentralCategoryInput!): MediaCentralCategory
  updateMediaCentralCategory(id: ID!, data: UpdateMediaCentralCategoryInput!): MediaCentralCategory
  deleteOneMediaCentralCategory(id: ID!): MediaCentralCategory
  createMediaCentralItem(data: CreateMediaCentralItemInput!): MediaCentralItem
  updateMediaCentralItem(id: ID!, data: UpdateMediaCentralItemInput!): MediaCentralItem
  deleteOneMediaCentralItem(id: ID!): MediaCentralItem
  createMember(data: CreateMemberInput!): Member
  registerMember(data: RegisterMemberInput!): Member
  updateMember(id: ID!, data: UpdateMemberInput!): Member
  deleteOneMember(id: ID!): Member
  deleteManyMember(ids: [ID]): Int
  hardDeleteOneMember(id: ID!): Member
  loginMember(idToken: String!): MemberLoginData
  updateMemberPassword(memberId: ID, oldPassword: String, password: String!): Member
  connectChatbot(apiKey: String!): Member
  memberUpdateMe(data: UpdateMemberInput!): Member
  setMemberPSID(memberId: ID!, psid: Mixed!): Member
  generateChatbotStory(data: ChatbotStoryInput!): Member
  sendForgotPasswordEmail(data: SendForgotPasswordEmailInput!): Mixed
  updateMemberAddressDelivery(id: ID!, addressDeliveryIds: [ID]): Member
  updateMemberAddressStorehouse(id: ID!, addressStorehouseIds: [ID], mainAddressStorehouseId: ID): Member
  updateAllAddressDelivery(id: ID!): Member
  updateAllAddressStorehouse(id: ID!): Member
  signUpMember(data: SignUpMemberInput!): MemberLoginData
  createMemberImportingLog(data: CreateMemberImportingLogInput!): MemberImportingLog
  updateMemberImportingLog(id: ID!, data: UpdateMemberImportingLogInput!): MemberImportingLog
  deleteOneMemberImportingLog(id: ID!): MemberImportingLog
  createMicWeatherInsurance(payload: Mixed): Mixed
  micCareGuaranteeCard(id: ID!): Mixed
  calculateMicWeatherFee(payload: Mixed): Mixed
  calculateMicATVBFee(payload: Mixed): Mixed
  validateMicATVBCertificateInsurance(payload: Mixed): Mixed
  createMicATVBCertificateInsurance(payload: Mixed): Mixed
  createMicConfig(data: CreateMicConfigInput!): MicConfig
  updateMicConfig(id: ID!, data: UpdateMicConfigInput!): MicConfig
  deleteOneMicConfig(id: ID!): MicConfig
  getMicProvince: Mixed
  getMicWard(provinceCode: String): Mixed
  getMicBanks: Mixed
  createMicInsuranceConfig(data: CreateMicInsuranceConfigInput!): MicInsuranceConfig
  updateMicInsuranceConfig(id: ID!, data: UpdateMicInsuranceConfigInput!): MicInsuranceConfig
  deleteOneMicInsuranceConfig(id: ID!): MicInsuranceConfig
  upMigration: [Migration]
  applicationConfigMbBankAccount(data: ApplicationConfigMbBankAccountInput!): ApplicationMinigame
  updateManyChatSettingMinigameById(id: ID!, data: ManyChatSettingMinigameUpdateInput): ManyChatSettingMinigame
  createMerchantMinigame(data: CreateMerchantMinigameInput!): MerchantMinigame
  updateMerchantMinigame(id: ID!, data: UpdateMerchantMinigameInput!): MerchantMinigame
  deleteOneMerchantMinigame(id: ID!): MerchantMinigame
  createMinigame(data: Mixed): Minigame
  updateMinigame(id: String, data: Mixed): Minigame
  giveRewardByPlayerGameLogId(playerGameLogId: String): Mixed
  playMinigame(minigameId: String!): PlayMinigameResult
  paymentLogMinigameCreateInvoice(data: CreatePaymentLogCreateInvoiceInput!): PaymentLogMinigame
  paymentLogMinigameUpdateInvoice(id: String!, data: UpdatePaymentLogCreateInvoiceInput!): PaymentLogMinigame
  updateServiceMinigameByMinigameId(minigameId: ID!, data: ServiceMinigameUpdateInput): ServiceMinigame
  createSubscriptionMinigame(data: CreateSubscriptionMinigameInput!): SubscriptionMinigame
  updateSubscriptionMinigame(id: String!, data: UpdateSubscriptionMinigameInput!): SubscriptionMinigame
  createVoucherGroupMinigame(data: CreateVoucherGroupMinigameInput!): VoucherGroupMinigame
  updateVoucherGroupMinigame(id: String!, data: UpdateVoucherGroupMinigameInput!): VoucherGroupMinigame
  createZaloOaSendMessageSettingMinigame(data: CreateZaloOaSendMessageSettingMinigameInput!): ZaloOaSendMessageSettingMinigame
  updateZaloOaSendMessageSettingMinigame(id: ID!, data: UpdateZaloOaSendMessageSettingMinigameInput!): ZaloOaSendMessageSettingMinigame
  deleteOneZaloOaSendMessageSettingMinigame(id: ID!): ZaloOaSendMessageSettingMinigame
  createMinigamePopup(data: CreateMinigamePopupInput!): MinigamePopup
  updateMinigamePopup(id: ID!, data: UpdateMinigamePopupInput!): MinigamePopup
  deleteOneMinigamePopup(id: ID!): MinigamePopup
  createMinigameRewardLog(data: CreateMinigameRewardLogInput!): MinigameRewardLog
  updateMinigameRewardLog(id: ID!, data: UpdateMinigameRewardLogInput!): MinigameRewardLog
  deleteOneMinigameRewardLog(id: ID!): MinigameRewardLog
  updateMyMinigameSetting(data: UpdateMinigameSettingInput!): MinigameSetting
  createMinigameVoucherGroupMapping(data: CreateMinigameVoucherGroupMappingInput): MinigameVoucherGroupMapping
  updateMinigameVoucherGroupMapping(id: ID!, data: UpdateMinigameVoucherGroupMappingInput!): MinigameVoucherGroupMapping
  deleteOneMinigameVoucherGroupMapping(id: ID!): MinigameVoucherGroupMapping
  testNextPay(data: NextPayInput!): Mixed
  testFCM(deviceToken: String, title: String, body: String, data: Mixed): Mixed
  readAllNotification: Boolean
  readNotification(notificationId: ID!): Notification
  pushNotificationSetting(id: ID!): NotificationSetting
  createNotificationSetting(data: CreateNotificationSettingInput!): NotificationSetting
  updateNotificationSetting(id: ID!, data: UpdateNotificationSettingInput!): NotificationSetting
  deleteOneNotificationSetting(id: ID!): NotificationSetting
  updateOnboardingFeatureDisplay(id: ID!, data: OnboardingFeatureDisplayInput!): OnboardingFeatureDisplay
  deleteOneOnboardingFeatureDisplay(id: ID!): OnboardingFeatureDisplay
  createOrder(data: CreateOrderInput!): [Order]
  cancelOrder(id: ID!, note: String): Order
  deliveryOrder(orderId: ID!, deliveryInfo: DeliveryInfoInput!): Order
  confirmToMemberOrder(id: ID!, note: String): Order
  approveToMemberOrder(id: ID!, note: String, status: String): Order
  signOrderInvoice(id: ID!): OrderInvoice
  updateMyOrderSplitConfig(data: UpdateOrderSplitConfigInput): OrderSplitConfig
  createPackageSubscription(data: CreatePackageSubscriptionInput!): PackageSubscription
  updatePackageSubscription(id: ID!, data: UpdatePackageSubscriptionInput!): PackageSubscription
  deleteOnePackageSubscription(id: ID!): PackageSubscription
  createPlant(data: CreatePlantInput!): Plant
  updatePlant(id: ID!, data: UpdatePlantInput!): Plant
  deleteOnePlant(id: ID!): Plant
  createPopup(data: CreatePopupInput!): Popup!
  updatePopup(id: ID!, data: UpdatePopupInput!): Popup!
  deleteOnePopup(id: ID!): Popup!
  createPosition(data: CreatePositionInput!): Position
  updatePosition(id: ID!, data: UpdatePositionInput!): Position
  deleteOnePosition(id: ID!): Position
  createPost(data: CreatePostInput!): Post
  updatePost(id: ID!, data: UpdatePostInput!): Post
  deleteOnePost(id: ID!): Post
  createPostTag(data: CreatePostTagInput!): PostTag
  updatePostTag(id: ID!, data: UpdatePostTagInput!): PostTag
  deleteOnePostTag(id: ID!): PostTag
  createTopic(data: CreateTopicInput!): Topic
  updateTopic(id: ID!, data: UpdateTopicInput!): Topic
  deleteOneTopic(id: ID!): Topic
  createPreBooking(data: CreatePreBookingInput!): PreBooking
  updatePreBooking(id: ID!, data: UpdatePreBookingInput!): PreBooking
  deleteOnePreBooking(id: ID!): PreBooking
  createPreBookingType(data: CreatePreBookingTypeInput!): PreBookingType
  updatePreBookingType(id: ID!, data: UpdatePreBookingTypeInput!): PreBookingType
  deleteOnePreBookingType(id: ID!): PreBookingType
  createPricePolicy(data: CreatePricePolicyInput!): PricePolicy
  updatePricePolicy(id: ID!, data: UpdatePricePolicyInput!): PricePolicy
  deleteOnePricePolicy(id: ID!): PricePolicy
  createProduct(data: CreateProductInput!): Product
  createProducts(data: [CreateProductInput]!): [Product]
  updateProduct(id: ID!, data: UpdateProductInput!): Product
  deleteOneProduct(id: ID!): Product
  increaseViewCount(productId: ID!): Product
  createProductTag(data: CreateProductTagInput!): ProductTag
  updateProductTag(id: ID!, data: UpdateProductTagInput!): ProductTag
  deleteOneProductTag(id: ID!): ProductTag
  createTab(data: CreateTabInput!): Tab
  updateTab(id: ID!, data: UpdateTabInput!): Tab
  deleteOneTab(id: ID!): Tab
  createProductAttribute(data: CreateProductAttributeInput!): ProductAttribute
  updateProductAttribute(id: ID!, data: UpdateProductAttributeInput!): ProductAttribute
  deleteOneProductAttribute(id: ID!): ProductAttribute
  createProductAttributeElement(data: CreateProductAttributeElementInput!): ProductAttributeElement
  updateProductAttributeElement(id: ID!, data: UpdateProductAttributeElementInput!): ProductAttributeElement
  deleteOneProductAttributeElement(id: ID!): ProductAttributeElement
  createProductAttributeTemplate(data: CreateProductAttributeTemplateInput!): ProductAttributeTemplate
  updateProductAttributeTemplate(id: ID!, data: UpdateProductAttributeTemplateInput!): ProductAttributeTemplate
  deleteOneProductAttributeTemplate(id: ID!): ProductAttributeTemplate
  createProductCommissionPolicy(data: CreateProductCommissionPolicyInput!): ProductCommissionPolicy
  updateProductCommissionPolicy(id: ID!, data: UpdateProductCommissionPolicyInput!): ProductCommissionPolicy
  deleteOneProductCommissionPolicy(id: ID!): ProductCommissionPolicy
  deleteOneProductImportingLog(id: ID!): ProductImportingLog
  createProductLabel(data: CreateProductLabelInput!): ProductLabel
  updateProductLabel(id: ID!, data: UpdateProductLabelInput!): ProductLabel
  deleteOneProductLabel(id: ID!): ProductLabel
  createProductPricePolicy(data: CreateProductPricePolicyInput!): ProductPricePolicy
  updateProductPricePolicy(id: ID!, data: UpdateProductPricePolicyInput!): ProductPricePolicy
  deleteOneProductPricePolicy(id: ID!): ProductPricePolicy
  addAllRemainingProductsToProductPricePolicy(id: ID!): ProductPricePolicy
  createProductSalesBonusPolicy(data: CreateProductSalesBonusPolicyInput!): ProductSalesBonusPolicy
  updateProductSalesBonusPolicy(id: ID!, data: UpdateProductSalesBonusPolicyInput!): ProductSalesBonusPolicy
  deleteOneProductSalesBonusPolicy(id: ID!): ProductSalesBonusPolicy
  createProductTopping(data: CreateProductToppingInput!): ProductTopping
  updateProductTopping(id: ID!, data: UpdateProductToppingInput!): ProductTopping
  deleteOneProductTopping(id: ID!): ProductTopping
  saveProductWithinAffiliateLevelDiscountPolicies(data: SaveProductWithinAffiliateLevelDiscountPolicyInput!): [ProductWithinAffiliateLevelDiscountPolicy]
  saveProductWithinDirectSubordinatesProductSalesBonusPolicies(data: SaveProductWithinDirectSubordinatesProductSalesBonusPolicyInput!): [ProductWithinDirectSubordinatesProductSalesBonusPolicy]
  addProductWithinDirectSubordinatesProductSalesBonusPolicy(data: AddProductWithinDirectSubordinatesProductSalesBonusPolicyInput!): ProductWithinDirectSubordinatesProductSalesBonusPolicy
  saveProductWithinIndividualProductSalesBonusPolicies(data: SaveProductWithinIndividualProductSalesBonusPolicyInput!): [ProductWithinIndividualProductSalesBonusPolicy]
  addProductWithinIndividualProductSalesBonusPolicy(data: AddProductWithinIndividualProductSalesBonusPolicyInput!): ProductWithinIndividualProductSalesBonusPolicy
  saveProductWithinProductCommissionPolicies(data: SaveProductWithinProductCommissionPolicyInput!): [ProductWithinProductCommissionPolicy]
  addProductWithinProductCommissionPolicy(data: AddProductWithinProductCommissionPolicyInput!): ProductWithinProductCommissionPolicy
  saveProductWithinProductSalesBonusPolicies(data: SaveProductWithinProductSalesBonusPolicyInput!): [ProductWithinProductSalesBonusPolicy]
  addProductWithinProductSalesBonusPolicy(data: AddProductWithinProductSalesBonusPolicyInput!): ProductWithinProductSalesBonusPolicy
  saveProductWithinRecurringProductCommissionPolicies(data: SaveProductWithinRecurringProductCommissionPolicyInput!): [ProductWithinRecurringProductCommissionPolicy]
  addProductWithinRecurringProductCommissionPolicy(data: AddProductWithinRecurringProductCommissionPolicyInput!): ProductWithinRecurringProductCommissionPolicy
  createPromotion(data: CreatePromotionInput!): Promotion
  updatePromotion(id: ID!, data: UpdatePromotionInput!): Promotion
  deleteOnePromotion(id: ID!): Promotion
  updateQRCode(id: ID!, data: UpdateQRCodeInput!): QRCode
  createQRCodeStage(data: CreateQRCodeStageInput!): QRCodeStage
  updateQRCodeStage(id: ID!, data: UpdateQRCodeStageInput!): QRCodeStage
  createRecurringProductCommissionPolicy(data: CreateRecurringProductCommissionPolicyInput!): RecurringProductCommissionPolicy
  updateRecurringProductCommissionPolicy(id: ID!, data: UpdateRecurringProductCommissionPolicyInput!): RecurringProductCommissionPolicy
  deleteOneRecurringProductCommissionPolicy(id: ID!): RecurringProductCommissionPolicy
  createRecurringProductCommissionPolicyLog(data: CreateRecurringProductCommissionPolicyLogInput!): RecurringProductCommissionPolicyLog
  updateRecurringProductCommissionPolicyLog(id: ID!, data: UpdateRecurringProductCommissionPolicyLogInput!): RecurringProductCommissionPolicyLog
  deleteOneRecurringProductCommissionPolicyLog(id: ID!): RecurringProductCommissionPolicyLog
  createRecurringProductCommissionSchedule(data: CreateRecurringProductCommissionScheduleInput!): RecurringProductCommissionSchedule
  updateRecurringProductCommissionSchedule(id: ID!, data: UpdateRecurringProductCommissionScheduleInput!): RecurringProductCommissionSchedule
  deleteOneRecurringProductCommissionSchedule(id: ID!): RecurringProductCommissionSchedule
  createRecurringServiceContractTypeCommissionPolicy(data: CreateRecurringServiceContractTypeCommissionPolicyInput!): RecurringServiceContractTypeCommissionPolicy
  updateRecurringServiceContractTypeCommissionPolicy(id: ID!, data: UpdateRecurringServiceContractTypeCommissionPolicyInput!): RecurringServiceContractTypeCommissionPolicy
  deleteOneRecurringServiceContractTypeCommissionPolicy(id: ID!): RecurringServiceContractTypeCommissionPolicy
  updateRecurringServiceContractTypeCommissionPolicyLog(id: ID!, data: UpdateRecurringServiceContractTypeCommissionPolicyLogInput!): RecurringServiceContractTypeCommissionPolicyLog
  updateRecurringServiceContractTypeCommissionSchedule(id: ID!, data: UpdateRecurringServiceContractTypeCommissionScheduleInput!): RecurringServiceContractTypeCommissionSchedule
  deleteOneRecurringServiceContractTypeCommissionSchedule(id: ID!): RecurringServiceContractTypeCommissionSchedule
  createReferralCommissionLog(data: CreateReferralCommissionLogInput!): ReferralCommissionLog
  updateReferralCommissionLog(id: ID!, data: UpdateReferralCommissionLogInput!): ReferralCommissionLog
  deleteOneReferralCommissionLog(id: ID!): ReferralCommissionLog
  createReferralCommissionLogDetail(data: CreateReferralCommissionLogDetailInput!): ReferralCommissionLogDetail
  updateReferralCommissionLogDetail(id: ID!, data: UpdateReferralCommissionLogDetailInput!): ReferralCommissionLogDetail
  deleteOneReferralCommissionLogDetail(id: ID!): ReferralCommissionLogDetail
  createReferralCommissionPolicy(data: CreateReferralCommissionPolicyInput!): ReferralCommissionPolicy
  updateReferralCommissionPolicy(id: ID!, data: UpdateReferralCommissionPolicyInput!): ReferralCommissionPolicy
  deleteOneReferralCommissionPolicy(id: ID!): ReferralCommissionPolicy
  updateReferralShopAffiliateRewardMilestoneConfig(id: ID, data: UpdateReferralShopAffiliateRewardMilestoneConfigInput!): ReferralShopAffiliateRewardMilestoneConfig
  createRevenueSharingPolicy(data: CreateRevenueSharingPolicyInput!): RevenueSharingPolicy
  updateRevenueSharingPolicy(id: ID!, data: UpdateRevenueSharingPolicyInput!): RevenueSharingPolicy
  deleteOneRevenueSharingPolicy(id: ID!): RevenueSharingPolicy
  createService(data: CreateServiceInput!): Service
  updateService(id: ID!, data: UpdateServiceInput!): Service
  deleteOneService(id: ID!): Service
  createServiceCart(data: CreateServiceCartInput!): ServiceCart
  updateServiceCart(id: ID!, data: UpdateServiceCartInput!): ServiceCart
  deleteOneServiceCart(id: ID!): ServiceCart
  generateServiceContract(data: CreateServiceContractInput!): ServiceContract
  generateDraftServiceContract(data: CreateServiceContractInput!): ServiceContract
  generateDraftServiceContractV2(data: CreateServiceContractInput!): ServiceContract
  updateServiceContract(id: ID!, data: UpdateServiceContractInput!): ServiceContract
  deleteOneServiceContract(id: ID!): ServiceContract
  createServiceContractType(data: CreateServiceContractTypeInput!): ServiceContractType
  updateServiceContractType(id: ID!, data: UpdateServiceContractTypeInput!): ServiceContractType
  deleteOneServiceContractType(id: ID!): ServiceContractType
  createServiceContractTypeCategory(data: CreateServiceContractTypeCategoryInput!): ServiceContractTypeCategory
  updateServiceContractTypeCategory(id: ID!, data: UpdateServiceContractTypeCategoryInput!): ServiceContractTypeCategory
  deleteOneServiceContractTypeCategory(id: ID!): ServiceContractTypeCategory
  createServiceContractTypeCommissionPolicy(data: CreateServiceContractTypeCommissionPolicyInput!): ServiceContractTypeCommissionPolicy
  updateServiceContractTypeCommissionPolicy(id: ID!, data: UpdateServiceContractTypeCommissionPolicyInput!): ServiceContractTypeCommissionPolicy
  deleteOneServiceContractTypeCommissionPolicy(id: ID!): ServiceContractTypeCommissionPolicy
  createServiceContractTypePricePolicy(data: CreateServiceContractTypePricePolicyInput!): ServiceContractTypePricePolicy
  updateServiceContractTypePricePolicy(id: ID!, data: UpdateServiceContractTypePricePolicyInput!): ServiceContractTypePricePolicy
  deleteOneServiceContractTypePricePolicy(id: ID!): ServiceContractTypePricePolicy
  addAllRemainingServiceContractTypesToServiceContractTypePricePolicy(id: ID!): ServiceContractTypePricePolicy
  createServiceContractTypeSessionLog(data: CreateServiceContractTypeSessionLogInput!): ServiceContractTypeSessionLog
  updateServiceContractTypeSessionLog(id: ID!, data: UpdateServiceContractTypeSessionLogInput!): ServiceContractTypeSessionLog
  saveServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicies(data: SaveServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput!): [ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy]
  addServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy(data: AddServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput!): ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy
  saveServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicies(data: SaveServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput!): [ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy]
  addServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy(data: AddServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput!): ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy
  saveServiceContractTypeWithinServiceContractTypeCommissionPolicies(data: SaveServiceContractTypeWithinServiceContractTypeCommissionPolicyInput!): [ServiceContractTypeWithinServiceContractTypeCommissionPolicy]
  createServiceTag(data: CreateServiceTagInput!): ServiceTag
  updateServiceTag(id: ID!, data: UpdateServiceTagInput!): ServiceTag
  deleteOneServiceTag(id: ID!): ServiceTag
  createSetting(data: CreateSettingInput!): Setting
  updateSetting(id: ID!, data: UpdateSettingInput!): Setting
  deleteOneSetting(id: ID!): Setting
  deleteManySetting(ids: [ID]): Int
  createSettingGroup(data: CreateSettingGroupInput!): SettingGroup
  updateSettingGroup(id: ID!, data: UpdateSettingGroupInput!): SettingGroup
  deleteOneSettingGroup(id: ID!): SettingGroup
  deleteManySettingGroup(ids: [ID]): Int
  createShipment(data: CreateShipmentInput!): Shipment
  updateShipment(id: ID!, data: UpdateShipmentInput!): Shipment
  deleteOneShipment(id: ID!): Shipment
  createDistributionRequest(data: CreateDistributionRequestInput!): DistributionRequest
  createShopBranch(data: CreateShopBranchInput!): ShopBranch
  updateShopBranch(id: ID!, data: UpdateShopBranchInput!): ShopBranch
  deleteOneShopBranch(id: ID!): ShopBranch
  createShopCategory(data: CreateShopCategoryInput!): ShopCategory
  updateShopCategory(id: ID!, data: UpdateShopCategoryInput!): ShopCategory
  deleteOneShopCategory(id: ID!): ShopCategory
  createShopComment(data: CreateShopCommentInput!): ShopComment
  updateShopComment(id: ID!, data: UpdateShopCommentInput!): ShopComment
  deleteOneShopComment(id: ID!): ShopComment
  updateShopConfig(id: ID!, data: UpdateShopConfigInput!): ShopConfig
  updateMyShopConfig(data: UpdateShopConfigInput!): ShopConfig
  createShopPost(data: CreateShopPostInput!): ShopPost
  updateShopPost(id: ID!, data: UpdateShopPostInput!): ShopPost
  deleteOneShopPost(id: ID!): ShopPost
  createShopPostTag(data: CreateShopPostTagInput!): ShopPostTag
  updateShopPostTag(id: ID!, data: UpdateShopPostTagInput!): ShopPostTag
  deleteOneShopPostTag(id: ID!): ShopPostTag
  createShopTopic(data: CreateShopTopicInput!): ShopTopic
  updateShopTopic(id: ID!, data: UpdateShopTopicInput!): ShopTopic
  deleteOneShopTopic(id: ID!): ShopTopic
  createShopRegistration(data: CreateShopRegistrationInput!): ShopRegistration
  createSaleFeedComment(data: CreateSaleFeedCommentInput!): SaleFeedComment
  updateSaleFeedComment(id: ID!, data: UpdateSaleFeedCommentInput!): SaleFeedComment
  deleteOneSaleFeedComment(id: ID!): SaleFeedComment
  createShopSaleFeed(data: CreateShopSaleFeedInput!): ShopSaleFeed
  updateShopSaleFeed(id: ID!, data: UpdateShopSaleFeedInput!): ShopSaleFeed
  deleteOneShopSaleFeed(id: ID!): ShopSaleFeed
  createShopTable(data: CreateShopTableInput!): ShopTable
  updateShopTable(id: ID!, data: UpdateShopTableInput!): ShopTable
  deleteOneShopTable(id: ID!): ShopTable
  createShopVideo(data: CreateShopVideoInput!): ShopVideo
  updateShopVideo(id: ID!, data: UpdateShopVideoInput!): ShopVideo
  deleteOneShopVideo(id: ID!): ShopVideo
  createShopVoucher(data: CreateShopVoucherInput!): ShopVoucher
  updateShopVoucher(id: ID!, data: UpdateShopVoucherInput!): ShopVoucher
  deleteOneShopVoucher(id: ID!): ShopVoucher
  createShopAffiliate(data: CreateShopAffiliateInput!): ShopAffiliate
  createAffiliateForCustomer(data: CreateShopAffiliateInput!): Affiliate
  updateShopAffiliate(id: ID!, data: UpdateShopAffiliateInput!): ShopAffiliate
  updateRefererForCustomer(data: updateRefererForCustomerInput!): Customer
  updateShopAffiliateForAffiliate(data: updateShopAffiliateForAffiliateInput!): ShopAffiliate
  deleteOneShopAffiliate(id: ID!): ShopAffiliate
  createShopAffiliateLabel(data: CreateShopAffiliateLabelInput!): ShopAffiliateLabel
  updateShopAffiliateLabel(id: ID!, data: UpdateShopAffiliateLabelInput!): ShopAffiliateLabel
  deleteOneShopAffiliateLabel(id: ID!): ShopAffiliateLabel
  createShopAffiliateLevelDiscountPolicy(data: CreateShopAffiliateLevelDiscountPolicyInput!): ShopAffiliateLevelDiscountPolicy
  updateShopAffiliateLevelDiscountPolicy(id: ID!, data: UpdateShopAffiliateLevelDiscountPolicyInput!): ShopAffiliateLevelDiscountPolicy
  deleteOneShopAffiliateLevelDiscountPolicy(id: ID!): ShopAffiliateLevelDiscountPolicy
  createShopAffiliateRecurringProductCommissionPolicy(data: CreateShopAffiliateRecurringProductCommissionPolicyInput!): ShopAffiliateRecurringProductCommissionPolicy
  updateShopAffiliateRecurringProductCommissionPolicy(id: ID!, data: UpdateShopAffiliateRecurringProductCommissionPolicyInput!): ShopAffiliateRecurringProductCommissionPolicy
  deleteOneShopAffiliateRecurringProductCommissionPolicy(id: ID!): ShopAffiliateRecurringProductCommissionPolicy
  createShopAffiliateRecurringServiceContractTypeCommissionPolicy(data: CreateShopAffiliateRecurringServiceContractTypeCommissionPolicyInput!): ShopAffiliateRecurringServiceContractTypeCommissionPolicy
  updateShopAffiliateRecurringServiceContractTypeCommissionPolicy(id: ID!, data: UpdateShopAffiliateRecurringServiceContractTypeCommissionPolicyInput!): ShopAffiliateRecurringServiceContractTypeCommissionPolicy
  deleteOneShopAffiliateRecurringServiceContractTypeCommissionPolicy(id: ID!): ShopAffiliateRecurringServiceContractTypeCommissionPolicy
  guestCreateShopAffiliateRequest(data: GuestCreateShopAffiliateRequestInput!): ShopAffiliateRequest
  shopCreateShopAffiliateRequest(data: ShopCreateShopAffiliateRequestInput!): ShopAffiliateRequest
  createShopAffiliateRequest(data: CreateShopAffiliateRequestInput!): ShopAffiliateRequest
  updateShopAffiliateRequest(id: ID!, data: UpdateShopAffiliateRequestInput!): ShopAffiliateRequest
  guestRequestRenewal: ShopAffiliateRequest
  createShopAffiliateServiceContractTypeCommissionPolicy(data: CreateShopAffiliateServiceContractTypeCommissionPolicyInput!): ShopAffiliateServiceContractTypeCommissionPolicy
  updateShopAffiliateServiceContractTypeCommissionPolicy(id: ID!, data: UpdateShopAffiliateServiceContractTypeCommissionPolicyInput!): ShopAffiliateServiceContractTypeCommissionPolicy
  deleteOneShopAffiliateServiceContractTypeCommissionPolicy(id: ID!): ShopAffiliateServiceContractTypeCommissionPolicy
  createShopDisbursementPeriod(data: CreateShopDisbursementPeriodInput!): ShopDisbursementPeriod
  updateShopDisbursementPeriod(id: ID!, data: UpdateShopDisbursementPeriodInput!): ShopDisbursementPeriod
  deleteOneShopDisbursementPeriod(id: ID!): ShopDisbursementPeriod
  createShopServiceCategory(data: CreateShopServiceCategoryInput!): ShopServiceCategory
  updateShopServiceCategory(id: ID!, data: UpdateShopServiceCategoryInput!): ShopServiceCategory
  deleteOneShopServiceCategory(id: ID!): ShopServiceCategory
  createShopServiceSpecialist(data: CreateShopServiceSpecialistInput!): ShopServiceSpecialist
  updateShopServiceSpecialist(id: ID!, data: UpdateShopServiceSpecialistInput!): ShopServiceSpecialist
  deleteOneShopServiceSpecialist(id: ID!): ShopServiceSpecialist
  createShopVoucherSharingPolicy(data: CreateShopVoucherSharingPolicyInput!): ShopVoucherSharingPolicy
  updateShopVoucherSharingPolicy(id: ID!, data: UpdateShopVoucherSharingPolicyInput!): ShopVoucherSharingPolicy
  deleteOneShopVoucherSharingPolicy(id: ID!): ShopVoucherSharingPolicy
  saveShopVoucherWithinShopVoucherWithinShopVoucherSharingPolicies(data: SaveShopVoucherWithinShopVoucherWithinShopVoucherSharingPolicyInput!): [ShopVoucherWithinShopVoucherSharingPolicy]
  createShoppingCart(data: CreateShoppingCartInput!): ShoppingCart
  updateShoppingCart(id: ID!, data: UpdateShoppingCartInput!): ShoppingCart
  deleteOneShoppingCart(id: ID!): ShoppingCart
  updateShoppingWalletConfig(id: ID, data: UpdateShoppingWalletConfigInput!): ShoppingWalletConfig
  updateSignatureRegistrationRequest(id: ID!, data: UpdateSignatureRegistrationRequestInput!): SignatureRegistrationRequest
  createSpecsTemplate(data: CreateSpecsTemplateInput!): SpecsTemplate
  updateSpecsTemplate(id: ID!, data: UpdateSpecsTemplateInput!): SpecsTemplate
  deleteOneSpecsTemplate(id: ID!): SpecsTemplate
  createStaff(data: CreateStaffInput!): Staff
  updateStaff(id: ID!, data: UpdateStaffInput!): Staff
  deleteOneStaff(id: ID!): Staff
  createStaffPermission(data: CreateStaffPermissionInput!): StaffPermission
  updateStaffPermission(id: ID!, data: UpdateStaffPermissionInput!): StaffPermission
  deleteOneStaffPermission(id: ID!): StaffPermission
  getTest(id: ID!): String
  createSubscriptionPackage(data: CreateSubscriptionPackageInput!): SubscriptionPackage
  updateSubscriptionPackage(id: ID!, data: UpdateSubscriptionPackageInput!): SubscriptionPackage
  deleteOneSubscriptionPackage(id: ID!): SubscriptionPackage
  createSubscriptionRequest(data: CreateSubscriptionRequestInput!): SubscriptionRequest
  createSupplier(data: CreateSupplierInput!): Supplier
  updateSupplier(id: ID!, data: UpdateSupplierInput!): Supplier
  deleteOneSupplier(id: ID!): Supplier
  createSupportTicket(data: CreateSupportTicketInput!): SupportTicket
  updateSupportTicket(id: ID!, data: UpdateSupportTicketInput!): SupportTicket
  deleteOneSupportTicket(id: ID!): SupportTicket
  createSupportTicketComment(data: CreateSupportTicketCommentInput!): SupportTicketComment
  updateSupportTicketComment(id: ID!, data: UpdateSupportTicketCommentInput!): SupportTicketComment
  deleteOneSupportTicketComment(id: ID!): SupportTicketComment
  createTable(data: CreateTableInput!): Table
  updateTable(id: ID!, data: UpdateTableInput!): Table
  deleteOneTable(id: ID!): Table
  createTascoInsuranceConfig(data: CreateTascoInsuranceConfigInput!): TascoInsuranceConfig
  updateTascoInsuranceConfig(id: ID!, data: UpdateTascoInsuranceConfigInput!): TascoInsuranceConfig
  updateMyTascoInsuranceConfig(data: UpdateTascoInsuranceConfigInput!): TascoInsuranceConfig
  deleteOneTascoInsuranceConfig(id: ID!): TascoInsuranceConfig
  createTask(data: CreateTaskInput!): Task
  updateTask(id: ID!, data: UpdateTaskInput!): Task
  deleteOneTask(id: ID!): Task
  updateTaskLog(id: ID!, data: UpdateTaskLogInput!): TaskLog
  updateTemplateConfig(data: UpdateTemplateConfigInput!): TemplateConfig
  createTemplateConfigBanner(data: CreateTemplateConfigBannerInput!): TemplateConfigBanner
  updateTemplateConfigBanner(id: ID!, data: UpdateTemplateConfigBannerInput!): TemplateConfigBanner
  deleteOneTemplateConfigBanner(id: ID!): TemplateConfigBanner
  createThread(data: CreateThreadInput!): Thread
  updateThread(id: ID!, data: UpdateThreadInput!): Thread
  createThreadLabel(data: CreateThreadLabelInput!): ThreadLabel
  updateThreadLabel(id: ID!, data: UpdateThreadLabelInput!): ThreadLabel
  deleteOneThreadLabel(id: ID!): ThreadLabel
  createThreadMessage(data: CreateThreadMessageInput!): ThreadMessage
  unsendMessage(id: ID!): ThreadMessage
  createThreadNote(data: CreateThreadNoteInput!): ThreadNote
  updateThreadNote(id: ID!, data: UpdateThreadNoteInput!): ThreadNote
  deleteOneThreadNote(id: ID!): ThreadNote
  updateTopLeaderBoardBonusLog(id: ID!, data: UpdateTopLeaderBoardBonusLogInput!): TopLeaderBoardBonusLog
  updateTopLeaderBoardBonusPolicy(id: ID!, data: UpdateTopLeaderBoardBonusPolicyInput!): TopLeaderBoardBonusPolicy
  createTrigger(data: CreateTriggerInput!): Trigger
  updateTrigger(id: ID!, data: UpdateTriggerInput!): Trigger
  deleteOneTrigger(id: ID!): Trigger
  createTriggerGroup(data: CreateTriggerGroupInput!): TriggerGroup
  updateTriggerGroup(id: ID!, data: UpdateTriggerGroupInput!): TriggerGroup
  deleteOneTriggerGroup(id: ID!): TriggerGroup
  createUnit(data: CreateUnitInput!): Unit
  updateUnit(id: ID!, data: UpdateUnitInput!): Unit
  deleteOneUnit(id: ID!): Unit
  createUser(data: CreateUserInput!): User
  updateUser(id: ID!, data: UpdateUserInput!): User
  deleteOneUser(id: ID!): User
  deleteManyUser(ids: [ID]): Int
  login(idToken: String!, deviceId: String, deviceToken: String): LoginData
  updateUserPassword(id: ID!, password: String!): User
  userUpdateMe(data: UserUpdateMeInput!): User
  setUserPSID(userId: ID!, psid: Mixed!): User
  createUserAccessLog(data: CreateUserAccessLogInput!): UserAccessLog
  updateMyVacomConfig(data: UpdateVacomConfigInput!): VacomConfig
  createWarehouseProductAudit(data: CreateWarehouseProductAuditInput!): WarehouseProductAudit
  updateWarehouseProductAudit(id: ID!, data: UpdateWarehouseProductAuditInput!): WarehouseProductAudit
  deleteOneWarehouseProductAudit(id: ID!): WarehouseProductAudit
  updateWarehouseProductAuditItem(id: ID!, data: UpdateWarehouseProductAuditItemInput!): WarehouseProductAuditItem
  createWarehouseProductHistory(data: CreateWarehouseProductHistoryInput!): WarehouseProductHistory
  updateWarehouseProductHistory(id: ID!, data: UpdateWarehouseProductHistoryInput!): WarehouseProductHistory
  deleteOneWarehouseProductHistory(id: ID!): WarehouseProductHistory
  updateWeather(id: ID!, data: UpdateWeatherInput!): Weather
  deleteOneWeather(id: ID!): Weather
  deleteManyWeather(ids: [ID]): Int
  updateAllWeather: Boolean
  createWriter(data: CreateWriterInput!): Writer
  updateWriter(id: ID!, data: UpdateWriterInput!): Writer
  deleteOneWriter(id: ID!): Writer
  createWriterGroup(data: CreateWriterGroupInput!): WriterGroup
  updateWriterGroup(id: ID!, data: UpdateWriterGroupInput!): WriterGroup
  deleteOneWriterGroup(id: ID!): WriterGroup
  updateYoutubeVideo(id: ID!, data: UpdateYoutubeVideoInput!): YoutubeVideo
  createYoutubeVideoGroup(data: CreateYoutubeVideoGroupInput!): YoutubeVideoGroup
  updateYoutubeVideoGroup(id: ID!, data: UpdateYoutubeVideoGroupInput!): YoutubeVideoGroup
  deleteOneYoutubeVideoGroup(id: ID!): YoutubeVideoGroup
  createZaloMiniAppConfig(data: CreateZaloMiniAppConfigInput!): ZaloMiniAppConfig
  updateZaloMiniAppConfig(id: ID!, data: UpdateZaloMiniAppConfigInput!): ZaloMiniAppConfig
  updateMyZaloMiniAppConfig(data: UpdateZaloMiniAppConfigInput!): ZaloMiniAppConfig
  deleteOneZaloMiniAppConfig(id: ID!): ZaloMiniAppConfig
  createZaloMiniAppShopDisplayConfig(data: CreateZaloMiniAppShopDisplayConfigInput!): ZaloMiniAppShopDisplayConfig
  updateZaloMiniAppShopDisplayConfig(id: ID!, data: UpdateZaloMiniAppShopDisplayConfigInput!): ZaloMiniAppShopDisplayConfig
  deleteOneZaloMiniAppShopDisplayConfig(id: ID!): ZaloMiniAppShopDisplayConfig
  createZaloOASendMessageSetting(data: CreateZaloOASendMessageSettingInput!): ZaloOASendMessageSetting
  updateZaloOASendMessageSetting(id: ID!, data: UpdateZaloOASendMessageSettingInput!): ZaloOASendMessageSetting
  deleteOneZaloOASendMessageSetting(id: ID!): ZaloOASendMessageSetting
  createZaloOASetting(data: CreateZaloOASettingInput!): ZaloOASetting
  updateZaloOASetting(id: ID!, data: UpdateZaloOASettingInput!): ZaloOASetting
  deleteOneZaloOASetting(id: ID!): ZaloOASetting
  updateMyZaloShopConfig(data: UpdateZaloShopConfigInput!): ZaloShopConfig
  deleteOneZaloShopConfig(id: ID!): ZaloShopConfig
  createZaloUid(data: CreateZaloUidInput!): ZaloUid
  updateZaloUid(id: ID!, data: UpdateZaloUidInput!): ZaloUid
  deleteOneZaloUid(id: ID!): ZaloUid
  sendAdminNotification(id: ID!, target: String!): String
  agencyMemberBillToSuccess(data: AgencyMemberBillToSuccessInput): AgencyMemberBill
  generateAgencyMemberBill(data: GenerateAgencyMemberBillInput!): AgencyMemberBill
  generateDaftAgencyMemberBill(data: GenerateAgencyMemberBillInput!): AgencyMemberBill
  paymentAgencyMemberBill(data: PaymentAgencyMemberBillInput!): AgencyMemberBill
  loginAgencyUser(data: LoginAgencyUserInput): LoginAgencyUserData
  regisCollaborator: Collaborator
  regisCrossSaleToAllMember(productId: ID!): String

  """Chủ shop đăng xuất"""
  customerLogout(deviceToken: String!): String
  updateGlobalCollRegistStatus(
    registId: ID!

    """status: APPROVED, REJECTED"""
    status: String!
    rejectReason: String
  ): GlobalCollaboratorRegistration
  globalCustomerUpdateMe(data: UpdateGlobalCustomerInput!): GlobalCustomer
  globalCustomerSignUp(idToken: String!, deviceId: String, deviceToken: String): GlobalCustomerLoginData
  updatePasswordGlobalCustomer(password: String!, oldPassword: String): String
  resetPasswordGlobalCustomerByFirebaseToken(idToken: String!, newPassword: String!): String

  """Chủ shop đăng xuất"""
  globalCustomerLogout(deviceToken: String!): String
  loginAnonymousByDomain(domain: String!): String
  loginAnonymous(shopCode: String!): String
  loginAnonymousByAgencyCode(agencyCode: String!): String
  loginAnonymousV2(input: LoginAnonymousInput!): String
  loginCustomerByPhone(idToken: String!, deviceId: String, deviceToken: String, referrerCode: String): CustomerLoginData
  submitCustomerMomoWallet(name: String!, idCard: String!): String
  registerCustomerByPhone(data: RegisterCustomerByPhoneInput!): CustomerLoginData
  requestOtp(phone: String!): String
  updateCustomerFollowerId(followerId: String!): String
  updateCustomerPSID(psid: Mixed!): String
  updatePasswordCustomer(password: String!, oldPassword: String, idToken: String): String
  resetPasswordCustomerByFirebaseToken(idToken: String!, newPassword: String!): String
  updatePresenter(colCode: String): String
  closeDisburse(disburseId: ID!): Disburse
  approveDisbursePayout(payoutId: ID!): DisbursePayout
  recheckPayout(payoutId: ID!): DisbursePayout
  driverLogout(deviceId: String!): String
  driverUpdatePassword(password: String!, oldPassword: String!): Driver
  loginDriver(memberCode: String!, phone: String!, password: String!, deviceId: String, deviceToken: String): loginDriverData
  resetDriverPassword(driverId: ID!, password: String!): Driver
  expertLogin(email: String!, password: String!, deviceId: String, deviceToken: String): ExpertLoginData
  expertLoginByToken: Expert
  expertUpdatePhoneNumber(idToken: String!): String
  resetExpertPasswordByEmailSendLink(
    """Email đăng nhập"""
    email: String!
  ): validAndMessage
  resetExpertPasswordByEmailCheckLink(
    """/writer/resetPassword/link"""
    resetPasswordLink: String!
  ): validAndMessage
  resetExpertPasswordByEmail(
    """/writer/resetPassword/link"""
    resetPasswordLink: String!

    """New password"""
    newPassword: String!
  ): validAndMessage
  updateExpertPassword(password: String!, oldPassword: String!): String
  updateExpertSelf(data: UpdateExpertSelfInput!): Expert
  globalProductCategoryMarkHidden(id: String!, isHidden: Boolean!): GlobalProductCategory
  playLuckyWheel(wheelId: ID!): LuckyWheelResult
  autoGenerateManychatCustomFieldSetting: [ManychatCustomFieldSetting]
  loginMemberByPassword(username: String!, password: String!, deviceId: String, deviceToken: String): MemberLoginData

  """Chủ shop đăng xuất"""
  memberLogout(deviceToken: String!): String
  resetMemberPassword(
    """Email đã nhận được mã OTP"""
    emailOTP: String!

    """Mã OTP"""
    OTP: String!

    """New password"""
    newPassword: String!
  ): Mixed
  sendOTP(
    """Email để nhận OTP"""
    emailOTP: String
  ): Mixed
  shopConfigDomain(domain: String!): Mixed
  updateMemberEmail(
    """Email đã nhận được mã OTP"""
    emailOTP: String!

    """Mã OTP"""
    OTP: String!

    """New email"""
    newEmail: String!
  ): Mixed
  verifyMemberPhoneByFirebaseToken(token: String!): Member
  approveOrder(orderId: ID!, status: String!, note: String): Order
  confirmOrder(orderId: ID!, note: String): Order
  deliveryAgain(orderId: ID!, priceDriver: Float, note: String): Order
  deliveryFail(orderId: ID!, status: String!, note: String): Order
  deliveryMemberOrder(orderId: ID!): Order
  deliverySuccess(orderId: ID!, status: String!, priceDriver: Float, note: String): Order
  deliveryToMemberOrder(orderId: ID!): Order
  estimateFeeOrder(data: EstimateFeeOrderInput!): EstimateFeeOrder
  generateDraftOrder(data: CreateDraftOrderInput!): DraftOrderData
  generateOrder(data: CreateDraftOrderInput!): Order
  getAllDeliveryServiceAvailable(data: GetAllDeliveryServiceAvailableInput!): [DeliveryService]
  getAllDeliveryServicesForOrder(data: GetAllDeliveryServicesForOrderInput!): [DeliveryService]
  packagedOrder(orderId: ID!): Order
  paymentConfirmOrder(orderId: ID!, note: String, imageUrl: String): Order
  payOrderByMomo(orderId: ID!, appToken: String!, phoneNumber: String!): Order
  paymentOrder(data: PaymentOrderInput!): Order
  pinOrder(orderId: ID!): Order
  sortOrder(orderId: ID!): Order
  confirmTransfer(orderId: ID!): Order
  updateDraftOrder(orderId: ID!, data: UpdateDraftOrderInput!): DraftOrderData
  updateOrder(orderId: ID!, data: UpdateDraftOrderInput!): Order
  markTransferComplete: String
  cancelAhamoveOrder(orderId: ID!, comment: String!): Order
  cancelDriverOrder(orderId: ID!, comment: String): Order
  cancelOrderTransfer(orderId: ID!, comment: String): Order
  transferOrder(id: ID!, memberId: ID!, note: String): Order
  transferOrderToAhamove(data: CreateOrderToAhamoveInput!): Order
  transferOrderToDriver(orderId: ID!, driverId: ID!, shipfee: Float, note: String): Order
  transferOrderToGoShip(data: CreateOrderToGoShipInput!): Order
  transferOrderToGoShipOnDemand(data: CreateOrderToGoShipOnDemandInput!): Order
  transferOrderToGrabExpress(data: CreateOrderToGrabExpressInput!): Order
  transferOrderToVNPost(orderId: ID!, data: TransferOrderToVNPostInput!): Order
  transferOrderToVNPostDraft(orderId: ID!, data: TransferOrderToVNPostInput!): Order
  updatePostApproveStatus(
    """Mã bài viết"""
    postId: ID!

    """Trạng thái duyệt PENDING,APPROVED,REJECTED,DRAFT"""
    status: String

    """Lý do từ chối, null nếu APPROVED"""
    reason: String
  ): String
  updatePostStatus(
    """Mã bài viết"""
    postId: ID!

    """Trạng thái duyệt PUBLIC,DRAFT"""
    status: String

    """Trạng thái của bài viết"""
    active: Boolean!
  ): Post
  qrCodeScan(id: ID!): QRCodeScanLog
  generateUploadUrl(contentType: String!): S3Url
  getPreSignedUploadImageURLFromS3(num: Int): [presignedImageURL]
  getPreSignedUploadVideoURLFromS3(num: Int): [presignedVideoURL]
  migrateS3(accessKey: String!, secretKey: String!): String
  serviceMarkHidden(id: String!, isHidden: Boolean!): Service
  cancelServiceReservation(id: ID!): ServiceReservation
  completeServiceReservation(id: ID!): ServiceReservation
  confirmServiceReservation(id: ID!): ServiceReservation
  generateDraftServiceReservation(data: GenerateDraftServiceReservationInput!): DraftReservationData
  generateServiceReservation(data: GenerateDraftServiceReservationInput!): ServiceReservation
  updateServiceReservationByGlobalCustomer(id: ID!, data: UpdateServiceReservationByGlobalCustomerInput!): ServiceReservation
  updateServiceReservationByMember(id: ID!, data: UpdateServiceReservationByMemberInput!): ServiceReservation
  distributionRequestApproval(requestId: ID!, approve: Boolean!): DistributionRequest
  commentOrder(orderId: ID!, message: String!, rating: Int!, tags: [ShopTagInput], images: [String]): String
  connectAhamove(data: AhamoveConfigInput!): ShopConfig
  disconnectAhamove: ShopConfig
  configVNPostTokenByUsernamePassword(username: String!, password: String!): ShopConfig
  connectCasso(apiKey: String!): ShopConfig
  disconnectCasso: ShopConfig
  cancelShopDomain: String
  connectManychat(apiKey: String!): ShopConfig
  disconnectManychat: ShopConfig
  generateZaloAuthLink(redirectUrl: String!): String
  connectZalo(code: String!): ShopConfig
  disconnectZalo: ShopConfig
  approveShopRegis(regisId: ID!, approve: Boolean!): ShopRegistration
  loginStaff(memberCode: String!, username: String!, password: String!, deviceId: String, deviceToken: String): LoginStaffData
  staffLogout(deviceId: String!): String
  staffUpdateMe(data: StaffUpdateMeInput!): Staff
  updateStaffPassword(staffId: ID!, password: String!, oldPassword: String): Staff
  extendSubscription(memberId: ID!, plan: String!): ShopSubscription
  considerSupportTicket(id: ID!, comment: SupportTicketCommentInput): SupportTicket
  assignSupportTicket(id: ID!, assignerId: ID!, comment: SupportTicketCommentInput): SupportTicket
  requestInfoSupportTicket(id: ID!, comment: SupportTicketCommentInput): SupportTicket
  submitInfoSupportTicket(id: ID!, comment: SupportTicketCommentInput): SupportTicket
  completeSupportTicket(id: ID!, comment: SupportTicketCommentInput): SupportTicket
  cancelSupportTicket(id: ID!, comment: SupportTicketCommentInput): SupportTicket
  loginWriter(email: String!, password: String!, deviceId: String, deviceToken: String): WriterLoginData
  resetWriterPasswordByEmailSendLink(
    """Email đăng nhập"""
    email: String!
  ): validAndMessage
  resetWriterPasswordByEmailCheckLink(
    """/writer/resetPassword/link"""
    resetPasswordLink: String!
  ): validAndMessage
  resetWriterPasswordByEmail(
    """/writer/resetPassword/link"""
    resetPasswordLink: String!

    """New password"""
    newPassword: String!
  ): validAndMessage
  updateWriterPassword(password: String!, oldPassword: String!): String
  updateWriterPasswordByAdmin(writerId: ID!, newPassword: String!): String
  updateWriterSelf(writerId: ID!, data: UpdateWriterSelfInput!): Writer
  writerUpdatePhoneNumber(idToken: String!): String
  markWriterNotificationSeen(id: ID!): WriterNotification
  syncYoutubeVideo: String
  assignYoutubeVideoGroup(videoId: ID!, groupId: ID!): String
  authZaloMiniApp(accessToken: String!, phoneAccessToken: String!): Mixed
  generateMacZaloMiniApp(dataMac: Mixed): String
  getLocationZalo(userAccessToken: String!, locationToken: String!): Mixed
  loginAnonymousByZaloMiniApp(userAccessToken: String!, phoneAccessToken: String!): String
  loginCustomerByAnonymousZaloMiniApp(shopCode: String!): CustomerLoginData
  loginCustomerByZaloMiniApp(userAccessToken: String!, phoneAccessToken: String!): CustomerLoginData
  zaloBroadcast(message: Mixed): String
}

input NextPayInput {
  paymentMethod: ENextPayPaymentMethod
  paymentType: ENextPayPaymentType
}

type Notification {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """
  Gửi tới MEMBER,STAFF,CUSTOMER,USER,GLOBAL_CUSTOMER,WRITER,EXPERT,DRIVER
  """
  target: String

  """Mã người dùng"""
  userId: ID

  """Mã chủ shop"""
  memberId: ID

  """Mã nhân viên"""
  staffId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã khách hàng sàn"""
  globalId: ID

  """Tiêu đề thông báo"""
  title: String

  """Nội dung thông báo"""
  body: String

  """
  Loại thông báo WEBSITE,MESSAGE,ORDER,INVENTORY_VOUCHER,SERVICE_CONTRACT,SERVICE_CONTRACT_TYPE_SESSION_LOG,PRE_BOOKING,PRODUCT,SUPPORT_TICKET,GLOBAL_COLL_REGIST,SHOP_AFFILIATE_REQUEST,SHOP_DISBURSEMENT_PERIOD,DISBURSEMENT_REQUEST,PRODUCT_SALES_BONUS_POLICY,INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY,DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY,PRODUCT_COMMISSION_POLICY,PROMOTION,COMMISSION_LOG,SHOP_VOUCHER_SHARING_POLICY_LOG,REFERRAL_COMMISSION_LOG,PRODUCT_SALES_BONUS_LOG,INDIVIDUAL_PRODUCT_SALES_BONUS_POLICY_LOG,DIRECT_SUBORDINATES_PRODUCT_SALES_BONUS_POLICY_LOG,SHOP_AFFILIATE_WALLET_TRANSACTION,SHOPPING_WALLET_TRANSACTION,HAPPY_BIRTHDAY,TASK,POST,OTHER
  """
  type: String

  """Đã xem"""
  seen: Boolean

  """Ngày xem"""
  seenAt: DateTime

  """Hình ảnh"""
  image: String

  """Ngày gửi"""
  sentAt: DateTime

  """Mã đơn hàng"""
  orderId: ID

  """Mã sản phẩm"""
  productId: ID

  """ID Kỳ giải ngân"""
  shopDisbursementPeriodId: ID

  """ID yêu cầu rút tiền"""
  disbursementRequestId: ID

  """ID Bài Đăng"""
  postId: ID
  shopPostId: ID
  serviceContractId: ID
  preBookingId: ID
  productCommissionPolicyId: ID
  productSalesBonusPolicyId: ID
  shopAffiliateProductCommissionPolicyId: ID
  shopAffiliateProductSalesBonusPolicyId: ID
  shopVoucherSharingPolicyLogId: ID
  shopVoucherSharingPolicyId: ID
  shopAffiliateRequestId: ID
  inventoryVoucherId: ID
  serviceContractTypeId: ID
  serviceContractTypeSessionLogId: ID
  minigameVoucherInfo: Mixed

  """Link website"""
  link: String

  """Mã yêu cầu hỗ trợ"""
  ticketId: ID

  """ID người đăng tin"""
  writerId: String

  """ID chuyên gia"""
  expertId: String
  user: User
  member: Member
  staff: Staff
  customer: Customer
  globalCustomer: GlobalCustomer
  order: Order
  product: Product
  ticket: SupportTicket
  writer: Writer
  expert: Expert
  driver: Driver
  post: Post
  shopPost: ShopPost

  """Mã câu hỏi liên quan đến thông báo"""
  questionId: String

  """Mã bình luận liên quan đến thông báo"""
  commentId: String

  """ID của người tạo tương tác"""
  interactorId: String

  """
  Loại người tạo tương tác MEMBER,STAFF,CUSTOMER,USER,GLOBAL_CUSTOMER,WRITER,EXPERT,DRIVER
  """
  interactorType: String

  """Nguời tương tác global customer"""
  interactorGlobalCustomer: GlobalCustomer

  """Người tương tác chuyên gia"""
  interactorExpert: Expert

  """ID của người chủ sỡ hữu vật thể tương tác"""
  interactWithId: String

  """
  Loại người chủ sỡ hữu vật thể tương tác MEMBER,STAFF,CUSTOMER,USER,GLOBAL_CUSTOMER,WRITER,EXPERT,DRIVER
  """
  interactWithType: String

  """Người được tương tác global customer"""
  interactWithGlobalCustomer: GlobalCustomer

  """Người được tương tác chuyên gia"""
  interactWithExpert: Expert

  """
  Kiểu tương tác (LIKE_QUESTION_OWNER,LIKE_COMMENT_OWNER,COMMENT_QUESTION_OWNER,COMMENT_QUESTION_OTHER,TRANSFER_ORDER_DRIVER,CANCEL_ORDER)
  """
  interactionActionType: String
  imageUrl: String
  redirectUrl: String
}

type NotificationPageData {
  data: [Notification]
  total: Int
  pagination: Pagination
}

type NotificationSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  scheduleType: ENotificationScheduleType
  memberId: ID
  title: String
  content: String
  imageUrl: String
  redirectUrl: String
  isActivated: Boolean
  lastTimeSent: DateTime
  sendingTime: DateTime
  receiverType: ENotificationReceiverType
  shopPostId: ID
  shopPost: ShopPost
  specificCustomerIds: [ID]
  specificCustomers: [Customer]
  specificShopAffiliateIds: [ID]
  shopAffiliates: [ShopAffiliate]
}

type NotificationSettingPageData {
  data: [NotificationSetting]
  total: Int
  pagination: Pagination
}

type NotificationSettingPushLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  amountReceiver: Int
  sentAt: DateTime
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  scheduleType: ENotificationScheduleType
  memberId: ID
  title: String
  content: String
  imageUrl: String
  redirectUrl: String
  isActivated: Boolean
  lastTimeSent: DateTime
  sendingTime: DateTime
  receiverType: ENotificationReceiverType
  shopPostId: ID
  shopPost: ShopPost
  specificCustomerIds: [ID]
  specificCustomers: [Customer]
  specificShopAffiliateIds: [ID]
  shopAffiliates: [ShopAffiliate]
}

type NotificationSettingPushLogPageData {
  data: [NotificationSettingPushLog]
  total: Int
  pagination: Pagination
}

type NotifyConfig {
  """đơn hàng chờ"""
  orderPending: String

  """huỷ đơn"""
  orderCanceled: String

  """đang làm món"""
  orderConfirmed: String

  """đơn hoàn thành"""
  orderCompleted: String

  """đơn giao thất bại"""
  orderFailure: String

  """đơn hàng chờ cho nhân viên"""
  orderPendingForStaff: String

  """huỷ đơn cho nhân viên"""
  orderCanceledForStaff: String

  """đang làm món cho nhân viên"""
  orderConfirmedForStaff: String

  """đơn hoàn thành cho nhân viên"""
  orderCompletedForStaff: String

  """đơn giao thất bại cho nhân viên"""
  orderFailureForStaff: String

  """tặng điểm thưởng"""
  orderRewardPoint: String

  """CTV đăng ký thành công"""
  colRegisSuccess: String

  """Bật thông báo ahamove"""
  ahamoveNotifyEnabled: Boolean
}

input NotifyConfigInput {
  """đơn hàng chờ"""
  orderPending: String

  """huỷ đơn"""
  orderCanceled: String

  """đang làm món"""
  orderConfirmed: String

  """đơn hoàn thành"""
  orderCompleted: String

  """đơn giao thất bại"""
  orderFailure: String

  """đơn hàng chờ cho nhân viên"""
  orderPendingForStaff: String

  """huỷ đơn cho nhân viên"""
  orderCanceledForStaff: String

  """đang làm món cho nhân viên"""
  orderConfirmedForStaff: String

  """đơn hoàn thành cho nhân viên"""
  orderCompletedForStaff: String

  """đơn giao thất bại cho nhân viên"""
  orderFailureForStaff: String

  """tặng điểm thưởng"""
  orderRewardPoint: String

  """CTV đăng ký thành công"""
  colRegisSuccess: String

  """Bật thông báo ahamove"""
  ahamoveNotifyEnabled: Boolean
}

type NotifySendLog {
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  owner: Owner

  """Số lượng khớp"""
  match: Int

  """Đã gửi"""
  sended: Int

  """Đã xem"""
  seen: Int

  """Đối tượng gửi ADMIN,SUPER_ADMIN,EDITOR"""
  targets: [String]
}

type OfferItem {
  """Mã sản phẩm"""
  productId: ID

  """Số lượng sản phẩm"""
  qty: Int

  """Ghi chú"""
  note: String
  product: Product
}

type OfferItemGroup {
  """Danh sách sản phẩm"""
  items: [OfferItem]

  """Đồng giá"""
  samePrice: Float
}

input OfferItemGroupInput {
  """Danh sách sản phẩm"""
  items: [OfferItemInput]

  """Đồng giá"""
  samePrice: Float
}

input OfferItemInput {
  """Mã sản phẩm"""
  productId: ID!

  """Số lượng sản phẩm"""
  qty: Int!

  """Ghi chú"""
  note: String
}

type OnboardingFeatureDisplay {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  agencyId: ID
  displayPosition: EFeatureDisplayPosition
  platform: EPlatform
  title: String
  iconUrl: String
  displayFeatures: [OnboardingFeatureDisplayFeature]
}

type OnboardingFeatureDisplayFeature {
  feature: EFeature
  index: Int
}

input OnboardingFeatureDisplayFeatureInput {
  feature: EFeature
  index: Int
}

input OnboardingFeatureDisplayInput {
  displayPosition: EFeatureDisplayPosition
  platform: EPlatform
  title: String
  iconUrl: String
  displayFeatures: [OnboardingFeatureDisplayFeatureInput]
}

type OnboardingFeatureDisplayPageData {
  data: [OnboardingFeatureDisplay]
  total: Int
  pagination: Pagination
}

type OperatingTime {
  """Ngày trong tuần"""
  day: Int

  """Khung thời gian"""
  timeFrames: Mixed

  """Trạng thái hoạt động OPEN,CLOSED,TIME_FRAME"""
  status: String
}

input OperatingTimeInput {
  """Ngày trong tuần"""
  day: Int

  """Khung thời gian"""
  timeFrames: Mixed

  """Trạng thái hoạt động OPEN,CLOSED,TIME_FRAME"""
  status: String
}

type Order {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã đơn hàng cha"""
  parentOrderId: String
  parentOrderCode: String

  """Số lượng đơn hàng con"""
  splitCount: Int

  """Mã đơn hàng"""
  code: String

  """Đơn Mobifone"""
  isPrimary: Boolean

  """Danh sách sản phẩm"""
  itemIds: [ID]

  """Thành tiền"""
  amount: Float

  """Tổng tiền hàng - chiết khẩu - khuyến mãi"""
  subtotal: Float

  """Tổng tiền topping"""
  toppingAmount: Float

  """Phương thức vận chuyển mà khách hàng chọn """
  customerShipMethod: EShipMethod

  """Dịch vụ vận chuyển mà khách hàng chọn"""
  customerShipServiceId: String

  """Tên dịch vụ vận chuyển mà khách hàng chọn"""
  customerShipServiceName: String

  """Tên đươn vị dịch vụ vận chuyển mà khách hàng chọn"""
  customerShipDeliveryName: String

  """Phương thức vận chuyển mà cửa hàng chọn """
  shopShipMethod: EShipMethod

  """Dịch vụ vận chuyển mà cửa hàng chọn"""
  shopShipServiceId: String

  """Tên dịch vụ vận chuyển mà cửa hàng chọn"""
  shopShipServiceName: String

  """Yêu cầu kèm theo của dịch vụ vận chuyển mà cửa hàng chọn"""
  shopShipRequestIds: [String]

  """Phương thức vận chuyển """
  shipMethod: EShipMethod

  """Dịch vụ vận chuyển"""
  shipServiceId: String

  """Tiền ship mà khách hàng chi trả"""
  shipfee: Float

  """Tiền ship thực thế do shop đặt dịch vụ vận chuyển"""
  shopShipFee: Float

  """Khoản cách ship"""
  shipDistance: Float

  """Thuế giá trị gia tăng"""
  valueAddedTaxAmount: Float
  hasValueAddedTax: Boolean

  """Giá trị gốc của sản phẩm cộng cả topping"""
  originSubTotal: Float

  """Số tiền giảm giá nhờ voucher"""
  voucherDiscount: Float

  """Số tiền giảm chiết khấu nhờ điểm thưởnh"""
  rewardPointDiscount: Float

  """Chiết khấu chính sách giá"""
  productPricePolicyDiscount: Float

  """Chiết khấu chính sách cấp bậc"""
  productAffiliateLevelDiscount: Float

  """Giảm giá"""
  discount: Float

  """Phương thức thanh toán """
  paymentMethod: EPaymentMethod

  """Ghi chú đơn hàng"""
  note: String

  """Tài xế, nhân viên ghi chú đơn hàng"""
  shopNote: String

  """Ghi chú làm món"""
  confirmNote: String

  """Ghi chú xác nhận chuyển khoản"""
  paymentConfirmNote: String

  """Số lượng sản phẩm"""
  itemCount: Int

  """Chủ shop bán"""
  sellerId: ID

  """Mã chủ shop bán"""
  sellerCode: String

  """Chủ shop bán"""
  sellerName: String

  """Chủ shop bán chéo"""
  fromMemberId: ID

  """Trạng thái """
  status: String
  customerShipDeliveryIcon: String
  customerShipServiceIcon: String

  """Khách hàng mua"""
  buyerId: ID

  """Tên khách hàng"""
  buyerName: String

  """Điện thoại khách hàng"""
  buyerPhone: String

  """Địa chỉ khách hàng"""
  buyerAddress: String

  """Tỉnh / thành"""
  buyerProvince: String

  """Quận / huyện"""
  buyerDistrict: String

  """Phường / xã"""
  buyerWard: String

  """Mã Tỉnh / thành"""
  buyerProvinceId: String

  """Mã Quận / huyện"""
  buyerDistrictId: String

  """Mã Phường / xã"""
  buyerWardId: String

  """Địa chỉ đầy đủ"""
  buyerFullAddress: String

  """Ghi chú địa chỉ"""
  buyerAddressNote: String

  """Khách hàng nhận """
  receiverId: String

  """Tên khách hàng nhận """
  receiverName: String

  """Điện thoại khách hàng nhận """
  receiverPhone: String

  """Địa chỉ khách hàng nhận """
  receiverAddress: String

  """Tỉnh / thành khách hàng nhận """
  receiverProvince: String

  """Quận / huyện khách hàng nhận """
  receiverDistrict: String

  """Phường / xã khách hàng nhận """
  receiverWard: String

  """Mã Tỉnh / thành khách hàng nhận """
  receiverProvinceId: String

  """Mã Quận / huyện khách hàng nhận """
  receiverDistrictId: String

  """Mã Phường / xã khách hàng nhận """
  receiverWardId: String

  """Địa chỉ đầy đủ của khách hàng nhận """
  receiverFullAddress: String

  """Ghi chú địa chỉ của khách hàng nhận"""
  receiverAddressNote: String

  """Loại của người đặt hàng"""
  ordererType: EOrdererType
  ordererStaffId: ID
  ordererStaff: Staff

  """Điểm thường người bán"""
  sellerBonusPoint: Float

  """Điểm thưởng người mua"""
  buyerBonusPoint: Float

  """Địa điểm nhận hàng"""
  addressStorehouseId: ID

  """Địa điểm nhận hàng"""
  addressDeliveryId: ID
  paymentMethodText: String
  shipMethodText: String
  statusText: String

  """Mã Cộng tác viên"""
  collaboratorId: ID

  """Là nội thành"""
  isUrbanDelivery: Boolean

  """Cửa hàng được chuyển đơn"""
  toMemberId: ID

  """Ghi chú chuyển đơn"""
  toMemberNote: String

  """Có chuyển kho không ?"""
  mustTransfer: Boolean
  latitude: Float
  longitude: Float
  items: [OrderItem]
  seller: Member
  fromMember: Member
  updatedByUser: User
  buyer: Customer
  deliveringMember: Member
  toMember: Member
  addressStorehouse: AddressStorehouse
  addressDelivery: AddressDelivery

  """Cộng tác viên"""
  collaborator: Collaborator

  """Thông tin vận đơn"""
  deliveryInfo: DeliveryInfo
  updatedByUserId: ID
  orderType: String
  orderTypeText: String

  """Phương thức nhận hàng """
  pickupMethod: EPickupMethod

  """Thời gian nhận hàng"""
  pickupTime: DateTime

  """Mã chi nhánh"""
  shopBranchId: String

  """Địa chỉ chi nhánh đang đặt"""
  shopBranchAddress: String
  shopBranch: ShopBranch

  """Lý do huỷ"""
  cancelReason: String

  """Ghim đơn"""
  pin: Boolean

  """Mã voucher"""
  voucherId: ID
  voucher: ShopVoucher

  """Chi tiết giảm giá"""
  discountDetail: String

  """Mã giảm giá"""
  promotionCode: String

  """Log giảm giá"""
  discountLogs: [Mixed]

  """Mã ưu đãi người dùng"""
  customerVoucherId: ID

  """Trạng thái thanh toán"""
  paymentStatus: String

  """Log thanh toán"""
  paymentLogs: [Mixed]

  """Số tiền đã thanh toán"""
  paymentFilledAmount: Float

  """Dữ liệu thanh toán kèm theo"""
  paymentMeta: Mixed
  paymentMetas: [Mixed]

  """Điểm Thưởng cho đơn hàng"""
  rewardPoint: Int

  """Sử dụng điểm thưởng"""
  useRewardPoint: Boolean

  """Điểm thường còn lại"""
  remainRewardPoint: Int

  """Số điểm đã sử dụng"""
  discountPoint: Int

  """Số điểm thưởng tối đa có thể sử dụng"""
  maxUseRewardPoint: Int

  """Nội dung đơn hàng"""
  itemText: String

  """Ma ban"""
  tableCode: String

  """Người dùng đã xác nhận chuyển khoản"""
  hasUserConfirmTransfer: Boolean
  unixTime: String
  mbQrCode: String
  totalProfit: Mixed
  productCommissionCost: Mixed
  napasRedirectUrl: String
  promotions: [Promotion]
  orderPromotions: [OrderPromotion]
  allowUserCancel: Boolean
  haveIssueInvoice: Boolean
  successRedirectUrl: String
  failRedirectUrl: String
  platform: EPlatform
  shopConfig: ShopConfigPublic
  supplierIds: [ID]
  suppliers: [Supplier]
  subOrders: [Order]
  tableId: ID
  tableName: String
  table: Table
  paymentConfirmTime: DateTime
  changeLogs: [OrderChangeLog]

  """Mã giới thiệu (SDT)"""
  referralCode: String

  """Thông tin hoa hồng"""
  referralData: ReferralData
  ahamoveTrackingLink: String
  commissionLogs: [CommissionLog]
  customerCommissionLogs: [CustomerCommissionLog]
  logs: [OrderLog]

  """Mã tài xế"""
  driverId: ID

  """Tên tài xế"""
  driverName: String

  """Điện thoại tài xế"""
  driverPhone: String

  """Biển số xe tài xế"""
  driverLicense: String
  commented: Boolean
}

type OrderBillConfig {
  externalContent: ExternalContentOrderBillConfig
}

input OrderBillConfigInput {
  externalContent: ExternalContentOrderBillConfigInput
}

type OrderChangeLog {
  role: String
  memberId: ID
  staffId: ID
  message: String
  createdAt: String
  extra: Mixed
}

type OrderConfig {
  orderBillConfig: OrderBillConfig

  """Cho phép huỷ"""
  allowCancel: Boolean

  """Bật giao hàng ahamove"""
  ahamoveEnabled: Boolean

  """Giao hàng nhanh bằng ahamove"""
  ahamoveFastForward: Boolean

  """Thời gian chuyển nhanh qua ahamove"""
  ahamoveFastForwardDelay: Int

  """Tính phí ship theo ahamove"""
  ahamoveShipFee: Boolean

  """Bỏ qua giỏ hàng"""
  skipCart: Boolean

  """Cho phép giao hàng"""
  allowDelivery: Boolean
  deliveryConfig: OrderDeliveryConfig
}

input OrderConfigInput {
  orderBillConfig: OrderBillConfigInput

  """Cho phép huỷ"""
  allowCancel: Boolean

  """Bỏ qua giỏ hàng"""
  skipCart: Boolean

  """Cho phép giao hàng"""
  allowDelivery: Boolean
  deliveryConfig: OrderDeliveryConfigInput
}

type OrderDeliveryConfig {
  internalDriverConfig: InternalDriverConfig
  isActivated: Boolean
  deliveryAddressConfig: DeliveryAddressConfig
}

input OrderDeliveryConfigInput {
  internalDriverConfig: InternalDriverConfigInput
  isActivated: Boolean
  deliveryAddressConfig: DeliveryAddressConfigInput
}

type OrderInformationCustomer {
  totalOrderCount: Int
  totalOrderCompletedCount: Int
  totalProductInOrderCount: Int
  totalVoucherUsedCount: Int
  onlinePaymentCount: Int
  totalOrderAmount: Mixed
  purchasePlatformStatistic: [AmountByPlatform]
}

type OrderInvoice {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  orderId: ID
  trackingCode: String
  orderCode: String
  order: Order
  serviceContractId: ID
  serviceContractCode: String
  serviceContract: ServiceContract
  paymentMethodName: String

  """ Loại hóa đơn, mặc định là ORDER_PRODUCT"""
  orderInvoiceType: EOrderInvoiceType
  memberId: ID
  customerId: ID
  customer: Customer

  """ ID gốc của Invoice theo đơn vị HDDT"""
  sourceInvoiceId: String

  """ Đơn vị HDDT"""
  sourceInvoiceType: ESourceInvoiceType

  """ Ký hiệu hóa đơn"""
  sourceSerialNo: String

  """ Số hóa đơn """
  sourceNumberNo: Int

  """ Mã số thuế của người bán"""
  taxCode: String

  """ Ngày phát hành hóa đơn"""
  invoiceIssuedDate: DateTime
  buyerName: String

  """ Mã cơ quan thuế, có thể dùng để lưu mã cơ quan thuế của người bán"""
  taxAuthorityCode: String

  """ Tổng tiền sau thuế"""
  totalAmount: Int

  """Tổng tiền chiết khấu"""
  discountAmount: Int

  """ Tổng tiền thuế GTGT"""
  vatAmount: Int

  """ Tổng tiền trước thuế"""
  totalAmountWithoutVat: Int

  """Trạng thái của hóa đơn"""
  status: EInvoiceStatus
  invoiceData: Invoice
}

type OrderInvoicePageData {
  data: [OrderInvoice]
  total: Int
  pagination: Pagination
}

type OrderItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã đơn hàng"""
  orderId: ID

  """Mã người bán"""
  sellerId: ID

  """Mã người mua"""
  buyerId: ID

  """Sản phẩm chính của Mobifone"""
  isPrimary: Boolean

  """Sản phẩm"""
  productId: ID

  """Tên sản phẩm"""
  productName: String

  """Giá bán"""
  basePrice: Float

  """Giá áp dụng trong đơn hàng này"""
  priceApply: Float

  """Số lượng"""
  qty: Int

  """Điểm thường người bán"""
  sellerBonusPoint: Float

  """Điểm thưởng người mua"""
  buyerBonusPoint: Float

  """Thành tiền"""
  amount: Float

  """Tổng tiền thuế giá trị gia tăng"""
  valueAddedTaxAmount: Float
  originAmountPerItem: Float
  originAmount: Float

  """Thuế giá trị gia tăng"""
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode

  """Đơn vị tính"""
  unit: String

  """Ghi chú"""
  note: String

  """Điểm thưởng"""
  rewardPoint: Int

  """Tổng tiền thuộc tính kèm theo"""
  productAttributeElementAmount: Mixed

  """Mã bảng giá"""
  pricePolicyId: ID

  """Tên bảng giá"""
  ppName: String

  """Loại điều chỉnh"""
  ppAdjType: String

  """Đơn vị điều chỉnh"""
  ppAdjUnit: String

  """Giá trị điều chỉnh"""
  ppAdjValue: Float

  """Giá điều chỉnh"""
  ppAdjAmount: Float

  """Giá gốc"""
  ppOriginalPrice: Float
  totalAmountPerItem: Float

  """Thông tin sản phẩm trong kho chi nhánh"""
  warehouseProduct: WarehouseProduct

  """Thông tin sản phẩm trong kho"""
  product: Product

  """ID của chính sách giá áp dụng"""
  productPricePolicyId: ID

  """Giá giảm bởi chính sách"""
  productPricePolicyDiscount: Float
  productAffiliateLevelDiscount: Float

  """Phần tử thuộc tính"""
  productAttributeElements: [OrderItemProductAttributeElement]

  """Topping kèm theo"""
  toppings: [OrderItemTopping]
}

input OrderItemInput {
  productId: ID
  quantity: Int!
  basePrice: Mixed
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  note: String
  toppings: [OrderItemToppingInput]
  productAttributeElements: [OrderItemProductAttributeElementInput]
  pricePolicyId: ID
  productImageUrl: String
  productName: String
  categoryIds: [ID]
  unitId: ID
  supplierId: ID
}

type OrderItemPageData {
  data: [OrderItem]
  total: Int
  pagination: Pagination
}

type OrderItemProductAttributeElement {
  """Id phần tử thuộc tính"""
  productAttributeElementId: ID

  """Tên phần tử thuộc tính"""
  productAttributeElementName: String

  """Tên phần tử thuộc tính"""
  productAttributeElementPrice: Float
  productAttributeElementCode: String
  productAttributeElementUnit: String

  """Id phần tử thuộc tính"""
  productAttributeId: ID

  """Tên phần tử thuộc tính"""
  productAttributeName: String
  productAttributeCode: String
  productId: String
}

input OrderItemProductAttributeElementInput {
  """Id phần tử thuộc tính"""
  productAttributeElementId: ID!
}

type OrderItemTopping {
  """Mã topping"""
  toppingId: ID

  """Tên topping"""
  toppingName: String

  """Tên Tuỳ chọn"""
  optionName: String

  """Giá"""
  price: Float
}

input OrderItemToppingInput {
  """Mã topping"""
  toppingId: ID

  """Tên topping"""
  toppingName: String

  """Tên Tuỳ chọn"""
  optionName: String

  """Giá"""
  price: Float
}

type OrderLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  orderId: ID
  type: String
  memberId: ID
  toMemberId: ID
  customerId: ID
  note: String
  statusText: String
  order: Order
  member: Member
  toMember: Member
  customer: Customer
}

type OrderLogPageData {
  data: [OrderLog]
  total: Int
  pagination: Pagination
}

type OrderPageData {
  data: [Order]
  total: Int
  pagination: Pagination
  error: Mixed
}

type OrderPromotion {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  orderId: String
  promotionId: String
  receivedOfferProduct: [ReceivedOfferProduct]
  order: Order!
  promotion: Promotion!
}

type OrderReport {
  summary: Mixed
  topProducts: Mixed
  topShops: Mixed
  topRevenue: Mixed
  chart: Mixed
}

type OrderSplitConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID

  """
   Cho phép tự động tách đơn khi khách đặt hàng - true  = tự động chia sub-orders
  ngay sau khi đặt - false = giữ nguyên 1 đơn, nhân viên có thể tách thủ công
  """
  isAutoSplitEnabled: Boolean

  """
   Tự động tính lại phí ship cho từng sub-order và hiển thị tổng - true  = UI sẽ
  hiển thị tổng phí = tổng phí từ mỗi chi nhánh→khách - false = phí ship giữ
  nguyên như trên đơn gốc
  """
  isShippingFeeAutoCalculatedForCustomer: Boolean

  """ Chi nhánh mặc định để gom các sản phẩm **không có nhà cung cấp**"""
  fallbackShopBranchId: ID

  """
   Danh sách ánh xạ nhà cung → chi nhánh xử lý Ví dụ:   [     { supplierId:
  ObjectId('...ELPICS'), branchId: ObjectId('...ChiNhanhQ1') },     {
  supplierId: ObjectId('...AAA'),    branchId: ObjectId('...ThuDuc') },   ]
  """
  supplierShopBranchMaps: [OrderSplitSupplierShopBranchMapConfig]
}

type OrderSplitConfigPageData {
  data: [OrderSplitConfig]
  total: Int
  pagination: Pagination
}

type OrderSplitSupplierShopBranchMapConfig {
  supplierId: ID
  supplier: Supplier
  shopBranchId: ID
  shopBranch: ShopBranch
}

input OrderSplitSupplierShopBranchMapConfigInput {
  supplierId: ID
  shopBranchId: ID
}

type OrderStats {
  count: Int
  sum: Float
}

type OrderStatusText {
  status: String
  value: String
}

type OverviewCollaboratorsReport {
  commission: Float
  collaboratorCount: Int
}

type OverviewCommission {
  id: String
  updatedAt: DateTime

  """Mã đơn hàng"""
  code: String

  """Đơn Mobifone"""
  isPrimary: Boolean

  """Danh sách sản phẩm"""
  itemIds: [ID]

  """Thành tiền"""
  amount: Float

  """Tổng tiền hàng"""
  subtotal: Float

  """
  Phương thức vận chuyển POST,VNPOST,NONE,AHAMOVE,DRIVER,GRAB_EXPRESS,GO_SHIP,GO_SHIP_ON_DEMAND
  """
  shipMethod: String

  """Tiền ship"""
  shipfee: Float

  """
  Phương thức thanh toán NONE,COD,BANK_TRANSFER,DEBT,MBBANK,SHOPPING_WALLET,ONLINE_QR,NEXT_PAY_EDC_CARD,NEXT_PAY_EDC_QR,NEXT_PAY_EDC_INSTALLMENT_CARD,NEXT_PAY_ONLINE_QR,NEXT_PAY_ONLINE_LINK,NEXT_PAY_ONLINE_INSTALLMENT_LINK
  """
  paymentMethod: String

  """Ghi chú đơn hàng"""
  note: String

  """Số lượng sản phẩm"""
  itemCount: Int

  """Chủ shop bán"""
  sellerId: ID

  """Chủ shop bán chéo"""
  fromMemberId: ID

  """
  Trạng thái IN_PROCESSING|PENDING|CONFIRMED|PAYMENT_CONFIRMED|SORT_ORDER|PACKAGED|COMPLETED|CANCELED|RETURNED|FAILURE|DELIVERED|DELIVERY_PENDING|DELIVERY_PICKED_UP|DELIVERING|DELIVERY_SUCCESS|DELIVERY_RETURNING|DELIVERY_FAIL|DELIVERY_CANCELED|PARTIALLY_CONFIRMED|PARTIALLY_SORT_ORDER|PARTIALLY_PACKAGED|PARTIALLY_DELIVERY_PENDING|PARTIALLY_DELIVERING|PARTIALLY_DELIVERY_SUCCESS|PARTIALLY_COMPLETED
  """
  status: String

  """Hoa hồng VNPOST"""
  commission0: Float

  """Hoa hồng điểm bán"""
  commission1: Float

  """Hoa hồng giới thiệu"""
  commission2: Float

  """Hoa hồng kho"""
  commission3: Float

  """Khách hàng mua"""
  buyerId: ID

  """Tên khách hàng"""
  buyerName: String

  """Điện thoại khách hàng"""
  buyerPhone: String

  """Địa chỉ khách hàng"""
  buyerAddress: String

  """Tỉnh / thành"""
  buyerProvince: String

  """Quận / huyện"""
  buyerDistrict: String

  """Phường / xã"""
  buyerWard: String

  """Mã Tỉnh / thành"""
  buyerProvinceId: String

  """Mã Quận / huyện"""
  buyerDistrictId: String

  """Mã Phường / xã"""
  buyerWardId: String

  """Điểm thường người bán"""
  sellerBonusPoint: Float

  """Điểm thưởng người mua"""
  buyerBonusPoint: Float

  """Địa điểm nhận hàng"""
  addressStorehouseId: ID

  """Địa điểm nhận hàng"""
  addressDeliveryId: ID
  paymentMethodText: String
  shipMethodText: String
  statusText: String

  """Mã Cộng tác viên"""
  collaboratorId: ID

  """Là nội thành"""
  isUrbanDelivery: Boolean

  """Cửa hàng được chuyển đơn"""
  toMemberId: ID

  """Ghi chú chuyển đơn"""
  toMemberNote: String

  """Có chuyển kho không ?"""
  mustTransfer: Boolean
  latitude: Float
  longitude: Float
  items: [OrderItem]
  orderLogIds: [ID]
  orderLogs: [OrderLog]
  seller: Member
  fromMember: Member
  updatedByUser: User
  buyer: Customer
  deliveringMember: Member
  toMember: Member
  addressStorehouse: AddressStorehouse
  addressDelivery: AddressDelivery

  """Cộng tác viên"""
  collaborator: Collaborator

  """Thông tin vận đơn"""
  deliveryInfo: DeliveryInfo

  """Đơn trễ"""
  isLate: Boolean

  """Ngày tạo đơn"""
  createdAt: DateTime

  """Ngày chốt đơn"""
  finishedAt: DateTime

  """Hoa hồng"""
  commission: Float

  """Chi tiết hoa hồng điểm bán"""
  commission1Details: CommissionDetail

  """Chi tiết hoa hồng CTV"""
  commission2Details: CommissionDetail

  """Chi tiết hoa hồng giao hàng"""
  commission3Details: CommissionDetail
}

type OverviewCommissionPageData {
  data: [OverviewCommission]
  total: Int
  pagination: Pagination
}

type OverviewCommissionReport {
  """Đơn hoàn thành"""
  completeOrder: Int

  """Đơn chưa hoàn thành"""
  uncompleteOrder: Int

  """Tổng hoa hồng thực nhận"""
  totalCommission: Float

  """Tổng hoa hồng dự kiến"""
  totalUnCompletedCommission: Float

  """Hoa hồng điểm bán"""
  commission1: Float

  """Hoa hồng giới thiệu"""
  commission2: Float

  """Hoa hồng CTV"""
  commission21: Float

  """Hoa hồng giao hàng"""
  commission3: Float

  """Hoa hồng cửa hàng dự kiến"""
  unCompletedCommission1: Float

  """Hoa hồng điểm bán dự kiến"""
  unCompletedcommission2: Float

  """Hoa hồng CTV dự kiến"""
  unCompletedcommission21: Float

  """Hoa hồng giao hàng dự kiến"""
  unCompletedcommission3: Float
}

type OverviewMediaCollaboratorStats {
  shareCount: Int
  likeCount: Int
  commentCount: Int
  collaboratorCount: Int
  clickCount: Int
}

type OverviewMediaProductStats {
  clickCount: Int
  shareCount: Int
  likeCount: Int
  commentCount: Int
  order: Int
  completeOrder: Int
  uncompleteOrder: Int
  completeProductQty: Int
  uncompleteProductQty: Int
}

type OverviewOrder {
  id: String
  updatedAt: DateTime

  """Mã đơn hàng"""
  code: String

  """Đơn Mobifone"""
  isPrimary: Boolean

  """Danh sách sản phẩm"""
  itemIds: [ID]

  """Thành tiền"""
  amount: Float

  """Tổng tiền hàng"""
  subtotal: Float

  """
  Phương thức vận chuyển POST,VNPOST,NONE,AHAMOVE,DRIVER,GRAB_EXPRESS,GO_SHIP,GO_SHIP_ON_DEMAND
  """
  shipMethod: String

  """Tiền ship"""
  shipfee: Float

  """
  Phương thức thanh toán NONE,COD,BANK_TRANSFER,DEBT,MBBANK,SHOPPING_WALLET,ONLINE_QR,NEXT_PAY_EDC_CARD,NEXT_PAY_EDC_QR,NEXT_PAY_EDC_INSTALLMENT_CARD,NEXT_PAY_ONLINE_QR,NEXT_PAY_ONLINE_LINK,NEXT_PAY_ONLINE_INSTALLMENT_LINK
  """
  paymentMethod: String

  """Ghi chú đơn hàng"""
  note: String

  """Số lượng sản phẩm"""
  itemCount: Int

  """Chủ shop bán"""
  sellerId: ID

  """Chủ shop bán chéo"""
  fromMemberId: ID

  """
  Trạng thái IN_PROCESSING|PENDING|CONFIRMED|PAYMENT_CONFIRMED|SORT_ORDER|PACKAGED|COMPLETED|CANCELED|RETURNED|FAILURE|DELIVERED|DELIVERY_PENDING|DELIVERY_PICKED_UP|DELIVERING|DELIVERY_SUCCESS|DELIVERY_RETURNING|DELIVERY_FAIL|DELIVERY_CANCELED|PARTIALLY_CONFIRMED|PARTIALLY_SORT_ORDER|PARTIALLY_PACKAGED|PARTIALLY_DELIVERY_PENDING|PARTIALLY_DELIVERING|PARTIALLY_DELIVERY_SUCCESS|PARTIALLY_COMPLETED
  """
  status: String

  """Hoa hồng VNPOST"""
  commission0: Float

  """Hoa hồng điểm bán"""
  commission1: Float

  """Hoa hồng giới thiệu"""
  commission2: Float

  """Hoa hồng kho"""
  commission3: Float

  """Khách hàng mua"""
  buyerId: ID

  """Tên khách hàng"""
  buyerName: String

  """Điện thoại khách hàng"""
  buyerPhone: String

  """Địa chỉ khách hàng"""
  buyerAddress: String

  """Tỉnh / thành"""
  buyerProvince: String

  """Quận / huyện"""
  buyerDistrict: String

  """Phường / xã"""
  buyerWard: String

  """Mã Tỉnh / thành"""
  buyerProvinceId: String

  """Mã Quận / huyện"""
  buyerDistrictId: String

  """Mã Phường / xã"""
  buyerWardId: String

  """Điểm thường người bán"""
  sellerBonusPoint: Float

  """Điểm thưởng người mua"""
  buyerBonusPoint: Float

  """Địa điểm nhận hàng"""
  addressStorehouseId: ID

  """Địa điểm nhận hàng"""
  addressDeliveryId: ID
  paymentMethodText: String
  shipMethodText: String
  statusText: String

  """Mã Cộng tác viên"""
  collaboratorId: ID

  """Là nội thành"""
  isUrbanDelivery: Boolean

  """Cửa hàng được chuyển đơn"""
  toMemberId: ID

  """Ghi chú chuyển đơn"""
  toMemberNote: String

  """Có chuyển kho không ?"""
  mustTransfer: Boolean
  latitude: Float
  longitude: Float
  items: [OrderItem]
  orderLogIds: [ID]
  orderLogs: [OrderLog]
  seller: Member
  fromMember: Member
  updatedByUser: User
  buyer: Customer
  deliveringMember: Member
  toMember: Member
  addressStorehouse: AddressStorehouse
  addressDelivery: AddressDelivery

  """Cộng tác viên"""
  collaborator: Collaborator

  """Thông tin vận đơn"""
  deliveryInfo: DeliveryInfo

  """Đơn trễ"""
  isLate: Boolean

  """Ngày tạo đơn"""
  createdAt: DateTime

  """Ngày chốt đơn"""
  finishedAt: DateTime

  """Hoa hồng"""
  commission: Float
}

type OverviewOrderPageData {
  data: [OverviewOrder]
  total: Int
  pagination: Pagination
}

type OverviewOrdersReport {
  allOrders: OrderStats
  pendingOrders: OrderStats
  confirmedOrders: OrderStats
  deliveringOrders: OrderStats
  completedOrders: OrderStats
  failureOrders: OrderStats
  canceledOrders: OrderStats
}

type OverviewPost {
  id: String

  """Mã cửa hàng"""
  code: String

  """Hình Fanpage"""
  fanpageImage: String

  """Tên cửa hàng"""
  shopName: String

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Doanh thu"""
  income: Float

  """Hoa hồng"""
  commission: Float

  """Lần đăng nhập gần nhất"""
  lastLoginDate: DateTime
  memberStatistics(fromDate: String, toDate: String): MemberStatistics
  collaboratorStats(fromDate: String, toDate: String): CollaboratorStats
  customerStats(fromDate: String, toDate: String): CustomerStats
}

type OverviewPostPageData {
  data: [OverviewPost]
  total: Int
  pagination: Pagination
}

type OverviewPostsReport {
  """Tổng doanh thu"""
  totalIncome: Float

  """Tổng số CTV"""
  totalCollaboratorsCount: Int

  """Số lượng CTV là khách hàng"""
  collaboratorsAsCustomerCount: Int

  """Tổng hoa hồng đã nhận"""
  totalRealCommission: Float

  """Tổng số cửa hàng"""
  totalMembersCount: Int

  """Tổng đơn hàng"""
  totalOrdersCount: Int
}

type OverviewProduct {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã sản phẩm"""
  code: String

  """Tên sản phẩm"""
  name: String

  """Sản phẩm chính"""
  isPrimary: Boolean

  """Gía bán"""
  basePrice: Float

  """Mô tả ngắn"""
  subtitle: String

  """Giới thiệu sản phẩm"""
  intro: String

  """Hình ảnh đại diện"""
  image: String

  """Hoa hồng VNPOST"""
  commission0: Float

  """Hoa hồng điểm bán"""
  commission1: Float

  """Hoa hồng cộng tác viên"""
  commission2: Float

  """Hoa hồng kho"""
  commission3: Float

  """Hoa hồng CHO ĐIỂM BÁN"""
  baseCommission: Float

  """Thưởng cho điểm bán"""
  enabledMemberBonus: Boolean

  """Thưởng cho khách hàng"""
  enabledCustomerBonus: Boolean

  """Hệ số thưởng điểm bán"""
  memberBonusFactor: Int

  """Hệ số thưởng khách hàng"""
  customerBonusFactor: Int

  """Danh mục sản phẩm"""
  categoryId: ID

  """Độ ưu tiên"""
  priority: Int

  """Mở bán"""
  allowSale: Boolean

  """Mã thành viên quản lý sản phẩm"""
  memberId: ID

  """Hết hàng"""
  outOfStock: Boolean

  """Chiều rộng"""
  width: Int

  """Chiều dài"""
  length: Int

  """Chiều cao"""
  height: Int

  """Cân nặng"""
  weight: Int

  """Thống kê Sản phẩm"""
  productStats(fromDate: String, toDate: String, sellerIds: [ID], branchId: ID): ProductStats
  category: Category
}

type OverviewProductPageData {
  data: [OverviewProduct]
  total: Int
  pagination: Pagination
}

type OverviewProductReport {
  """Top 5 sản phẩm đựợc mua nhiều nhất"""
  mostInterestedProducts: [TopProduct]

  """Top 5 sản phẩm doanh thu nhiều nhất"""
  mostIncomeProducts: [TopProduct]

  """Top 5 sản phẩm hoa hồng nhiều nhất"""
  mostCommissionProducts: [TopProduct]

  """Top 5 sản phẩm được xem nhiều nhất"""
  mostViewProducts: [TopProduct]

  """Top 5 sản phẩm được share nhiều nhất"""
  mostSharingProducts: [TopProduct]
}

type Owner {
  """Mã người dùng"""
  id: ID

  """Tên"""
  name: String

  """Email"""
  email: String

  """Điện thoại"""
  phone: String

  """Vai trò"""
  role: String
  profile: User
}

type PackageFeature {
  name: String
}

input PackageFeatureInput {
  name: String!
}

type PackageSubscription {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  name: String
  imageUrl: String
  description: String
  newPrice: Int
  renewalPrice: Int
  durationAmount: Int
  durationUnit: EDurationUnitPackageSubscription
}

type PackageSubscriptionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  agencyId: ID
  memberId: ID
  member: Member
  isFreeTier: Boolean
  type: EPackageSubscriptionLogType
  price: Mixed
  quantity: Int
  totalPrice: Mixed
  packageSubscriptionId: ID
  packageSubscriptionName: String
  packageSubscriptionImageUrl: String
  packageSubscriptionDescription: String
  packageSubscriptionDiscountAmount: Mixed
  packageSubscriptionDiscountPercentage: Mixed
  packageSubscriptionDiscountDurationAmount: Int
  packageSubscriptionDiscountDurationUnit: EDurationUnitPackageSubscription
  startAt: DateTime
  expireAt: DateTime
}

type PackageSubscriptionLogPageData {
  data: [PackageSubscriptionLog]
  total: Int
  pagination: Pagination
}

type PackageSubscriptionPageData {
  data: [PackageSubscription]
  total: Int
  pagination: Pagination
}

type Pagination {
  limit: Mixed
  offset: Int
  page: Int
  total: Int
}

type Payment {
  """Trạng thái thanh toán"""
  status: String

  """Phương thức thanh toán"""
  method: String

  """Đã thanh toán"""
  filledAmount: Float

  """Dữ liệu kèm theo"""
  meta: Mixed

  """Lịch sử thanh toán"""
  logs: [Mixed]
}

input PaymentAgencyMemberBillInput {
  agencyMemberBillId: ID!
  paymentMethod: EAgencyMemberBillPaymentMethod!
}

type PaymentHistory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  member: Member
  customerId: ID
  customer: Customer
  paymentAmount: Mixed
  paymentDate: DateTime
  paymentType: EPaymentHistoryType
  paymentMethod: EPaymentMethod
  orderId: ID
  order: Order
  orderCode: String
  serviceContractId: ID
  serviceContract: ServiceContract
  serviceContractCode: String
  shopAffiliateRequestId: ID
  shopAffiliateRequest: ShopAffiliateRequest
}

type PaymentHistoryPageData {
  data: [PaymentHistory]
  total: Int
  pagination: Pagination
}

type PaymentLogMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  invoiceCode: String
  isActive: Boolean
  applicationId: String
  merchantId: String
  subscriptionName: String
  subscriptionPrice: Mixed
  subscriptionDurationOfDay: Int
  mbBankAccountNameReceive: String
  mbBankAccountNumberReceive: String
  startSubscriptionDate: DateTime
  endSubscriptionDate: DateTime
  status: EPaymentLogMinigameStatus
  paymentStatus: EPaymentStatusMinigame
  paymentMethod: EPaymentLogMinigamePaymentMethod
  subscriptionId: String
  discount: Int
  merchant: MerchantMinigame
}

type PaymentLogMinigamePageData {
  data: [PaymentLogMinigame]
  total: Int
  pagination: Pagination
}

type PaymentMeta {
  paymentType: EPaymentMetaType
  paymentMethod: EPaymentMethod
  paymentId: String
  paymentUrl: String
  paymentQrCode: String
  paymentAmount: Mixed
  paymentTime: DateTime
  expiredAt: DateTime
  paymentError: String
  description: String
  extra: Mixed
  redirectSuccessUrl: String
  redirectFailUrl: String
}

type PaymentMethodData {
  label: String
  value: String
  balanceAvailable: Mixed
}

input PaymentOrderInput {
  orderId: ID!
  paymentMethod: EPaymentMethod!
}

type PaymentRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  customerId: ID
  memberId: ID
  agencyId: ID
  totalAmount: Mixed
  paymentMetaType: String
  paymentMethod: EPaymentMethod
  paymentType: String
  paymentStatus: String
  currency: String
  gateway: EPaymentGateway
  gatewayMerchantId: String
  expiresAt: DateTime
  paymentedAt: DateTime
  paymentUrl: String
  paymentQrContent: String
  orderId: ID
  serviceContractId: ID
  agencyMemberBillId: ID
  invoiceElectronicContractId: ID
  signatureRegistrationRequestId: ID
}

type PaymentRequestPageData {
  data: [PaymentRequest]
  total: Int
  pagination: Pagination
}

type PeriodCommissionAllocation {
  period: Int
  percent: Float
}

input PeriodCommissionAllocationInput {
  period: Int
  percent: Float
}

type PetroCard {
  id: String
  orderCode: String
  cardIdentifier: String
  issuedDate: DateTime
  faceValue: Mixed
  cardTermMonths: Int
  usagePeriodMonths: Int
  creditLimit: Mixed
  customerName: String
  phoneNumber: String
  address: String
  cardValidFrom: DateTime
  distributionPartner: String
  trackingCode: String
}

type PetroCardPageData {
  data: [PetroCard]
  total: Int
  pagination: Pagination
}

type PetroCardTransaction {
  petroCardId: ID
  cardIdentifier: String
  transactionDate: DateTime
  transactionAmount: Mixed
  transactionContent: String
}

type PetroCardTransactionPageData {
  data: [PetroCardTransaction]
  total: Int
  pagination: Pagination
}

type Place {
  """Tỉnh / thành"""
  province: String

  """Mã Tỉnh / thành"""
  provinceId: String

  """Quận / huyện"""
  district: String

  """Mã quận / huyện"""
  districtId: String

  """Phường / xã"""
  ward: String

  """Mã phường / xã"""
  wardId: String

  """Tên đường"""
  street: String
  houseNumber: String

  """Toạ độ"""
  location: Mixed

  """Ghi chú"""
  note: String
}

input PlaceInput {
  """Tỉnh / thành"""
  province: String

  """Mã Tỉnh / thành"""
  provinceId: String

  """Quận / huyện"""
  district: String

  """Mã quận / huyện"""
  districtId: String

  """Phường / xã"""
  ward: String

  """Mã phường / xã"""
  wardId: String

  """Tên đường"""
  street: String
  houseNumber: String

  """Toạ độ"""
  location: Mixed

  """Ghi chú"""
  note: String
}

type Plant {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên loại cây"""
  name: String

  """Hình ảnh loại cây"""
  image: String
}

type PlantPageData {
  data: [Plant]
  total: Int
  pagination: Pagination
}

type PlatformUrlConfig {
  key: String
  value: String
}

input PlatformUrlConfigInput {
  key: String
  value: String
}

type Player {
  id: String
  name: String
  phone: String
  email: String
  birthday: DateTime
}

type PlayerInApplicationDetailMinigame {
  player: PlayerInApplicationMinigame
  merchants: [MerchantMinigame]
}

type PlayerInApplicationMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  name: String
  phone: String
  email: String
  birthday: String
  address: String
  psid: String
  nameFacebook: String
  totalJoinedMinigames: Int
  totalRewards: Int
  playerId: String
}

type PlayerInApplicationMinigamePageData {
  data: [PlayerInApplicationMinigame]
  total: Int
  pagination: Pagination
}

type PlayerInMerchantMinigame {
  phone: String
  name: String
  player: PlayerMinigame
  joinedMinigames: [JoinedMinigame]
  totalJoinedMinigames: Int
  totalRewards: Int
  latestPlay: String
  psid: Mixed
  nameFacebook: String
}

type PlayerInMerchantMinigamePageData {
  data: [PlayerInMerchantMinigame]
  total: Int
  pagination: Pagination
}

type PlayerMinigame {
  id: String
  createdAt: String
  updatedAt: String
  deletedAt: String
  isActive: Boolean
  name: String
  phone: String
  email: String
  birthday: String
  address: String
  psid: String
  nameFacebook: String
  totalJoinedMinigames: Int
  totalRewards: Int
}

type PlayerPlayGameLogMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  minigameId: String
  applicationId: String
  merchantId: String
  playerId: String
  player: PlayerMinigame
  minigame: Minigame
  minigameRewardId: String
  minigameReward: MinigameReward
  createdAtStart: DateTime
  createdAtEnd: DateTime
  giveRewardTime: DateTime
  giveRewardTimeStart: DateTime
  giveRewardTimeEnd: DateTime
  voucherCode: String
  voucherTotalUsage: Int
  voucherCurrentUsage: Int
  confirmMerchantStaffId: String
  confirmMerchantStaffName: String
  confirmMerchantStaffPhone: String
}

type PlayerPlayGameLogMinigamePageData {
  data: [PlayerPlayGameLogMinigame]
  total: Int
  pagination: Pagination
}

type PlayerTurnLogMinigame {
  id: String
  createdAt: String
  updatedAt: String
  deletedAt: String
  isActive: Boolean
  applicationId: String
  merchantId: String
  minigameId: String
  playerId: String
  psid: Mixed
  turnAmount: Int
}

type PlayerTurnMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  minigameId: String
  playerId: String
  totalTurn: Int
  psid: String
  isFirstTimeReceiveTurnWithMMixedChat: Boolean
}

type PlayMinigameLog {
  id: String
  createdAt: DateTime
  status: Boolean
  giveRewardTime: String
  player: Player
  minigameReward: MinigameReward
  voucherCode: String
}

type PlayMinigameLogPageData {
  data: [PlayMinigameLog]
  total: Int
  pagination: Pagination
}

type PlayMinigameResult {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  merchantId: String
  minigameId: String
  type: String
  isWinningReward: Boolean
  topUpAmount: Int
  turnNumber: Int
  content: String
  backgroundColor: String
  image: String
  previewImage: String
  totalRewardCount: Int
  rewardedCount: Int
  winningRate: Mixed
  textColor: String
  index: Int
  isShowQR: Boolean
  isShowPopup: Boolean
  voucherGroupId: String
  voucherGroup: VoucherGroupMinigame
  isPlayerLimited: Boolean
  playerRewardLimit: Mixed
  isDailyPlayerLimited: Boolean
  dailyPlayerRewardLimit: Mixed
  isCurrentlyInMinigame: Boolean
  shouldUseBackgroundRewardImage: Mixed
  backgroundRewardImageUrl: Mixed
  backgroundRewardColor: Mixed
  titleReward: Mixed
  order: Int
  voucherCode: String
  voucherCreatedAt: DateTime
  voucherEndOfDate: DateTime
  voucherId: String
  isOldReward: Boolean
  countryCode: String
  name: String
}

type PolicyJoined {
  totalCommissionPolicyJoinedCount: Int
  totalProductSalesPolicyJoinedCount: Int
  totalProductSalesPolicyAdvancedJoinedCount: Int
  totalPromotionPolicyJoinedCount: Int
  totalReferralCommissionPolicyJoinedCount: Int
  totalPricePolicyJoinedCount: Int
}

type Popup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên gợi nhớ"""
  name: String!

  """Ngày bắt đầu"""
  startDate: DateTime!

  """Ngày kết thúc"""
  endDate: DateTime!

  """Hình ảnh"""
  image: String!

  """Hình ảnh dành cho mobile"""
  imageForMobile: String

  """Hình ảnh dành cho webapp"""
  imageForWebApp: String

  """Hình ảnh dành cho zaloMiniApp"""
  imageZaloMiniApp: String

  """Số lần hiển thị"""
  displayCount: Int!

  """Đường dẫn"""
  url: String
  memberId: String
  agencyId: String
  ownerType: ERole
  targetType: ERole
  isActivated: Boolean
}

type PopUpDisplayCount {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type PopUpDisplayCountPageData {
  data: [PopUpDisplayCount]
  total: Int
  pagination: Pagination
}

type PopupPageData {
  data: [Popup]!
  total: Int!
  pagination: Pagination!
}

type Position {
  id: String

  """Tên chúc vụ"""
  name: String
  createdAt: DateTime
  updatedAt: DateTime
}

type PositionPageData {
  data: [Position]
  total: Int
  pagination: Pagination
}

type Post {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime

  """Tiêu đề"""
  title: String

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Số lượt view"""
  view: Int

  """Danh sách chủ đề"""
  topicIds: [ID]

  """Chủ đề"""
  topicId: ID

  """Trạng thái duyệt PENDING,APPROVED,REJECTED,DRAFT"""
  approveStatus: String

  """Ngày cập nhật duyệt"""
  approveUpdatedAt: DateTime

  """Kích hoạt hiển thị"""
  active: Boolean

  """date of post time"""
  postedAt: DateTime

  """source url of post"""
  source: String

  """Mã khu vực"""
  areaId: String

  """Khu vực"""
  area: Area

  """Người sở hữu"""
  owner: Owner
  tags: [PostTag]
  topic: Topic
  topics: [Topic]
  seen: Boolean

  """Mã nhóm người viết"""
  writerGroupId: String
  writerGroup: WriterGroup
}

type PostPageData {
  data: [Post]
  total: Int
  pagination: Pagination
}

type PostTag {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên tag"""
  name: String

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

type PostTagPageData {
  data: [PostTag]
  total: Int
  pagination: Pagination
}

type PostViewLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã post"""
  postId: ID

  """Mã người dùng"""
  userId: ID

  """Lượt view"""
  view: Int
}

type PostViewLogPageData {
  data: [PostViewLog]
  total: Int
  pagination: Pagination
}

type PreBooking {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  customerId: ID
  customer: Customer
  globalCustomerId: ID
  memberId: ID
  preBookingTypeName: String
  preBookingTypeId: ID
  preBookingType: PreBookingType
  serviceContractTypeId: ID
  serviceContractTypeName: String
  serviceContractType: ServiceContractType
  startAt: DateTime
  competedAt: DateTime
  bookerNote: String
  note: String
  shopBranchId: ID
  shopBranchName: String
  shopBranch: ShopBranch
  staffSpecialistId: ID
  status: EPreBookingStatus
  customFieldsData: [CustomFieldData]
}

type PreBookingPageData {
  data: [PreBooking]
  total: Int
  pagination: Pagination
}

type PreBookingTimeSlot {
  time: String
  isAvailable: Boolean
  timestamp: Mixed
  date: DateTime
  bookingCount: Int
}

type PreBookingType {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  description: String
  isActivated: Boolean
  memberId: ID
}

type PreBookingTypePageData {
  data: [PreBookingType]
  total: Int
  pagination: Pagination
}

type presignedImageURL {
  url: String
  acl: String
  fields: Mixed
}

type presignedVideoURL {
  url: String
  acl: String
  fields: Mixed
}

type PricePolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: ID

  """Tên bảng giá"""
  name: String

  """Loại điều chỉnh INC,DEC"""
  adjustType: String

  """Đơn vị điều chỉnh PERCENT,AMOUNT"""
  adjustUnit: String

  """Giá trị điều chỉnh"""
  adjustValue: Float

  """Ngày bắt đầu"""
  startDate: DateTime @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Ngày kết thúc"""
  endDate: DateTime @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Bật áp dụng theo ngày trong tuần"""
  daysOfWeekEnabled: Boolean @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Ngày trong tuần"""
  daysOfWeek: [Int] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Bật áp dụng theo giờ trong ngày"""
  timeframeOfDayEnabled: Boolean @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Thời gian trong ngày"""
  timeframeOfDay: [[String]] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Trạng thái"""
  active: Boolean

  """Mã khách hàng"""
  customerIds: [ID] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Mã sản phẩm"""
  productIds: [ID] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Mã danh mục"""
  categoryIds: [ID] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Mã sản phẩm không được áp dụng"""
  excludeProductIds: [ID] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Mã danh mục không được áp dụng"""
  excludeCategoryIds: [ID] @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Số lượng sản phẩm tối thiểu"""
  productMinQty: Int @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Loại bảng giá ADJUST_PRICE,QTY_MATRIX"""
  type: String

  """Ma trận khách hàng và số lượng"""
  qtyMatrix: [QtyMatrix]
}

enum PricePolicyApplyType {
  ALL
  CUSTOMER_NOT_INCLUDE_AFFILIATE
  AFFILIATE
}

type PricePolicyPageData {
  data: [PricePolicy]
  total: Int
  pagination: Pagination
}

enum PricePolicyType {
  ADJUST_PRICE
  QTY_MATRIX
}

type Product {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã sản phẩm"""
  code: String @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Mã của sản phẩm"""
  productCode: String

  """Tên sản phẩm"""
  name: String

  """Nội dung HTML"""
  content: String

  """Sản phẩm chính"""
  isPrimary: Boolean

  """Sản phẩm bán chéo"""
  isCrossSale: Boolean

  """Tồn kho bán chéo"""
  crossSaleInventory: Int

  """Số lượng đã đặt"""
  crossSaleOrdered: Int

  """Loại sản phẩm RETAIL,SMS,SERVICE"""
  type: String

  """Gía bán"""
  basePrice: Float

  """VAT"""
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  valueAddedTaxAmount: Float

  """Đây là giá cố định"""
  isFixedPrice: Boolean

  """Hiển thị giá cùng với Attribute rẻ nhất"""
  isDisplayPriceWithCheapestAttribute: Boolean

  """Tổng giá Attribute rẻ nhất"""
  totalCheapestAttributePrice: Float

  """Giá giảm"""
  downPrice: Float

  """Tỷ lệ giảm giá"""
  saleRate: Int

  """Mô tả ngắn"""
  subtitle: String

  """Giới thiệu sản phẩm"""
  intro: String

  """Hình ảnh đại diện"""
  image: String

  """Hình ảnh khác"""
  images: [String]

  """Hình ảnh cover"""
  cover: String

  """Hoa hồng VNPOST"""
  commission0: Float

  """Hoa hồng điểm bán"""
  commission1: Float

  """Hoa hồng cộng tác viên"""
  commission2: Float

  """Hoa hồng kho"""
  commission3: Float

  """Hoa hồng CHO ĐIỂM BÁN"""
  baseCommission: Float

  """Thưởng cho điểm bán"""
  enabledMemberBonus: Boolean

  """Thưởng cho khách hàng"""
  enabledCustomerBonus: Boolean

  """Hệ số thưởng điểm bán"""
  memberBonusFactor: Int

  """Hệ số thưởng khách hàng"""
  customerBonusFactor: Int
  supplierId: ID
  supplier: Supplier

  """Cú pháp SMS"""
  smsSyntax: String

  """SMS tới số điện thoại"""
  smsPhone: String

  """Độ ưu tiên"""
  priority: Int
  unitId: ID
  unit: Unit
  unitName: String

  """Mở bán"""
  allowSale: Boolean

  """Mã thành viên quản lý sản phẩm"""
  memberId: ID

  """Hết hàng"""
  outOfStock: Boolean

  """Chiều rộng"""
  width: Int

  """Chiều dài"""
  length: Int

  """Chiều cao"""
  height: Int

  """Cân nặng"""
  weight: Int

  """Các topping cho sản phẩm"""
  toppings: [ProductTopping]

  """Các thuộc tính của sản phẩm"""
  productAttributes: [ProductAttribute]

  """Điểm đánh giá"""
  rating: Float

  """Sản phẩm này đã bán được bao nhiêu cái."""
  soldQty: Int

  """Sản phẩm này đã được bán trong bao nhiêu đơn (Đơn khác nhau)."""
  orderCount: Int

  """Sản phẩm này đã được bao nhiêu người mua (Người mua khác nhau)."""
  uniqueBuyers: Int

  """Mã label"""
  labelIds: [ID]

  """Danh sách tag sản phẩm"""
  productTagIds: [ID]

  """Sản phẩm up sale"""
  upsaleProductIds: [ID]

  """ID danh mục sản phẩm"""
  categoryId: ID @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Danh mục sản phẩm"""
  category: Category @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Danh sách ID danh mục sản phẩm"""
  categoryIds: [ID]

  """Danh sách danh mục sản phẩm"""
  categories: [Category]

  """Danh sách mã danh mục sản phẩm hệ thống"""
  globalProductCategoryIds: [ID]

  """Danh mục sản phẩm hệ thống (cha trước - con sau)"""
  globalProductCategories: [GlobalProductCategory]

  """Mã danh mục sản phẩm hệ thống"""
  globalProductCategoryId: ID @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Danh mục sản phẩm hệ thống"""
  globalProductCategory: GlobalProductCategory @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Số lượng tồn kho giới hạn"""
  limitSale: Int

  """Giới hạn tồn kho trong ngày"""
  limitSaleByDay: Boolean

  """Ngày xoá"""
  deletedAt: DateTime

  """Điểm thưởng"""
  rewardPoint: Int

  """Danh sách chi nhánh bán"""
  branchIds: [ID]

  """Link video youtube"""
  youtubeLink: String

  """Tổng số lượng hàng tồn"""
  totalInStockCount: Int

  """Tổng số lượng hàng đang xử lý"""
  totalInProcessCount: Int

  """Tổng số lượng hàng đã xuất"""
  totalOutStockCount: Int
  member: Member
  collaboratorProduct: CollaboratorProduct
  labels: [ProductLabel]
  upsaleProducts: [Product]

  """Thông số sản phẩm"""
  productSpecs: [ProductSpecs]

  """Danh sách tab thông tin sản phẩm"""
  productTabs: [ProductTab]
  productPricePolicyId: ID
  productPricePolicy: ProductPricePolicy

  """Các key word cho SEO"""
  keywords: String
  productCommissionPolicyId: ID
  productCommissionPolicy: ProductCommissionPolicy
  productSalesBonusPolicy: ProductSalesBonusPolicy
  barcode: String

  """Đây là hàng cồng kềnh"""
  bulkyTier: BulkyTier
  estimateProductCommission: Float
  estimateProductSalesPoint: Float
  promotions: [Promotion]
  hasPromotions: Boolean
  status: EProductStatus
  productPriceConditions: [ProductPriceCondition]
  policyBestPrice: Mixed

  """Mã Bảng giá"""
  pricePolicyId: ID
  pricePolicy: PricePolicy
  url: String
}

type ProductAttribute {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Id thuộc tính cha nếu có"""
  parentProductAttributeId: ID
  parentProductAttributeElementId: ID

  """Id sản phẩm"""
  productId: ID

  """Mã chủ shop"""
  memberId: ID

  """Tên Attribute"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  parentProductAttribute: ProductAttribute
  productAttributeElements: [ProductAttributeElement]
}

type ProductAttributeElement {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  productId: ID
  productAttributeId: ID

  """Mã chủ shop"""
  memberId: ID

  """Tên Element"""
  name: String

  """Mã Element"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
  childProductAttributes: [ProductAttribute]
}

type ProductAttributeElementPageData {
  data: [ProductAttributeElement]
  total: Int
  pagination: Pagination
}

type ProductAttributeElementTemplate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên Element"""
  name: String

  """Mã Element"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
}

type ProductAttributePageData {
  data: [ProductAttribute]
  total: Int
  pagination: Pagination
}

type ProductAttributeTemplate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Id sản phẩm"""
  productId: ID

  """Mã chủ shop"""
  memberId: ID

  """Tên Attribute"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  productAttributeElements: [ProductAttributeElementTemplate]
}

type ProductAttributeTemplatePageData {
  data: [ProductAttributeTemplate]
  total: Int
  pagination: Pagination
}

type ProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """
  Loại hoa hồng COMMISSION_ACCUMULATE,COMMISSION_DIRECT,UNLIMITED_TIER_COMMISSION_DIRECT
  """
  type: String
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  name: String
  memberId: String
  isActive: Boolean
  applyCount: Int
  disbursementPeriodId: String
  totalCommission: Mixed
  rules: [ProductCommissionPolicyRule]
  productWithinProductCommissionPolicies: [ProductWithinProductCommissionPolicy]
  shopAffiliateProductCommissionPolicy: ShopAffiliateProductCommissionPolicy
}

type ProductCommissionPolicyPageData {
  data: [ProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ProductCommissionPolicyRule {
  tier: Int

  """Loại hoa hồng FIXED,PERCENTAGE"""
  commissionType: String
  commissionValue: Float
  maxCommission: Int
}

input ProductCommissionPolicyRuleInput {
  tier: Int!

  """Loại hoa hồng FIXED,PERCENTAGE"""
  commissionType: String!
  commissionValue: Float!
  maxCommission: Int
}

type ProductImportingLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ProductImportingLogPageData {
  data: [ProductImportingLog]
  total: Int
  pagination: Pagination
}

type ProductLabel {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Tên nhãn"""
  name: String

  """Màu sắc"""
  color: String
}

type ProductLabelPageData {
  data: [ProductLabel]
  total: Int
  pagination: Pagination
}

type ProductOrder {
  productId: ID
  qty: Int
  productName: String
}

type ProductPageData {
  data: [Product]
  total: Int
  pagination: Pagination
}

type ProductPriceCondition {
  conditionType: EProductPriceConditionType
  minValue: Int
  priceApply: Int
}

input ProductPriceConditionInput {
  conditionType: EProductPriceConditionType
  minValue: Int
  priceApply: Int
}

type ProductPricePolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  reductionType: String
  type: String
  name: String
  memberId: String
  isActive: Boolean
  applyCount: Int
  rules: [ProductPricePolicyRule]
}

type ProductPricePolicyPageData {
  data: [ProductPricePolicy]
  total: Int
  pagination: Pagination
}

type ProductPricePolicyRule {
  minQty: Int
  reductionValue: Float
  reductionType: String
  maxReductionValue: Int

  """Đối tượng áp dụng ALL,CUSTOMER_NOT_INCLUDE_AFFILIATE,AFFILIATE"""
  applyType: String
  estimateProductPricePolicyDiscount: Mixed
}

input ProductPricePolicyRuleInput {
  minQty: Int
  reductionValue: Float
  reductionType: String
  maxReductionValue: Int

  """Đối tượng áp dụng ALL,CUSTOMER_NOT_INCLUDE_AFFILIATE,AFFILIATE"""
  applyType: String
}

type ProductSalesBonusByChildShopAffiliate {
  totalRevenueAmount: Mixed
  totalPointAmount: Mixed
  latestCreated: DateTime
  latestUpdate: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  totalOrderCount: Int
}

type ProductSalesBonusByChildShopAffiliatePageData {
  data: [ProductSalesBonusByChildShopAffiliate]
  total: Int
  pagination: Pagination
}

type ProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  disbursementPeriodId: String
  rules: [ProductSalesBonusPolicyRule]
  advancedRules: [ProductSalesBonusPolicyAdvancedRule]
  member: Member
  productWithinProductSalesBonusPolicies: [ProductWithinProductSalesBonusPolicy]
  productSalesBonusPolicyLogs: [ProductSalesBonusPolicyLog]
  ruleToApplyAdvanced: RuleToApplyAdvanced
  totalBonus: Mixed
  shopAffiliateProductSalesBonusPolicy: ShopAffiliateProductSalesBonusPolicy
}

type ProductSalesBonusPolicyAdvancedRule {
  branch: Int
  bonusValue: Float
}

input ProductSalesBonusPolicyAdvancedRuleInput {
  branch: Int!
  bonusValue: Float!
}

type ProductSalesBonusPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  member: Member
  shopAffiliateProductSalesBonusPolicyId: String
  affiliateId: String
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  customerId: String
  customer: Customer
  customerName: String
  targetAffiliateId: String
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: String
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: String
  targetCustomer: Customer
  targetCustomerName: String
  globalBuyerId: String
  globalBuyer: GlobalCustomer
  buyerId: String
  buyer: Customer
  buyerName: String
  productId: String
  product: Product
  productName: String
  productAttributeElements: [OrderItemProductAttributeElement]
  revenue: Int
  point: Int
  qty: Int
  basePrice: Int
  productSalesBonusPolicyId: String
  productSalesBonusPolicy: ProductSalesBonusPolicy
  orderId: String
  order: Order
  orderCode: String

  """Trạng thái PENDING,APPROVED,CANCELED,DISABLED"""
  status: String
}

type ProductSalesBonusPolicyLogPageData {
  data: [ProductSalesBonusPolicyLog]
  total: Int
  pagination: Pagination
}

type ProductSalesBonusPolicyLogRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

type ProductSalesBonusPolicyPageData {
  data: [ProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ProductSalesBonusPolicyRule {
  totalRevenue: Int
  totalPoint: Int
  bonusValue: Float
}

input ProductSalesBonusPolicyRuleInput {
  totalRevenue: Int!
  totalPoint: Int!
  bonusValue: Float!
}

type ProductSpecs {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên thông số sản phẩm"""
  name: String

  """Mô tả"""
  value: String

  """Thông tin sản phẩm"""
  product: Product

  """Thông tin cửa hàng"""
  member: Member
}

type ProductSpecsPageData {
  data: [ProductSpecs]
  total: Int
  pagination: Pagination
}

type ProductStats {
  """Tổng sản lượng"""
  totalQty: Int

  """Sản lượng chờ duyệt"""
  pendingQtyCount: Int

  """Sản lượng xác nhận"""
  confirmedQtyCount: Int

  """Sản lượng đang giao"""
  deliveringQtyCount: Int

  """Sản lượng hoàn thành"""
  completedQtyCount: Int

  """Sản lượng không hoàn thành"""
  failureQtyCount: Int

  """Sản lượng huỷ"""
  canceledQtyCount: Int

  """Số lượng đơn"""
  orderCount: Int

  """Số lượng đơn chờ duyệt"""
  pendingCount: Int

  """Số lượng đơn xác nhận"""
  confirmedCount: Int

  """Số lượng đơn đang giao"""
  deliveringCount: Int

  """Số lượng đơn hoàn thành"""
  completedCount: Int

  """Số lượng đơn thất bại"""
  failureCount: Int

  """Số lượng đơn huỷ"""
  canceledCount: Int

  """Tổng tiền hàng"""
  totalAmount: Float

  """Tiền hàng chờ duyệt"""
  pendingAmount: Float

  """Tiền hàng xác nhận"""
  confirmedAmount: Float

  """Tiền hàng xác nhận"""
  deliveringAmount: Float

  """Doanh thu"""
  completedAmount: Float

  """Tiền hàng thất bại"""
  failureAmount: Float

  """Tiền hàng huỷ"""
  canceledAmount: Float
}

type ProductStockNeedData {
  productId: ID
  product: Product
  shopBranchId: ID
  shopBranch: ShopBranch
  pendingQuantity: Int
  inProcessQuantity: Int
  inStockCount: Int
  availableStock: Int
  additionalNeeded: Int
}

type ProductTab {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã tab"""
  tabId: ID

  """Mã product"""
  productId: ID

  """Nội dung của productTab"""
  content: Mixed

  """Mã cửa hàng"""
  memberId: ID

  """Trạng thái của productTab thông tin sản phẩm"""
  isActive: Boolean

  """Thông tin tab"""
  tab: Tab

  """Thông tin product"""
  product: Product

  """Thông tin cửa hàng"""
  member: Member
}

type ProductTabPageData {
  data: [ProductTab]
  total: Int
  pagination: Pagination
}

type ProductTag {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên tag"""
  name: String

  """Hình ảnh"""
  image: String
  productCount: Int
}

type ProductTagPageData {
  data: [ProductTag]
  total: Int
  pagination: Pagination
}

type ProductTopping {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  toppingIndex: Int
  parentToppingIndex: Int

  """Mã chủ shop"""
  memberId: ID

  """Tên Topping"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  code: String

  """Những lựa chọn"""
  options: [ToppingOption]
}

type ProductToppingPageData {
  data: [ProductTopping]
  total: Int
  pagination: Pagination
}

type ProductWithinAffiliateLevelDiscountPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  productId: ID
  product: Product
  affiliateLevelDiscountPolicyId: ID
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  shopAffiliateLevel: Int

  """chiết khấu cho cấp bậc này"""
  discountPercentage: Float
}

input ProductWithinAffiliateLevelDiscountPolicyInput {
  productId: ID
  shopAffiliateLevel: Int

  """chiết khấu cho cấp bậc này"""
  discountPercentage: Float
}

type ProductWithinAffiliateLevelDiscountPolicyPageData {
  data: [ProductWithinAffiliateLevelDiscountPolicy]
  total: Int
  pagination: Pagination
}

type ProductWithinDirectSubordinatesProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  productId: String
  memberId: String
  isWithinDirectSubordinatesProductSalesBonusPolicy: Boolean
  directSubordinatesProductSalesBonusPolicyId: String
  point: Int
  member: Member
  product: Product
  directSubordinatesProductSalesBonusPolicy: DirectSubordinatesProductSalesBonusPolicy
}

type ProductWithinDirectSubordinatesProductSalesBonusPolicyPageData {
  data: [ProductWithinDirectSubordinatesProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ProductWithinIndividualProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  productId: String
  memberId: String
  isWithinIndividualProductSalesBonusPolicy: Boolean
  individualProductSalesBonusPolicyId: String
  point: Int
  member: Member
  product: Product
  individualProductSalesBonusPolicy: IndividualProductSalesBonusPolicy
}

type ProductWithinIndividualProductSalesBonusPolicyPageData {
  data: [ProductWithinIndividualProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ProductWithinProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  productId: String
  memberId: String
  isWithinProductCommissionPolicy: Boolean
  productCommissionPolicyId: String
  member: Member
  product: Product
  productCommissionPolicy: ProductCommissionPolicy
}

type ProductWithinProductCommissionPolicyPageData {
  data: [ProductWithinProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ProductWithinProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  productId: String
  memberId: String
  isWithinProductSalesBonusPolicy: Boolean
  productSalesBonusPolicyId: String
  point: Int
  member: Member
  product: Product
  productSalesBonusPolicy: ProductSalesBonusPolicy
}

type ProductWithinProductSalesBonusPolicyPageData {
  data: [ProductWithinProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ProductWithinRecurringProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  member: Member
  productId: ID
  product: Product
  recurringProductCommissionPolicyId: ID
  recurringProductCommissionPolicy: RecurringProductCommissionPolicy
  isWithinRecurringProductCommissionPolicy: Boolean
}

type ProductWithinRecurringProductCommissionPolicyPageData {
  data: [ProductWithinRecurringProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type Promotion {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  imageUrl: String
  name: String
  memberId: String
  startDate: DateTime
  endDate: DateTime
  type: PromotionType
  buyConditionType: ConditionType
  offerConditionType: ConditionType
  conditionValueOfOrder: Float
  isActive: Boolean
  buyProducts: [PromotionProduct]
  offerProducts: [PromotionProduct]
  description: String
  applyType: PricePolicyApplyType

  """
  Có giới hạn số lượng phát hành hay không, nếu TRUE thì sẽ quan tâm đến quantity còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveQuantity: Boolean

  """Tổng phát hành"""
  quantity: Int

  """
  Có giới hạn số lượng sử dụng hay không, nếu TRUE thì sẽ quan tâm đên useLimit
  và useLimitByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveUseLimit: Boolean

  """
  Tổng số lượng giới hạn mỗi khách có thể sử dụng, nếu useLimitByDate=false thì
  đây là tổng giới hạn voucher mỗi khách có thể dụng trong xuyên suốt, còn nếu
  useLimitByDate=true thì đây là tổng giới hạn voucher mỗi khách có thể sử dụng
  mỗi ngày  (NUMBER)
  """
  useLimit: Int

  """
  useLimit có phải là giới hạn số lượng voucher mỗi khác theo mỗi ngày hay không (TRUE/FALSE)
  """
  useLimitByDate: Boolean
  receivePromotionThrough: EReceivePromotionThrough
  member: Member!
  totalPromotionsCustomerUsed: Mixed
  totalPromotionsCustomerUsedToday: Mixed
  remainingUseLimit: Mixed
  totalPromotionsAbleUsedToday: Mixed
  skipPolicies: [EPolicy]

  """	Tổng số lượt đã sử dụng của tất cả khách hàng từ trước đến nay"""
  totalAllEvery: Mixed

  """Tổng số lượt đã sử dụng của tất cả khách hàng trong ngày hôm nay"""
  totalAllToday: Mixed

  """
  Tổng số lượt khách hàng hiện tại đã sử dụng trong suốt cuộc đời (all time)
  """
  totalCustomerEvery: Mixed

  """Tổng số lượt khách hàng hiện tại đã sử dụng trong ngày hôm nay"""
  totalCustomerToday: Mixed

  """
  Số lượng lượt còn lại được cấp cho cửa hàng (dựa trên quota gán cho cửa hàng, nếu có)
  """
  assignmentRemaining: Mixed

  """
  Số lượng lượt còn lại hôm nay được cấp cho cửa hàng (nếu có quota theo ngày)
  """
  assignmentRemainingToday: Mixed

  """Số lượt tối đa mà cửa hàng có thể sử dụng trong toàn bộ vòng đời"""
  capShopLifetime: Mixed

  """Số lượt tối đa mà cửa hàng có thể sử dụng trong 1 ngày"""
  capShopDaily: Mixed

  """Số lượt tối đa mà mỗi khách hàng có thể sử dụng trong suốt vòng đời"""
  capCustomerLifetime: Mixed

  """Số lượt tối đa mà mỗi khách hàng có thể sử dụng mỗi ngày"""
  capCustomerDaily: Mixed

  """
  Số lượt còn lại có thể dùng hôm nay (tính theo min giữa shop và customer lifetime cap)
  """
  numericRemainingLifetime: Mixed

  """
  Số lượt còn lại có thể dùng hôm nay (tính theo min giữa shop và customer daily cap)
  """
  numericRemainingToday: Mixed

  """
  Số lượt còn lại cho hôm nay hiển thị ra UI (thường = numericRemainingLifetime, trừ khi cần ẩn hoặc giới hạn lại)
  """
  remainingLifetime: Mixed

  """
  Số lượt còn lại hôm nay hiển thị ra UI (thường = numericRemainingToday)
  """
  remainingToday: Mixed

  """	true nếu lượt sử dụng trong toàn bộ vòng đời là không giới hạn"""
  isLifetimeUnlimited: Boolean

  """true nếu lượt sử dụng mỗi ngày là không giới hạn"""
  isDailyUnlimited: Boolean
}

input PromotionApplyInput {
  id: String
  productIds: [String]
}

type PromotionAssignment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  promotionId: ID
  promotion: Promotion
  customerId: ID
  customer: Customer
  memberId: ID
  assignmentFrom: EPromotionAssignmentFrom
}

type PromotionAssignmentForCustomer {
  promotionId: ID
  promotion: Promotion
  customerId: ID
  customer: Customer
  memberId: ID
  assignmentFrom: EPromotionAssignmentFrom
  totalPromotions: Int
  lastReceived: DateTime
  totalUsed: Int
}

type PromotionAssignmentForCustomerPageData {
  data: [PromotionAssignmentForCustomer]
  total: Int
  pagination: Pagination
}

type PromotionAssignmentPageData {
  data: [PromotionAssignment]
  total: Int
  pagination: Pagination
}

type PromotionPageData {
  data: [Promotion]
  total: Int
  pagination: Pagination
}

type PromotionProduct {
  productId: String!
  quantity: Mixed
  product: Product
}

type PromotionReport {
  summary: Mixed
  order: Mixed
  topIssue: Mixed
  category: Mixed
}

enum PromotionType {
  QUANTITY_OF_PRODUCT
  VALUE_OF_ORDER
}

type PublicShop {
  id: ID
  coverImage: String
  name: String
  fullAddress: String
  distance: Float
  rating: Float
  ratingQty: Float
  shopCode: String
  shopCover: String
  shopLogo: String
  shopName: String
  branchs: [PublicShopBranch]

  """Chủ shop đã kích hoạt"""
  activated: Boolean
  categoryNames: [String]
}

type PublicShopBranch {
  id: ID
  name: String
  fullAddress: String
  distance: Float
}

type PublicShopPageData {
  data: [PublicShop]
  total: Int
  pagination: Pagination
}

type PublicVoucher {
  id: ID

  """Mã khuyến mãi"""
  code: String

  """Mô tả"""
  description: String

  """Loại giảm giá"""
  type: EShopVoucherType

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Hình ảnh"""
  image: String
  shop: Shop
}

type QrCode {
  QRString: String
  expiredAt: DateTime
}

type QRCode {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã của đợt QR Code"""
  qrCodeStageId: String

  """Loại mục tiêu chuyển hướng PRODUCT"""
  targetType: String

  """ID mục tiêu chuyển hướng"""
  targetId: String

  """QR Code"""
  qrCode: String

  """Mã code """
  code: String

  """Số lượt quét QR Code"""
  scanCount: Int

  """Trạng thái kích hoạt của QR Code"""
  isActive: Boolean

  """Mã cửa hàng"""
  memberId: String

  """Ngày quét QR Code gần nhất"""
  lastScanAt: DateTime

  """Thông tin đợt QR Code"""
  qrCodeStage: QRCodeStage
}

type QrCodeDecode {
  type: EQRCodeType
  data: QrCodeDecodeData
}

type QrCodeDecodeData {
  serviceContractId: String
  serviceContractTypeInServiceContractId: String
  preBookingId: String
}

type QRCodePageData {
  data: [QRCode]
  total: Int
  pagination: Pagination
}

type QRCodeScanLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Id của QR Code"""
  qrCodeId: String

  """Id của đợt QR Code"""
  qrCodeStageId: String

  """qr Code """
  code: String

  """Id của người dùng"""
  userId: String

  """
  Tên người quét (đăng nhập lấy username, nếu không name là không định danh)
  """
  userName: String

  """Số điện thoại của người dùng"""
  phone: String

  """Thiết bị quét QR Code"""
  device: String

  """ Công cụ trình duyệt"""
  engine: String

  """ Trình duyệt"""
  browser: String

  """ Hệ điều hành"""
  os: String

  """Mã cửa hàng"""
  memberId: String

  """Thông tin QR Code"""
  qrCode: QRCode

  """Thông tin người dùng"""
  user: GlobalCustomer
}

type QRCodeScanLogPageData {
  data: [QRCodeScanLog]
  total: Int
  pagination: Pagination
}

type QRCodeStage {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên đợt QR Code"""
  name: String

  """Mô tả"""
  description: String

  """Mã sản phẩm"""
  productId: String

  """Tên sản phẩm"""
  productName: String

  """Số lượng QR Code tối thiểu là 1, tối đa là 1000"""
  qrCodeCount: Int

  """Số lượt quét QR Code"""
  scanQRCodeCount: Int

  """Trạng thái kích hoạt của đợt QR Code"""
  isActive: Boolean

  """Mã cửa hàng"""
  memberId: String

  """Thông tin cửa hàng"""
  member: Member

  """Thông tin sản phẩm"""
  product: Product
}

type QRCodeStagePageData {
  data: [QRCodeStage]
  total: Int
  pagination: Pagination
}

type QRCreateServiceContractTypeSessionLog {
  QRString: String
  expiredAt: DateTime
}

type QtyMatrix {
  """Số lượng sản phẩm tối thiểu"""
  minQty: Int

  """giá gốc"""
  normal: Float

  """Giá cộng tác viên"""
  ctv: Float

  """Giá cộng tác viên hệ thống"""
  ctvSan: Float @deprecated(reason: "This field is deprecated, and will be delete soon.")

  """Giá đại lý"""
  dl: Float

  """Giá nhà phân phối"""
  npp: Float
}

input QtyMatrixInput {
  """Số lượng sản phẩm tối thiểu"""
  minQty: Int

  """giá gốc"""
  normal: Float

  """Giá cộng tác viên"""
  ctv: Float

  """Giá đại lý"""
  dl: Float

  """Giá nhà phân phối"""
  npp: Float
}

type Query {
  _empty: String
  getAllAccountingSystemSyncLog(q: QueryGetListInput): AccountingSystemSyncLogPageData
  getOneAccountingSystemSyncLog(id: ID!): AccountingSystemSyncLog
  syncVacomData: Mixed
  getAllAccumulatedDepositRewardLog(q: QueryGetListInput): AccumulatedDepositRewardLogPageData
  getOneAccumulatedDepositRewardLog(id: ID!): AccumulatedDepositRewardLog
  getAllAccumulatedDepositRewardMilestone(q: QueryGetListInput): AccumulatedDepositRewardMilestonePageData
  getOneAccumulatedDepositRewardMilestone(id: ID!): AccumulatedDepositRewardMilestone
  getAllAchievementRewardLog(q: QueryGetListInput): AchievementRewardLogPageData
  getOneAchievementRewardLog(id: ID!): AchievementRewardLog
  getAllActivity(q: QueryGetListInput): ActivityPageData
  getOneActivity(id: ID!): Activity
  getAllAddress(q: QueryGetListInput): AddressPageData
  getOneAddress(id: ID!): Address
  getProvince: [Address]
  getDistrict(provinceId: String!): [Address]
  getWard(districtId: String!): [Address]
  getAllAddressBook(q: QueryGetListInput): AddressBookPageData
  getOneAddressBook(id: ID!): AddressBook
  getAllAddressDelivery(q: QueryGetListInput): AddressDeliveryPageData
  getOneAddressDelivery(id: ID!): AddressDelivery
  getShopAddressDelivery(provinceId: ID, districtId: ID, wardId: ID, sellerId: ID): [AddressDelivery]
  getAllAddressDeliveryImportingLog(q: QueryGetListInput): AddressDeliveryImportingLogPageData
  getOneAddressDeliveryImportingLog(id: ID!): AddressDeliveryImportingLog
  getAllAddressStorehouse(q: QueryGetListInput): AddressStorehousePageData
  getOneAddressStorehouse(id: ID!): AddressStorehouse
  getAllAddressStorehouseImportingLog(q: QueryGetListInput): AddressStorehouseImportingLogPageData
  getOneAddressStorehouseImportingLog(id: ID!): AddressStorehouseImportingLog
  getAllAdminNotification(q: QueryGetListInput): AdminNotificationPageData
  getOneAdminNotification(id: ID!): AdminNotification
  getAllAffiliate(q: QueryGetListInput): AffiliatePageData
  getOneAffiliate(id: ID!): Affiliate
  getAllAffiliateConfig(q: QueryGetListInput): AffiliateConfigPageData
  getOneAffiliateConfig(id: ID): AffiliateConfig
  getAllAffiliateLevelDiscountPolicy(q: QueryGetListInput): AffiliateLevelDiscountPolicyPageData
  getOneAffiliateLevelDiscountPolicy(id: ID!): AffiliateLevelDiscountPolicy
  getAllAffiliateLevelDiscountPolicyLog(q: QueryGetListInput): AffiliateLevelDiscountPolicyLogPageData
  getOneAffiliateLevelDiscountPolicyLog(id: ID!): AffiliateLevelDiscountPolicyLog
  getAllAgency(q: QueryGetListInput): AgencyPageData
  getOneAgency(id: ID!): Agency
  getMyAgency: Agency
  getAllAgencyConfig(q: QueryGetListInput): AgencyConfigPageData
  getAgencyConfigByCode(agencyCode: String): AgencyConfig
  getMyAgencyConfig: AgencyConfig
  getAllAgencyContract(q: QueryGetListInput): AgencyContractPageData
  getOneAgencyContract(id: ID!): AgencyContract
  getAllAgencyManageMember(q: QueryGetListInput): AgencyManageMemberPageData
  getOneAgencyManageMember(id: ID!): AgencyManageMember
  getAllAgencyMemberBill(q: QueryGetListInput): AgencyMemberBillPageData
  getOneAgencyMemberBill(id: ID!): AgencyMemberBill
  getAllAgencyMemberBillItem(q: QueryGetListInput): AgencyMemberBillItemPageData
  getOneAgencyMemberBillItem(id: ID!): AgencyMemberBillItem
  getAllAgencyUser(q: QueryGetListInput): AgencyUserPageData
  getOneAgencyUser(id: ID!): AgencyUser
  agencyUserGetMe: AgencyUser
  getAllApiTracking(q: QueryGetListInput): ApiTrackingPageData
  getOneApiTracking(id: ID!): ApiTracking
  getAllApplicationMember(q: QueryGetListInput): ApplicationMemberPageData
  getOneApplicationMember(id: ID!): ApplicationMember
  getAllArea(q: QueryGetListInput): AreaPageData
  getOneArea(id: ID!): Area
  getAllAuditLog(q: QueryGetListInput): AuditLogPageData
  getOneAuditLog(id: ID!): AuditLog
  getAllBanner(q: QueryGetListInput): BannerPageData
  getOneBanner(id: ID!): Banner
  getAllBranch(q: QueryGetListInput): BranchPageData
  getOneBranch(id: ID!): Branch
  getAllCarrierWallet(q: QueryGetListInput): CarrierWalletPageData
  getOneCarrierWallet(id: ID!): CarrierWallet
  getMyCarrierWallet(providerCarrier: EProviderCarrier): CarrierWallet
  getAllCarrierWalletTransaction(q: QueryGetListInput): CarrierWalletTransactionPageData
  getOneCarrierWalletTransaction(id: ID!): CarrierWalletTransaction
  getAllCategory(q: QueryGetListInput): CategoryPageData
  getOneCategory(id: ID!): Category
  getFilteringCategories: [Category]
  getAllChatBot: String
  isVersionAvailable(platform: EPlatformMobile, appType: EMobileAppType, version: String): Boolean
  getAllCollaborator(q: QueryGetListInput): CollaboratorPageData
  getOneCollaborator(id: ID!): Collaborator
  getAllCollaboratorCampaign(q: QueryGetListInput): CollaboratorCampaignPageData
  getOneCollaboratorCampaign(id: ID!): CollaboratorCampaign
  getAllCollaboratorImportingLog(q: QueryGetListInput): CollaboratorImportingLogPageData
  getOneCollaboratorImportingLog(id: ID!): CollaboratorImportingLog
  getAllCollaboratorProduct(q: QueryGetListInput): CollaboratorProductPageData
  getOneCollaboratorProduct(id: ID!): CollaboratorProduct
  getAllCommission(q: QueryGetListInput): CommissionPageData
  getOneCommission(id: ID!): Commission
  getShopCommissionsStatistics(shopAffiliateId: String): ShopCommissionsStatistics
  statisticRevenueCommission(filter: Mixed): StatisticRevenueCommission
  getCommissionByChildShopAffiliate(queryCommission: QueryGetListInput, queryShopAffiliate: QueryGetListInput): CommissionByChildShopAffiliatePageData
  getAllCommissionLog(q: QueryGetListInput): CommissionLogPageData
  getMemberCommissionTypes: [MemberCommissionType]
  getAllContractSignatureRegistrationRequest(q: QueryGetListInput): ContractSignatureRegistrationRequestPageData
  getOneContractSignatureRegistrationRequest(id: ID!): ContractSignatureRegistrationRequest
  getAllCounter(q: QueryGetListInput): CounterPageData
  getOneCounter(id: ID!): Counter
  getAllCrossSale(q: QueryGetListInput): CrossSalePageData
  getOneCrossSale(id: ID!): CrossSale
  getAllCumulativePointLog(q: QueryGetListInput): CumulativePointLogPageData
  getAllCustomCard(q: QueryGetListInput): CustomCardPageData
  getOneCustomCard(id: ID!): CustomCard
  getAllCustomer(q: QueryGetListInput): CustomerPageData
  getAllCustomerForCreateAffiliateRequest(q: QueryGetListInput): CustomerPageData
  getOneCustomer(id: ID!): Customer
  customerGetMe: Customer
  getAllGlobalCollaboratorRegistration(q: QueryGetListInput): GlobalCollaboratorRegistrationPageData
  getOneGlobalCollaboratorRegistration(id: ID!): GlobalCollaboratorRegistration
  getAllGlobalCustomer(q: QueryGetListInput): GlobalCustomerPageData
  getOneGlobalCustomer(id: ID!): GlobalCustomer
  getAllReferralCustomer(q: QueryGetListInput): ReferralCustomerPageData
  getOneReferralCustomer(id: ID!): ReferralCustomer
  getAllRewardPointLog(q: QueryGetListInput): RewardPointLogPageData
  getAllTotalRewardPointByShop: [TotalRewardPointByShop]
  getOneRewardPointLog(id: ID!): RewardPointLog
  getAllCustomerAddress(q: QueryGetListInput): CustomerAddressPageData
  getOneCustomerAddress(id: ID!): CustomerAddress
  getAllCustomerCommissionLog(q: QueryGetListInput): CustomerCommissionLogPageData
  getAllMemberCollaboratorCommissionLog(q: QueryGetListInput): MemberCollaboratorCommissionLogPageData
  getAllCustomerCompletedTask(q: QueryGetListInput): CustomerCompletedTaskPageData
  getOneCustomerCompletedTask(id: ID!): CustomerCompletedTask
  getAllCustomerContact(q: QueryGetListInput): CustomerContactPageData
  getOneCustomerContact(id: ID!): CustomerContact
  getAllCustomerGroup(q: QueryGetListInput): CustomerGroupPageData
  getOneCustomerGroup(id: ID!): CustomerGroup
  getAllCustomerPointLog(q: QueryGetListInput): CustomerPointLogPageData
  getAllCustomerVoucher(q: QueryGetListInput): CustomerVoucherPageData
  getOneCustomerVoucher(id: ID!): CustomerVoucher
  getAllCustomerVoucherLog(q: QueryGetListInput): CustomerVoucherLogPageData
  getOneCustomerVoucherLog(id: ID!): CustomerVoucherLog
  getAllDebt(q: QueryGetListInput): DebtPageData
  getOneDebt(id: ID!): Debt
  getAllDebtAllocation(q: QueryGetListInput): DebtAllocationPageData
  getOneDebtAllocation(id: ID!): DebtAllocation
  getAllDebtPaymentRequest(q: QueryGetListInput): DebtPaymentRequestPageData
  getOneDebtPaymentRequest(id: ID!): DebtPaymentRequest
  getAllDeliveryLog(q: QueryGetListInput): DeliveryLogPageData
  getAllDepositWalletRequest(q: QueryGetListInput): DepositWalletRequestPageData
  getOneDepositWalletRequest(id: ID!): DepositWalletRequest
  getAllDiligencePointsImportingLog: String
  getAllDirectSubordinatesProductSalesBonusPolicy(q: QueryGetListInput): DirectSubordinatesProductSalesBonusPolicyPageData
  getOneDirectSubordinatesProductSalesBonusPolicy(id: ID!): DirectSubordinatesProductSalesBonusPolicy
  shopGetStatisticDirectSubordinatesProductSalesBonusPolicy: [StatisticDirectSubordinatesProductSalesBonusPolicy]
  getAllDirectSubordinatesProductSalesBonusPolicyLog(q: QueryGetListInput): DirectSubordinatesProductSalesBonusPolicyLogPageData
  getOneDirectSubordinatesProductSalesBonusPolicyLog(id: ID!): DirectSubordinatesProductSalesBonusPolicyLog
  getDirectSubordinatesProductSalesBonusByChildShopAffiliate(queryDirectSubordinatesProductSalesBonusPolicyLog: QueryGetListInput, queryShopAffiliate: QueryGetListInput): DirectSubordinatesProductSalesBonusByChildShopAffiliatePageData
  getAllDisburse(q: QueryGetListInput): DisbursePageData
  getOneDisburse(id: ID!): Disburse
  getAllDisburseItem(q: QueryGetListInput): DisburseItemPageData
  getOneDisburseItem(id: ID!): DisburseItem
  getAllDisbursePayout(q: QueryGetListInput): DisbursePayoutPageData
  getOneDisbursePayout(id: ID!): DisbursePayout
  getAllDisbursementPeriod(q: QueryGetListInput): DisbursementPeriodPageData
  getOneDisbursementPeriod(id: ID!): DisbursementPeriod
  getAllDisbursementRequest(q: QueryGetListInput): DisbursementRequestPageData
  getOneDisbursementRequest(id: ID!): DisbursementRequest
  getAllDisbursementShopAffiliate(q: QueryGetListInput): DisbursementShopAffiliatePageData
  getOneDisbursementShopAffiliate(id: ID!): DisbursementShopAffiliate
  getAllDiscountPolicy(q: QueryGetListInput): DiscountPolicyPageData
  getOneDiscountPolicy(id: ID!): DiscountPolicy
  getAllDisease(q: QueryGetListInput): DiseasePageData
  getOneDisease(id: ID!): Disease
  getAllDomainMapping(q: QueryGetListInput): DomainMappingPageData
  getOneDomainMapping(id: ID!): DomainMapping
  getAllDriver(q: QueryGetListInput): DriverPageData
  getOneDriver(id: ID!): Driver
  getAllEVoucher(q: QueryGetListInput): EVoucherPageData
  getOneEVoucher(id: ID!): EVoucher
  getAllEVoucherImportingLog: String
  getAllEVoucherItem(q: QueryGetListInput): EVoucherItemPageData
  getOneEVoucherItem(id: ID!): EVoucherItem
  getAllEmail(q: QueryGetListInput): EmailPageData
  getOneEmail(id: ID!): Email
  getAllEventError(q: QueryGetListInput): EventErrorPageData
  getOneEventError(id: ID!): EventError
  getAllExpert(q: QueryGetListInput): ExpertPageData
  getOneExpert(id: ID!): Expert
  getAllExpertGroup(q: QueryGetListInput): ExpertGroupPageData
  getOneExpertGroup(id: ID!): ExpertGroup
  getFeatureGroupsDataByShopType(shopType: EShopType!): [FeatureGroupData]
  getAllFeedbackProduct(q: QueryGetListInput): FeedbackProductPageData
  getOneFeedbackProduct(id: ID!): FeedbackProduct
  getAllFile(q: QueryGetListInput): FilePageData
  getOneFile(id: ID!): File
  getAllGlobalProductCategory(q: QueryGetListInput): GlobalProductCategoryPageData
  getOneGlobalProductCategory(id: ID!): GlobalProductCategory
  getAllGoShipCities: [GoShipCity]
  getAllGoShipDistricts(query: GoShipApiQuery!): [GoShipDistrict]
  getAllGoShipWards(districtCode: String!, query: GoShipApiQuery!): [GoShipWard]
  getAllGoShipSetting(q: QueryGetListInput): GoShipSettingPageData
  getOneGoShipSetting(id: ID!): GoShipSetting
  getMyGoShipShopConfig: GoShipShopConfig
  getAllGoShipShopConfig(q: QueryGetListInput): GoShipShopConfigPageData
  getOneGoShipShopConfig(id: ID!): GoShipShopConfig
  getAllIndividualProductSalesBonusPolicy(q: QueryGetListInput): IndividualProductSalesBonusPolicyPageData
  getOneIndividualProductSalesBonusPolicy(id: ID!): IndividualProductSalesBonusPolicy
  shopGetStatisticIndividualProductSalesBonusPolicy: [StatisticIndividualProductSalesBonusPolicy]
  getAllIndividualProductSalesBonusPolicyLog(q: QueryGetListInput): IndividualProductSalesBonusPolicyLogPageData
  getOneIndividualProductSalesBonusPolicyLog(id: ID!): IndividualProductSalesBonusPolicyLog
  getProductSalesBonusByChildShopAffiliate(queryIndividualProductSalesBonusPolicyLog: QueryGetListInput, queryShopAffiliate: QueryGetListInput, queryProductSalesBonusPolicyLog: QueryGetListInput): ProductSalesBonusByChildShopAffiliatePageData
  getAllIndividualServiceContractTypeSalesBonusPolicy(q: QueryGetListInput): IndividualServiceContractTypeSalesBonusPolicyPageData
  getOneIndividualServiceContractTypeSalesBonusPolicy(id: ID!): IndividualServiceContractTypeSalesBonusPolicy
  shopGetStatisticIndividualServiceContractTypeSalesBonusPolicy: [StatisticIndividualServiceContractTypeSalesBonusPolicy]
  getAllIndividualServiceContractTypeSalesBonusPolicyLog(q: QueryGetListInput): IndividualServiceContractTypeSalesBonusPolicyLogPageData
  getOneIndividualServiceContractTypeSalesBonusPolicyLog(id: ID!): IndividualServiceContractTypeSalesBonusPolicyLog
  getServiceContractTypeSalesBonusByChildShopAffiliate(queryIndividualServiceContractTypeSalesBonusPolicyLog: QueryGetListInput, queryShopAffiliate: QueryGetListInput): ServiceContractTypeSalesBonusByChildShopAffiliatePageData
  getAllInventoryVoucher(q: QueryGetListInput): InventoryVoucherPageData
  getOneInventoryVoucher(id: ID!): InventoryVoucher
  getAllInventoryVoucherProduct(q: QueryGetListInput): InventoryVoucherProductPageData
  getOneInventoryVoucherProduct(id: ID!): InventoryVoucherProduct
  getDetailedInventoryReport(q: GetDetailedInventoryReportInput!): [DetailedInventoryReport]
  getAllInvoice(q: QueryGetListInput): InvoicePageData
  getOneInvoice(id: ID!): Invoice
  getMyInvoiceConfig: InvoiceConfig
  getAllInvoiceElectronicContract(q: QueryGetListInput): InvoiceElectronicContractPageData
  getOneInvoiceElectronicContract(id: ID!): InvoiceElectronicContract
  getDetailDataInvoiceElectronicContract(id: ID!): DetailDataInvoiceElectronicContract
  getInvoiceElectronicContractRegisterCustomer: InvoiceElectronicContract
  getAllInvoiceRequest(q: QueryGetListInput): InvoiceRequestPageData
  getOneInvoiceRequest(id: ID!): InvoiceRequest
  getUrlInvoiceInformationRequest(data: UrlInvoiceInformationRequestInput!): UrlInvoiceInformationRequestData
  getLeaderBoard(type: ETypeLeaderBoardConfig): [LeaderBoard]
  getLeaderBoardSetting(today: DateTime): LeaderBoardSetting
  getAllLuckyWheel(q: QueryGetListInput): LuckyWheelPageData
  getOneLuckyWheel(id: ID!): LuckyWheel
  getAllLuckyWheelGift(q: QueryGetListInput): LuckyWheelGiftPageData
  getOneLuckyWheelGift(id: ID!): LuckyWheelGift
  getAllLuckyWheelResult(q: QueryGetListInput): LuckyWheelResultPageData
  getAllDeclarationRegisterInvoice(q: QueryGetListInput): MInvoiceDeclarationRegisterInvoicePageData
  getOneDeclarationRegisterInvoice(id: String!): MInvoiceDeclarationRegisterInvoice
  getTenantCompany: MInvoiceTenantCompany
  getAllDeclarationInvoicePartner: [MInvoiceDeclarationInvoicePartner]
  getAllMInoviceTypeInvoice: [MInvoiceTypeInvoice]
  getAllMInvoiceTypeInvoice: [MInvoiceTypeInvoice]
  getMInvoiceInvoiceTypeSerialByReportName(reportName: String!): InvoiceTypeSerialEntry
  getMInvoiceTypeInvoiceMetadata: InvoiceSerialMetadata
  getAllMInvoiceRegisterInvoice(q: QueryGetListInput): MInvoiceRegisterInvoicePageData
  searchTaxCodeMInvoice(taxCode: String!): TaxCodeMInvoiceInfo
  getTokenSignatures(q: QueryGetListInput): MInvoiceTokenSignaturePageData
  getAllTypeInvoiceMInvoice(type: EMInvoiceInvoiceForm): [TypeInvoiceMInvoice]
  getListCustomerMInvoiceAdmin(q: Mixed): MInvoiceAdminCustomerDetailPagination
  searchTaxCodeMInvoiceSite(taxCode: String!): TaxCodeSearchMInoviceSite
  getAllProvinceMInvoice: [MInoviceIdValue]
  getAllTaxOfficeProvinceMInvoice: [MInoviceIdValue]
  getAllTaxOfficeManagedListByTaxOfficeProvinceMInvoice(provinceId: String!): [MInoviceIdValue]
  getAllMInvoiceAdminConfig(q: QueryGetListInput): MInvoiceAdminConfigPageData
  getOneMInvoiceAdminConfig(id: ID!): MInvoiceAdminConfig
  getMyMInvoiceAdminConfig: MInvoiceAdminConfig
  getAllMInvoiceInvoicePackage: [MInvoiceInvoicePackageData]
  getAllMInvoiceSignaturePackage: [MInvoiceSignaturePackageData]
  getAllMInvoiceConfig(q: QueryGetListInput): MInvoiceConfigPageData
  getOneMInvoiceConfig(id: ID!): MInvoiceConfig
  getMyMInvoiceConfig: MInvoiceConfig
  getAllManychatPageCustomFields: [ManyChatPageCustomField]
  getAllManychatPageBotFields: [ManyChatPageBotField]
  getAllManychatCustomFieldSetting(q: QueryGetListInput): ManychatCustomFieldSettingPageData
  getOneManychatCustomFieldSetting(id: ID!): ManychatCustomFieldSetting
  getAllManychatPageFlowData: ManychatPageFlowData
  getAllManychatPsid(q: QueryGetListInput): ManychatPsidPageData
  getOneManychatPsid(id: ID!): ManychatPsid
  getAllManychatSendFlowSetting(q: QueryGetListInput): ManychatSendFlowSettingPageData
  getOneManychatSendFlowSetting(id: ID!): ManychatSendFlowSetting
  getManychatSendFlowTriggerTypes: [Label]
  getAllManychatSendNotificationSetting(q: QueryGetListInput): ManychatSendNotificationSettingPageData
  getOneManychatSendNotificationSetting(id: ID!): ManychatSendNotificationSetting
  getOneManychatSetting: ManychatSetting
  getAllMediaCentral(q: QueryGetListInput): MediaCentralPageData
  getOneMediaCentral(id: ID!): MediaCentral
  getAllMediaCentralCategory(q: QueryGetListInput): MediaCentralCategoryPageData
  getOneMediaCentralCategory(id: ID!): MediaCentralCategory
  getAllMediaCentralItem(q: QueryGetListInput): MediaCentralItemPageData
  getOneMediaCentralItem(id: ID!): MediaCentralItem
  getShopByShopCode(code: String!): MemberPublic
  getAllMember(q: QueryGetListInput): MemberPageData
  getOneMember(id: ID!): Member
  memberGetMe: Member
  searchSubscriber(query: String): [SubscriberInfo]
  getEMemberTypes: [EMemberType]
  getShopData: Shop
  getAllMemberImportingLog(q: QueryGetListInput): MemberImportingLogPageData
  getOneMemberImportingLog(id: ID!): MemberImportingLog
  getAllMicConfig(q: QueryGetListInput): MicConfigPageData
  getOneMicConfig(id: ID!): MicConfig
  getAllMicInsuranceConfig(q: QueryGetListInput): MicInsuranceConfigPageData
  getOneMicInsuranceConfig(id: ID!): MicInsuranceConfig
  applicationMinigameStatisticOverview: ApplicationStatisticsMinigameOverview
  getAllApplicationMinigameStatisticMerchantCreateMinigame(q: QueryGetListInput): ApplicationMinigameStatisticMerchantCreateMinigamePageData
  getAllApplicationMinigameStatisticMerchantMostPlayers(q: QueryGetListInput): ApplicationMinigameStatisticMerchantMostPlayersPageData
  getAllApplicationMinigameStatisticMinigameMostPlayers(q: QueryGetListInput): ApplicationMinigameStatisticMinigameMostPlayersPageData
  applicationMinigameGetMe: ApplicationMinigame
  getTokenMerchantMinigameByApiKey: AuthMinigame
  getAllManyChatSettingMinigameByMinigameId(minigameId: ID!): [ManyChatSettingMinigame]
  getAllMerchantMinigame(q: QueryGetListInput): MerchantMinigamePageData
  getOneMerchantMinigame(id: ID!): MerchantMinigame
  getTokenMerchantMinigame(merchantId: String!): TokenMerchantMinigame
  merchantMinigameGetMe: MerchantMinigame
  getAllMinigame(q: QueryGetListInput): MinigamePageData
  getOneMinigame(minigameId: String!): Minigame
  getOneMinigameData(minigameId: String!): MinigameData
  getMainMinigame: Minigame
  getPlayerGameLogByVoucherId(minigameVoucherId: String!): Mixed
  getAllPlayMinigameLogByMinigameId(minigameId: String, q: QueryGetListInput): PlayMinigameLogPageData
  getAllMinigameType(q: QueryGetListInput): MinigameTypePageData
  getOneMinigameType(id: ID!): MinigameType
  getAllPaymentLogMinigame(q: QueryGetListInput): PaymentLogMinigamePageData
  getAllPlayerInApplicationMinigame(q: QueryGetListInput): PlayerInApplicationMinigamePageData
  getOnePlayerInApplicationMinigame(id: ID!): PlayerInApplicationDetailMinigame
  getOnePlayerInApplicationByMerchantMinigame(id: ID!, merchantId: String!): PlayerInMerchantMinigame
  getAllPlayerInMerchantMinigame(q: QueryGetListInput): PlayerInMerchantMinigamePageData
  getOnePlayerInMerchantMinigame(id: ID!): PlayerInMerchantMinigame
  getAllPlayerPlayGameLogMinigame(q: QueryGetListInput): PlayerPlayGameLogMinigamePageData
  getAllPlayerPlayGameLogByMinigameId(minigameId: String!, q: QueryGetListInput): PlayerPlayGameLogMinigamePageData
  getOnePlayerPlayGameLogByVoucherIdMinigame(voucherId: ID!): PlayerPlayGameLogMinigame
  getOneServiceByMinigameId(minigameId: ID!): ServiceMinigame
  statisticByMinigameId(minigameId: String!): StatisticDetailMinigame
  statisticVoucherGroupByMinigameId(minigameId: String!, q: QueryGetListInput): StatisticVoucherGroupByMinigamePageData
  statisticTopUsedVoucherByMinigameId(minigameId: String!, q: QueryGetListInput): StatisticTopUsedVoucherMinigamePageData
  statisticTopShareByMinigameId(minigameId: String!, q: QueryGetListInput): StatisticTopShareMinigamePageData
  statisticMerchantMinigame(q: QueryGetListInput): StatisticDetailMinigamePageData
  statisticMerchantChartNewPlayer(range: String!): ChartMinigame
  staticMerchantData: StatisticMerchantMinigame
  getAllSubscriptionMinigame(q: QueryGetListInput): SubscriptionMinigamePageData
  getOneSubscriptionMinigame(id: ID!): SubscriptionMinigame
  getAllVoucherGroupMinigame(q: QueryGetListInput): VoucherGroupMinigamePageData
  getOneVoucherGroupMinigame(id: ID!): VoucherGroupMinigame
  merchantGetAllVoucherByVoucherGroupId(voucherGroupId: String!, q: QueryGetListInput): VoucherMinigamePageData
  merchantScanVoucherMinigame(voucherId: String!): VoucherGroupMinigame
  getAllZaloOaSendMessageSettingMinigame(q: QueryGetListInput): ZaloOaSendMessageSettingMinigamePageData
  getOneZaloOaSendMessageSettingMinigame(id: ID!): ZaloOaSendMessageSettingMinigame
  getAllMinigamePopup(q: QueryGetListInput): MinigamePopupPageData
  getOneMinigamePopup(id: ID!): MinigamePopup
  getOneMinigamePopupByMinigameId(minigameId: String!): MinigamePopup
  getAllMinigameRewardLog(q: QueryGetListInput): MinigameRewardLogPageData
  getOneMinigameRewardLog(id: ID!): MinigameRewardLog
  getMyMinigameSetting: MinigameSetting
  syncMinigameVoucherGroup: Boolean
  getAllMinigameVoucherGroup(q: QueryGetListInput!): Mixed
  getAllMinigameVoucherGroupMapping(q: QueryGetListInput): MinigameVoucherGroupMappingPageData
  getOneMinigameVoucherGroupMapping(id: ID!): MinigameVoucherGroupMapping
  getAllNotification(q: QueryGetListInput): NotificationPageData
  getOneNotification(id: ID!): Notification
  countUnSeenNotification: Int
  getAllNotificationSetting(q: QueryGetListInput): NotificationSettingPageData
  getOneNotificationSetting(id: ID!): NotificationSetting
  getAllParametersByNotificationTriggerType: Mixed
  getAllParametersNotification: Mixed
  getAllNotificationTrigger: [KeyValue]
  getAllNotificationSettingPushLog(q: QueryGetListInput): NotificationSettingPushLogPageData
  getOneNotificationSettingPushLog(id: ID!): NotificationSettingPushLog
  getAllOnboardingFeatureDisplay(q: QueryGetListInput): OnboardingFeatureDisplayPageData
  getOneOnboardingFeatureDisplay(id: ID!): OnboardingFeatureDisplay
  getAllOrder(q: QueryGetListInput, staffPermissionScope: EStaffPermissionScope): OrderPageData
  getAllOrderBranchChildrenShopAffiliate(q: QueryGetListInput): OrderPageData
  getTransferedOrders(q: QueryGetListInput): OrderPageData
  getOneOrder(id: ID!): Order
  getAllDeliveryMethod: [DeliveryMethod]
  getAllShipService(shipMethod: String!): [ShipServicePricing]
  getTierByOrder(orderId: ID!): String
  statisticOrderProductPricePolicyDiscount(orderStatus: String): StatisticOrderProductPricePolicyDiscount
  getAllOrderStatusValue: [OrderStatusText]
  getAllOrderInvoice(q: QueryGetListInput): OrderInvoicePageData
  getOneOrderInvoice(id: ID!): OrderInvoice
  getOneOrderInvoiceByTrackingCode(trackingCode: String!): OrderInvoice
  getUrlTrackingOrderInvoice(filter: Mixed!): UrlTrackingOrderInvoiceData
  getAllOrderLog(q: QueryGetListInput): OrderLogPageData
  getAllToMemberOrderLog(q: QueryGetListInput): OrderLogPageData
  getOneOrderLog(id: ID!): OrderLog
  getMyOrderSplitConfig: OrderSplitConfig
  getAllPackageSubscription(q: QueryGetListInput): PackageSubscriptionPageData
  getOnePackageSubscription(id: ID!): PackageSubscription
  getAllPackageSubscriptionLog(q: QueryGetListInput): PackageSubscriptionLogPageData
  getOnePackageSubscriptionLog(id: ID!): PackageSubscriptionLog
  getCurrentSubscriptionForMember: PackageSubscriptionLog
  memberGetExpireSubscription: MemberPackageSubscriptionExpire
  getAllPaymentHistory(q: QueryGetListInput): PaymentHistoryPageData
  getOnePaymentHistory(id: ID!): PaymentHistory
  getAllPaymentRequest(q: QueryGetListInput): PaymentRequestPageData
  getOnePaymentRequest(id: ID!): PaymentRequest
  getAllPetroCard(q: QueryGetListInput!): PetroCardPageData
  getOnePetroCard(id: String!): PetroCard
  getAllPetroCardTransactionByPetroCardId(petroCardId: String!, q: QueryGetListInput!): PetroCardTransactionPageData
  statisticPetroCardByPetroCardId(petroCardId: String!): [StatisticPetroCard]
  getAllPlant(q: QueryGetListInput): PlantPageData
  getOnePlant(id: ID!): Plant
  getAllPopup(q: QueryGetListInput): PopupPageData
  getAllPopupToMe(q: QueryGetListInput): PopupPageData
  getOnePopup(id: ID!): Popup!
  getAllPosition(q: QueryGetListInput): PositionPageData
  getOnePosition(id: ID!): Position
  getAllPost(q: QueryGetListInput): PostPageData
  getOnePost(id: ID!): Post
  getAllPostTag(q: QueryGetListInput): PostTagPageData
  getOnePostTag(id: ID!): PostTag
  getAllPostViewLog(q: QueryGetListInput): PostViewLogPageData
  getAllTopic(q: QueryGetListInput): TopicPageData
  getOneTopic(id: ID!): Topic
  getAllPreBooking(q: QueryGetListInput): PreBookingPageData
  getOnePreBooking(id: ID!): PreBooking
  statisticPreBooking(filter: Mixed): StatisticPreBooking
  getQRPreBooking(filter: Mixed): QrCode
  getAllPreBookingType(q: QueryGetListInput): PreBookingTypePageData
  getOnePreBookingType(id: ID!): PreBookingType
  getAllPricePolicy(q: QueryGetListInput): PricePolicyPageData
  getOnePricePolicy(id: ID!): PricePolicy
  getAllProduct(q: QueryGetListInput): ProductPageData
  getAllPostProducts(q: QueryGetListInput): ProductPageData
  getMobifoneProducts(q: QueryGetListInput): ProductPageData
  getAllCrossSaleProducts(sellerId: ID): [Product]
  getOneProduct(id: ID!): Product
  getOneProductByCode(code: String!): Product
  getAllProductSpecs(q: QueryGetListInput): ProductSpecsPageData
  getOneProductSpecs(id: ID!): ProductSpecs
  getAllProductTab(q: QueryGetListInput): ProductTabPageData
  getOneProductTab(id: ID!): ProductTab
  getAllProductTag(q: QueryGetListInput): ProductTagPageData
  getOneProductTag(id: ID!): ProductTag
  getAllTab(q: QueryGetListInput): TabPageData
  getOneTab(id: ID!): Tab
  getAllProductAttribute(q: QueryGetListInput): ProductAttributePageData
  getOneProductAttribute(id: ID!): ProductAttribute
  getAllProductAttributeElement(q: QueryGetListInput): ProductAttributeElementPageData
  getOneProductAttributeElement(id: ID!): ProductAttributeElement
  getAllProductAttributeTemplate(q: QueryGetListInput): ProductAttributeTemplatePageData
  getOneProductAttributeTemplate(id: ID!): ProductAttributeTemplate
  getAllProductCommissionPolicy(q: QueryGetListInput): ProductCommissionPolicyPageData
  getOneProductCommissionPolicy(id: ID!): ProductCommissionPolicy
  shopGetStatisticProductCommissionPolicy: [StatisticProductCommissionPolicy]
  getAllProductImportingLog(q: QueryGetListInput): ProductImportingLogPageData
  getOneProductImportingLog(id: ID!): ProductImportingLog
  getAllProductLabel(q: QueryGetListInput): ProductLabelPageData
  getOneProductLabel(id: ID!): ProductLabel
  getAllProductPricePolicy(q: QueryGetListInput): ProductPricePolicyPageData
  getOneProductPricePolicy(id: ID!): ProductPricePolicy
  getAllProductSalesBonusPolicy(q: QueryGetListInput): ProductSalesBonusPolicyPageData
  getOneProductSalesBonusPolicy(id: ID!): ProductSalesBonusPolicy
  shopGetStatisticProductSalesBonusPolicy: [StatisticProductSalesBonusPolicy]
  getAllProductSalesBonusPolicyLog(q: QueryGetListInput): ProductSalesBonusPolicyLogPageData
  getOneProductSalesBonusPolicyLog(id: ID!): ProductSalesBonusPolicyLog
  getAllProductTopping(q: QueryGetListInput): ProductToppingPageData
  getOneProductTopping(id: ID!): ProductTopping
  getAllProductWithinAffiliateLevelDiscountPolicy(q: QueryGetListInput): ProductWithinAffiliateLevelDiscountPolicyPageData
  getOneProductWithinAffiliateLevelDiscountPolicy(id: ID!): ProductWithinAffiliateLevelDiscountPolicy
  getAllProductWithinDirectSubordinatesProductSalesBonusPolicy(q: QueryGetListInput): ProductWithinDirectSubordinatesProductSalesBonusPolicyPageData
  getOneProductWithinDirectSubordinatesProductSalesBonusPolicy(id: ID!): ProductWithinDirectSubordinatesProductSalesBonusPolicy
  getAllProductCanAddedToDirectSubordinatesProductSalesBonusPolicy(directSubordinatesProductSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductPageData
  getProductWithinDirectSubordinatesProductSalesBonusPolicies(directSubordinatesProductSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductWithinDirectSubordinatesProductSalesBonusPolicyPageData
  getAllProductWithinIndividualProductSalesBonusPolicy(q: QueryGetListInput): ProductWithinIndividualProductSalesBonusPolicyPageData
  getOneProductWithinIndividualProductSalesBonusPolicy(id: ID!): ProductWithinIndividualProductSalesBonusPolicy
  getAllProductCanAddedToIndividualProductSalesBonusPolicy(individualProductSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductPageData
  getProductWithinIndividualProductSalesBonusPolicies(individualProductSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductWithinIndividualProductSalesBonusPolicyPageData
  getAllProductWithinProductCommissionPolicy(q: QueryGetListInput): ProductWithinProductCommissionPolicyPageData
  getOneProductWithinProductCommissionPolicy(id: ID!): ProductWithinProductCommissionPolicy
  getAllProductCanAddedToProductCommissionPolicy(productCommissionPolicyId: ID!, q: QueryGetListInput): ProductPageData
  getProductWithinProductCommissionPolicies(productCommissionPolicyId: ID!, q: QueryGetListInput): ProductWithinProductCommissionPolicyPageData
  getAllProductWithinProductSalesBonusPolicy(q: QueryGetListInput): ProductWithinProductSalesBonusPolicyPageData
  getOneProductWithinProductSalesBonusPolicy(id: ID!): ProductWithinProductSalesBonusPolicy
  getAllProductCanAddedToProductSalesBonusPolicy(productSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductPageData
  getProductWithinProductSalesBonusPolicies(productSalesBonusPolicyId: ID!, q: QueryGetListInput): ProductWithinProductSalesBonusPolicyPageData
  getAllProductWithinRecurringProductCommissionPolicy(q: QueryGetListInput): ProductWithinRecurringProductCommissionPolicyPageData
  getOneProductWithinRecurringProductCommissionPolicy(id: ID!): ProductWithinRecurringProductCommissionPolicy
  getAllPromotion(q: QueryGetListInput): PromotionPageData
  getOnePromotion(id: ID!): Promotion
  getAllMyPromotion(q: QueryGetListInput): PromotionPageData
  getAllPromotionByCustomerId(q: QueryGetListInput, customerId: ID!): PromotionPageData
  getAllPromotionAssignment(q: QueryGetListInput): PromotionAssignmentPageData
  getOnePromotionAssignment(id: ID!): PromotionAssignment
  getAllPromotionAssignmentForCustomer(q: QueryGetListInput): PromotionAssignmentForCustomerPageData
  getQrInfo(qr: String!): Mixed
  decodeQRString(QRString: String!): QrCodeDecode
  getAllQRCode(q: QueryGetListInput): QRCodePageData
  getOneQRCode(id: ID!): QRCode
  getAllQRCodeScanLog(q: QueryGetListInput): QRCodeScanLogPageData
  getAllQRCodeStage(q: QueryGetListInput): QRCodeStagePageData
  getOneQRCodeStage(id: ID!): QRCodeStage
  getAllRecurringProductCommissionPolicy(q: QueryGetListInput): RecurringProductCommissionPolicyPageData
  getOneRecurringProductCommissionPolicy(id: ID!): RecurringProductCommissionPolicy
  getAllRecurringProductCommissionPolicyLog(q: QueryGetListInput): RecurringProductCommissionPolicyLogPageData
  getOneRecurringProductCommissionPolicyLog(id: ID!): RecurringProductCommissionPolicyLog
  getAllRecurringProductCommissionSchedule(q: QueryGetListInput): RecurringProductCommissionSchedulePageData
  getOneRecurringProductCommissionSchedule(id: ID!): RecurringProductCommissionSchedule
  manualRecurringCommissionPayment(id: ID!): RecurringProductCommissionSchedule
  manualRecurringCommissionPayments(filter: Mixed): [RecurringProductCommissionSchedule]
  getAllRecurringServiceContractTypeCommissionPolicy(q: QueryGetListInput): RecurringServiceContractTypeCommissionPolicyPageData
  getOneRecurringServiceContractTypeCommissionPolicy(id: ID!): RecurringServiceContractTypeCommissionPolicy
  getAllRecurringServiceContractTypeCommissionPolicyLog(q: QueryGetListInput): RecurringServiceContractTypeCommissionPolicyLogPageData
  getOneRecurringServiceContractTypeCommissionPolicyLog(id: ID!): RecurringServiceContractTypeCommissionPolicyLog
  getRecurringServiceContractTypeCommissionChildShopAffiliate(queryCommission: QueryGetListInput, queryShopAffiliate: QueryGetListInput): CommissionByChildShopAffiliatePageData
  getRecurringServiceContractTypeCommissionsLogStatistics(filter: Mixed): CommissionsStatistics
  getAllRecurringServiceContractTypeCommissionSchedule(q: QueryGetListInput): RecurringServiceContractTypeCommissionSchedulePageData
  getOneRecurringServiceContractTypeCommissionSchedule(id: ID!): RecurringServiceContractTypeCommissionSchedule
  getAllReferralCommissionLog(q: QueryGetListInput): ReferralCommissionLogPageData
  getAllReferralCommissionLogForShopAffiliate(q: QueryGetListInput): ReferralCommissionLogPageData
  getOneReferralCommissionLog(id: ID!): ReferralCommissionLog
  getReferralCommissionLogDataForCustomer: ReferralCommissionLogDataForCustomer
  getAllReferralCommissionLogDetail(q: QueryGetListInput): ReferralCommissionLogDetailPageData
  getOneReferralCommissionLogDetail(id: ID!): ReferralCommissionLogDetail
  shopGetStatisticReferralCommission: [StatisticReferralCommission]
  getAllReferralCommissionPolicy(q: QueryGetListInput): ReferralCommissionPolicyPageData
  getOneReferralCommissionPolicy(id: ID!): ReferralCommissionPolicy
  getAllReferralShopAffiliateRewardMilestone(q: QueryGetListInput): ReferralShopAffiliateRewardMilestonePageData
  getOneReferralShopAffiliateRewardMilestone(id: ID!): ReferralShopAffiliateRewardMilestone
  getReferralShopAffiliateRewardMilestoneConfig: ReferralShopAffiliateRewardMilestoneConfig
  getAllReportCode: Mixed
  getReportData(option: Mixed, code: String!): Mixed
  getMemberShopReport(memberId: ID!): Report
  getOverviewReport: Report
  getFilteredCollaborators(q: QueryGetListInput): CollaboratorPageData
  getOverviewCollaboratorReport(q: QueryGetListInput): OverviewCollaboratorsReport
  getCommissionReports(q: QueryGetListInput): OverviewCommissionPageData
  getCommissionReportsOverview(fromDate: String, toDate: String, sellerIds: [ID], branchId: ID, collaboratorId: ID, orderStatus: String): OverviewCommissionReport
  getCollaboratorsMediaReports(q: QueryGetListInput): CollaboratorPageData
  getProductsMediaReports(q: QueryGetListInput): CollaboratorProductPageData
  getOrderReports(q: QueryGetListInput): OverviewOrderPageData
  getOrderReportsOverview(fromDate: String, toDate: String, sellerIds: [ID], branchId: ID, isLate: Boolean): OverviewOrdersReport
  getPostReports(q: QueryGetListInput): OverviewPostPageData
  getPostReportsOverview(fromDate: String, toDate: String, memberId: ID, branchId: ID): OverviewPostsReport
  getProductReports(q: QueryGetListInput): OverviewProductPageData
  getProductReportsOverview(fromDate: String, toDate: String, sellerIds: [ID], branchId: ID): OverviewProductReport
  syncFacebookReport(accessToken: String): Boolean
  getAllRevenueSharingPolicy(q: QueryGetListInput): RevenueSharingPolicyPageData
  getOneRevenueSharingPolicy(id: ID!): RevenueSharingPolicy
  getAllRevenueSharingPolicyLog(q: QueryGetListInput): RevenueSharingPolicyLogPageData
  getOneRevenueSharingPolicyLog(id: ID!): RevenueSharingPolicyLog
  getAllService(q: QueryGetListInput): ServicePageData
  getOneService(id: ID!): Service
  getAllServiceCart(q: QueryGetListInput): ServiceCartPageData
  getOneServiceCart(id: ID!): ServiceCart
  getAllServiceContract(q: QueryGetListInput): ServiceContractPageData
  getAllServiceContractBranchChildrenShopAffiliate(q: QueryGetListInput): ServiceContractPageData
  getOneServiceContract(id: ID!): ServiceContract
  statisticServiceContract(filter: Mixed): StatisticServiceContractData
  getQRServiceContract(filter: Mixed): QrCode
  getAllServiceContractType(q: QueryGetListInput): ServiceContractTypePageData
  getOneServiceContractType(id: ID!): ServiceContractType
  getAllServiceContractTypeCategory(q: QueryGetListInput): ServiceContractTypeCategoryPageData
  getOneServiceContractTypeCategory(id: ID!): ServiceContractTypeCategory
  getAllServiceContractTypeCommissionPolicy(q: QueryGetListInput): ServiceContractTypeCommissionPolicyPageData
  getOneServiceContractTypeCommissionPolicy(id: ID!): ServiceContractTypeCommissionPolicy
  getAllServiceContractTypeCommissionPolicyLog(q: QueryGetListInput): ServiceContractTypeCommissionPolicyLogPageData
  getOneServiceContractTypeCommissionPolicyLog(id: ID!): ServiceContractTypeCommissionPolicyLog
  getServiceContractTypeCommissionStatistics(shopAffiliateId: String): ShopServiceContractTypeCommissionsStatistics
  getAllServiceContractTypeInServiceContract(q: QueryGetListInput): ServiceContractTypeInServiceContractPageData
  getOneServiceContractTypeInServiceContract(id: ID!): ServiceContractTypeInServiceContract
  getAllServiceContractTypePricePolicy(q: QueryGetListInput): ServiceContractTypePricePolicyPageData
  getOneServiceContractTypePricePolicy(id: ID!): ServiceContractTypePricePolicy
  getAllServiceContractTypeSessionLog(q: QueryGetListInput): ServiceContractTypeSessionLogPageData
  getOneServiceContractTypeSessionLog(id: ID!): ServiceContractTypeSessionLog
  getQRCreateServiceContractTypeSessionLog(serviceContractTypeInServiceContractId: String!): QRCreateServiceContractTypeSessionLog
  statisticServiceContractTypeSessionLog(filter: Mixed): StatisticServiceContractTypeSessionLogData
  getAllServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy(q: QueryGetListInput): ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyPageData
  getOneServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy(id: ID!): ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy
  getAllServiceContractTypeCanAddedToIndividualServiceContractTypeSalesBonusPolicy(individualServiceContractTypeSalesBonusPolicyId: ID!, q: QueryGetListInput): ServiceContractTypePageData
  getServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicies(individualServiceContractTypeSalesBonusPolicyId: ID!, q: QueryGetListInput): ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyPageData
  getAllServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy(q: QueryGetListInput): ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyPageData
  getOneServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy(id: ID!): ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy
  getAllServiceContractTypeCanAddedToRecurringServiceContractTypeCommissionPolicy(recurringServiceContractTypeCommissionPolicyId: ID!, q: QueryGetListInput): ServiceContractTypePageData
  getServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicies(recurringServiceContractTypeCommissionPolicyId: ID!, q: QueryGetListInput): ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyPageData
  getAllServiceContractTypeWithinServiceContractTypeCommissionPolicy(q: QueryGetListInput): ServiceContractTypeWithinServiceContractTypeCommissionPolicyPageData
  getOneServiceContractTypeWithinServiceContractTypeCommissionPolicy(id: ID!): ServiceContractTypeWithinServiceContractTypeCommissionPolicy
  getAllServiceContractTypeCanAddedToServiceContractTypeCommissionPolicy(serviceContractTypeCommissionPolicyId: ID!, q: QueryGetListInput): ServiceContractTypePageData
  getAllServiceReservation(q: QueryGetListInput): ServiceReservationPageData
  getOneServiceReservation(id: ID!): ServiceReservation
  getAllServiceTag(q: QueryGetListInput): ServiceTagPageData
  getOneServiceTag(id: ID!): ServiceTag
  getAllSetting(q: QueryGetListInput): SettingPageData
  getOneSetting(id: ID!): Setting
  getOneSettingByKey(key: String!): Setting
  getAllSettingGroup(q: QueryGetListInput): SettingGroupPageData
  getOneSettingGroup(id: ID!): SettingGroup
  getAllShipment(q: QueryGetListInput): ShipmentPageData
  getOneShipment(id: ID!): Shipment
  getAllDistributionRequest(q: QueryGetListInput): DistributionRequestPageData
  getPreBookingTimeSlotsByShopBranch(shopBranchId: ID!, targetDate: DateTime!): [PreBookingTimeSlot]
  getAllShopBranch(q: QueryGetListInput, staffPermissionScope: EStaffPermissionScope): ShopBranchPageData
  getOneShopBranch(id: ID!): ShopBranch
  getAllShopCategory(q: QueryGetListInput): ShopCategoryPageData
  getOneShopCategory(id: ID!): ShopCategory
  getAllShopComment(q: QueryGetListInput): ShopCommentPageData
  getOneShopComment(id: ID!): ShopComment
  getShopPaymentPayFrontsConfigUrl: ShopPaymentPayFrontsConfigUrlData
  getAllShopPost(q: QueryGetListInput): ShopPostPageData
  getOneShopPost(id: ID!): ShopPost
  getAllShopPostTag(q: QueryGetListInput): ShopPostTagPageData
  getOneShopPostTag(id: ID!): ShopPostTag
  getAllShopPostViewLog(q: QueryGetListInput): ShopPostViewLogPageData
  getOneShopPostViewLog(id: ID!): ShopPostViewLog
  getAllShopTopic(q: QueryGetListInput): ShopTopicPageData
  getOneShopTopic(id: ID!): ShopTopic
  getAllShopRegistration(q: QueryGetListInput): ShopRegistrationPageData
  getOneShopRegistration(id: ID!): ShopRegistration
  getAllSaleFeedComment(q: QueryGetListInput): SaleFeedCommentPageData
  getOneSaleFeedComment(id: ID!): SaleFeedComment
  getAllShopSaleFeed(q: QueryGetListInput): ShopSaleFeedPageData
  getOneShopSaleFeed(id: ID!): ShopSaleFeed
  getAllShopTable(q: QueryGetListInput): ShopTablePageData
  getOneShopTable(id: ID!): ShopTable
  getAllShopVideo(q: QueryGetListInput): ShopVideoPageData
  getOneShopVideo(id: ID!): ShopVideo
  getAllShopVoucher(q: QueryGetListInput): ShopVoucherPageData
  getOneShopVoucher(id: ID!): ShopVoucher
  getAllMyVoucher(q: QueryGetListInput): ShopVoucherPageData
  getAllShopVoucherByCustomerId(q: QueryGetListInput, customerId: ID!): ShopVoucherPageData
  getOneShopVoucherByCode(code: String!): ShopVoucher
  getAllShopAffiliate(q: QueryGetListInput): ShopAffiliatePageData
  getAllMyChildDirectChildShopAffiliate(q: QueryGetListInput): ShopAffiliatePageData
  getAllMyShopAffiliateReferred(q: QueryGetListInput): ShopAffiliatePageData
  getOneShopAffiliate(id: ID!): ShopAffiliate
  getShopAffiliateByRefererCodeAndShopId(referrerCode: String!, shopId: String): ShopAffiliatePublic
  getShopAffiliateReferralCommission(shopAffiliateId: String!, disbursementPeriodId: String): ShopAffiliateReferralCommissionData
  getAllShopAffiliateReferralCommissionLog(q: QueryGetListInput): ShopAffiliateReferralCommissionLogPageData
  getShopAffiliateByReferralUrl(url: String!): ShopAffiliatePublic
  countShopAffiliate(q: QueryGetListInput): CountShopAffiliate
  phoneIsShopAffiliate(phone: String!): Boolean
  getAllShopAffiliateDirectSubordinatesProductSalesBonusPolicy(q: QueryGetListInput): ShopAffiliateDirectSubordinatesProductSalesBonusPolicyPageData
  getAllShopAffiliateDirectSubordinatesProductSalesBonusPolicyOfDirectChildShopAffiliate(shopAffiliateDirectSubordinatesProductSalesBonusPolicyQueryInput: QueryGetListInput, shopAffiliateQueryInput: QueryGetListInput): ShopAffiliateDirectSubordinatesProductSalesBonusPolicyPageData
  getOneShopAffiliateDirectSubordinatesProductSalesBonusPolicy(id: ID!): ShopAffiliateDirectSubordinatesProductSalesBonusPolicy
  getAllShopAffiliateFeeLog(q: QueryGetListInput): ShopAffiliateFeeLogPageData
  getOneShopAffiliateFeeLog(id: ID!): ShopAffiliateFeeLog
  getShopAffiliateFeeLogData(shopAffiliateId: String): ShopAffiliateFeeLogData!
  getAllShopAffiliateIndividualProductSalesBonusPolicy(q: QueryGetListInput): ShopAffiliateIndividualProductSalesBonusPolicyPageData
  getAllShopAffiliateIndividualProductSalesBonusPolicyOfDirectChildShopAffiliate(shopAffiliateIndividualProductSalesBonusPolicyQueryInput: QueryGetListInput, shopAffiliateQueryInput: QueryGetListInput): ShopAffiliateIndividualProductSalesBonusPolicyPageData
  getOneShopAffiliateIndividualProductSalesBonusPolicy(id: ID!): ShopAffiliateIndividualProductSalesBonusPolicy
  getAllShopAffiliateIndividualServiceContractTypeSalesBonusPolicy(q: QueryGetListInput): ShopAffiliateIndividualServiceContractTypeSalesBonusPolicyPageData
  getAllShopAffiliateIndividualServiceContractTypeSalesBonusPolicyOfDirectChildShopAffiliate(shopAffiliateIndividualServiceContractTypeSalesBonusPolicyQueryInput: QueryGetListInput, shopAffiliateQueryInput: QueryGetListInput): ShopAffiliateIndividualServiceContractTypeSalesBonusPolicyPageData
  getOneShopAffiliateIndividualServiceContractTypeSalesBonusPolicy(id: ID!): ShopAffiliateIndividualServiceContractTypeSalesBonusPolicy
  getAllShopAffiliateLabel(q: QueryGetListInput): ShopAffiliateLabelPageData
  getOneShopAffiliateLabel(id: ID!): ShopAffiliateLabel
  getAllShopAffiliateLevelDiscountPolicy(q: QueryGetListInput): ShopAffiliateLevelDiscountPolicyPageData
  getOneShopAffiliateLevelDiscountPolicy(id: ID!): ShopAffiliateLevelDiscountPolicy
  statisticShopAffiliateProductCommissionPolicy: StatisticShopAffiliateProductCommissionPolicyData
  getAllShopAffiliateProductCommissionPolicy(q: QueryGetListInput): ShopAffiliateProductCommissionPolicyPageData
  getOneShopAffiliateProductCommissionPolicy(id: ID!): ShopAffiliateProductCommissionPolicy
  getAllShopAffiliateProductSalesBonusPolicy(q: QueryGetListInput): ShopAffiliateProductSalesBonusPolicyPageData
  getAllShopAffiliateProductSalesBonusPolicyOfDirectChildShopAffiliate(shopAffiliateProductSalesBonusPolicyQueryInput: QueryGetListInput, shopAffiliateQueryInput: QueryGetListInput): ShopAffiliateProductSalesBonusPolicyPageData
  getOneShopAffiliateProductSalesBonusPolicy(id: ID!): ShopAffiliateProductSalesBonusPolicy
  getAllShopAffiliateRecurringProductCommissionPolicy(q: QueryGetListInput): ShopAffiliateRecurringProductCommissionPolicyPageData
  getOneShopAffiliateRecurringProductCommissionPolicy(id: ID!): ShopAffiliateRecurringProductCommissionPolicy
  getAllShopAffiliateRecurringServiceContractTypeCommissionPolicy(q: QueryGetListInput): ShopAffiliateRecurringServiceContractTypeCommissionPolicyPageData
  getOneShopAffiliateRecurringServiceContractTypeCommissionPolicy(id: ID!): ShopAffiliateRecurringServiceContractTypeCommissionPolicy
  getAllShopAffiliateRequest(q: QueryGetListInput): ShopAffiliateRequestPageData
  getOneShopAffiliateRequest(id: ID!): ShopAffiliateRequest
  countPendingShopAffiliateRequest: Int
  haveShopAffiliateRequestPending: Boolean
  getAllShopAffiliateServiceContractTypeCommissionPolicy(q: QueryGetListInput): ShopAffiliateServiceContractTypeCommissionPolicyPageData
  getOneShopAffiliateServiceContractTypeCommissionPolicy(id: ID!): ShopAffiliateServiceContractTypeCommissionPolicy
  getAllShopAffiliateShopVoucherSharingPolicy(q: QueryGetListInput): ShopAffiliateShopVoucherSharingPolicyPageData
  getOneShopAffiliateShopVoucherSharingPolicy(id: ID!): ShopAffiliateShopVoucherSharingPolicy
  getAllShopDisbursementPeriod(q: QueryGetListInput): ShopDisbursementPeriodPageData
  getOneShopDisbursementPeriod(id: ID!): ShopDisbursementPeriod
  getAllShopServiceCategory(q: QueryGetListInput): ShopServiceCategoryPageData
  getOneShopServiceCategory(id: ID!): ShopServiceCategory
  getAllShopServiceSpecialist(q: QueryGetListInput): ShopServiceSpecialistPageData
  getOneShopServiceSpecialist(id: ID!): ShopServiceSpecialist
  getAllShopVoucherAssignment(q: QueryGetListInput): ShopVoucherAssignmentPageData
  getOneShopVoucherAssignment(id: ID!): ShopVoucherAssignment
  getAllShopVoucherAssignmentForCustomer(q: QueryGetListInput): ShopVoucherAssignmentForCustomerPageData
  getAllShopVoucherSharingPolicy(q: QueryGetListInput): ShopVoucherSharingPolicyPageData
  getOneShopVoucherSharingPolicy(id: ID!): ShopVoucherSharingPolicy
  getOneShopVoucherSharingPolicyMinigame(minigameId: String!): ShopVoucherSharingPolicy
  getAllShopVoucherSharingPolicyLog(q: QueryGetListInput): ShopVoucherSharingPolicyLogPageData
  getOneShopVoucherSharingPolicyLog(id: ID!): ShopVoucherSharingPolicyLog
  getAllShopVoucherWithinShopVoucherSharingPolicy(q: QueryGetListInput): ShopVoucherWithinShopVoucherSharingPolicyPageData
  getOneShopVoucherWithinShopVoucherSharingPolicy(id: ID!): ShopVoucherWithinShopVoucherSharingPolicy
  getAllShoppingCart(q: QueryGetListInput): ShoppingCartPageData
  getOneShoppingCart(id: ID!): ShoppingCart
  getShoppingWalletConfig: ShoppingWalletConfig
  getAllSignatureRegistrationRequest(q: QueryGetListInput): SignatureRegistrationRequestPageData
  getOneSignatureRegistrationRequest(id: ID!): SignatureRegistrationRequest
  getAllSpecsTemplate(q: QueryGetListInput): SpecsTemplatePageData
  getOneSpecsTemplate(id: ID!): SpecsTemplate
  getAllStaff(q: QueryGetListInput): StaffPageData
  getOneStaff(id: ID!): Staff
  getMyStaffPermissionScope: [StaffPermissionScopeData]
  getAllStaffPermission(q: QueryGetListInput): StaffPermissionPageData
  getOneStaffPermission(id: ID!): StaffPermission
  salesStatisticByShopAffiliate(input: SalesStatisticByShopAffiliateInput): SaleStatisticByShopAffiliate
  getRevenueTimeSeriesChartDataByShopAffiliate(input: SeriesChartByShopAffiliateInput): [SeriesChartItem]
  getIncomeTimeSeriesChartDataByShopAffiliate(input: SeriesChartByShopAffiliateInput): [SeriesChartItem]
  getAllTopSellingProductsByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticProductsRevenuePageData
  getAllTopSellingServiceContractTypesByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticServiceContractTypesRevenuePageData
  salesStatisticBranchShopAffiliateRevenue(input: SalesStatisticByShopAffiliateInput): SalesStatisticBranchShopAffiliateRevenue
  salesStatisticBranchShopAffiliateCounts(input: SalesStatisticByShopAffiliateInput): SalesStatisticBranchShopAffiliateCounts
  getAllSalesStatisticDirectChildShopAffiliateByShopAffiliate(input: SalesStatisticDirectChildShopAffiliateByShopAffiliateInput): SalesStatisticDirectChildShopAffiliateByShopAffiliatePageData
  getTopSellingProductsDirectChildrenShopAffiliateByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticProductsRevenuePageData
  getTopSellingProductsBranchChildrenShopAffiliateByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticProductsRevenuePageData
  getTopSellingServiceContractTypesDirectChildrenShopAffiliateByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticServiceContractTypesRevenuePageData
  getTopSellingServiceContractTypesBranchChildrenShopAffiliateByShopAffiliate(input: TopSellingByShopAffiliateInput): StatisticServiceContractTypesRevenuePageData
  statisticInformationCustomerByShopAffiliateId(shopAffiliateId: String): StatisticInformationCustomer
  statisticInformationCustomerByCustomerId(customerId: String): StatisticInformationCustomer
  statisticInformationShopAffiliateByShopAffiliateId(shopAffiliateId: String): StatisticInformationShopAffiliate
  statisticMyInformationShopAffiliate: StatisticInformationShopAffiliate
  shopStatisticRevenueOrderByMonth(filter: Mixed): StatisticAmountKeyByMonthCategory
  shopAffiliateStatisticRevenueOrderByMonth(filter: Mixed): StatisticAmountKeyByMonthCategory
  shopAffiliateStatisticFourTierChildShopAffiliateRevenueOrderByMonth(filter: Mixed): StatisticAmountKeyByMonthCategory
  shopAffiliateStatisticChildShopAffiliateRevenueOrderByMonth(filter: Mixed): StatisticAmountKeyByMonthCategory
  shopAffiliateStatisticChildShopAffiliate(startDate: DateTime, endDate: DateTime): ShopAffiliateStatisticChildShopAffiliateData
  statisticIncomeAndExpenditureCashFlow(startDate: DateTime, endDate: DateTime, options: StatisticIncomeAndExpenditureCashFlowOptionInput): StatisticIncomeAndExpenditureCashFlow
  statisticIncomeAndExpenditureCashFlowByMonth(startDate: DateTime, endDate: DateTime, options: StatisticIncomeAndExpenditureCashFlowOptionInput): [StatisticIncomeAndExpenditureCashFlow]
  statisticTotalAmountOrderByShopAffiliateIdByMonth(shopAffiliateId: ID, startDate: DateTime, endDate: DateTime): [StatisticTotalAmountOrderByShopAffiliate]
  statisticTotalAmountOrderByShopAffiliateMeByMonth(shopAffiliateId: ID, startDate: DateTime, endDate: DateTime): [StatisticTotalAmountOrderByShopAffiliate]
  customerGetMyStatisticIncome(startDate: DateTime, endDate: DateTime): StatisticIncomeCustomer
  getStatisticIncomeByCustomerId(customerId: String!, startDate: DateTime, endDate: DateTime): StatisticIncomeCustomer
  getSubordinatesStats: Mixed
  myStatisticReferral: ReferralAndDirectChildShopAffiliate
  statisticProductCommissionPolicy(q: QueryStatisticPolicyInput): StatisticProductCommissionPolicyPageData
  statisticProductSalesBonusPolicy(q: QueryStatisticPolicyInput): StatisticProductSalesBonusPolicyPageData
  statisticProductPricePolicy(q: QueryStatisticPolicyInput): StatisticProductPricePolicyPageData
  statisticPromotionPolicy(q: QueryStatisticPolicyInput): StatisticPromotionPolicyPageData
  statisticReferralCommission(startDate: DateTime, endDate: DateTime): StatisticReferralCommissionData
  getAllStoreHouseCommissionLog(q: QueryGetListInput): StoreHouseCommissionLogPageData
  getOneStoreHouseCommissionLog(id: ID!): StoreHouseCommissionLog
  getAllShopSubscription(q: QueryGetListInput): ShopSubscriptionPageData
  getAllSubscriptionPackage(q: QueryGetListInput): SubscriptionPackagePageData
  getOneSubscriptionPackage(id: ID!): SubscriptionPackage
  getAllSubscriptionRequest(q: QueryGetListInput): SubscriptionRequestPageData
  getOneSubscriptionRequest(id: ID!): SubscriptionRequest
  getAllSupplier(q: QueryGetListInput): SupplierPageData
  getOneSupplier(id: ID!): Supplier
  getAllSupportTicket(q: QueryGetListInput): SupportTicketPageData
  getOneSupportTicket(id: ID!): SupportTicket
  getAllSupportTicketComment(q: QueryGetListInput): SupportTicketCommentPageData
  getOneSupportTicketComment(id: ID!): SupportTicketComment
  getAllTable(q: QueryGetListInput): TablePageData
  getOneTable(id: ID!): Table
  getAllTascoInsuranceConfig(q: QueryGetListInput): TascoInsuranceConfigPageData
  getOneTascoInsuranceConfig(id: ID!): TascoInsuranceConfig
  getMyTascoInsuranceConfig: TascoInsuranceConfig
  getAllTask(q: QueryGetListInput): TaskPageData
  getOneTask(id: ID!): Task
  getAllTaskLog(q: QueryGetListInput): TaskLogPageData
  getOneTaskLog(id: ID!): TaskLog
  getOneTemplateConfig: TemplateConfig
  getAllTemplateConfigBanner(q: QueryGetListInput): TemplateConfigBannerPageData
  getOneTemplateConfigBanner(id: ID!): TemplateConfigBanner
  getAllThread(q: QueryGetListInput): ThreadPageData
  getOneThread(id: ID!): Thread
  getAllThreadLabel(q: QueryGetListInput): ThreadLabelPageData
  getOneThreadLabel(id: ID!): ThreadLabel
  getAllThreadMessage(q: QueryGetListInput): ThreadMessagePageData
  getOneThreadMessage(id: ID!): ThreadMessage
  getAllThreadNote(q: QueryGetListInput): ThreadNotePageData
  getOneThreadNote(id: ID!): ThreadNote
  getAllTopLeaderBoardBonusLog(q: QueryGetListInput): TopLeaderBoardBonusLogPageData
  getOneTopLeaderBoardBonusLog(id: ID!): TopLeaderBoardBonusLog
  getAllTopLeaderBoardBonusMilestone(q: QueryGetListInput): TopLeaderBoardBonusMilestonePageData
  getOneTopLeaderBoardBonusMilestone(id: ID!): TopLeaderBoardBonusMilestone
  getAllTopLeaderBoardBonusPolicy(q: QueryGetListInput): TopLeaderBoardBonusPolicyPageData
  getOneTopLeaderBoardBonusPolicy(id: ID!): TopLeaderBoardBonusPolicy
  getTopLeaderBoardBonusPolicyByType(typeLeaderBoard: ETypeLeaderBoardConfig!): TopLeaderBoardBonusPolicy
  getAllTopLeaderBoardBonusPolicyScheduleLog(q: QueryGetListInput): TopLeaderBoardBonusPolicyScheduleLogPageData
  getOneTopLeaderBoardBonusPolicyScheduleLog(id: ID!): TopLeaderBoardBonusPolicyScheduleLog
  getAllTrigger(q: QueryGetListInput): TriggerPageData
  getOneTrigger(id: ID!): Trigger
  getAllTriggerGroup(q: QueryGetListInput): TriggerGroupPageData
  getOneTriggerGroup(id: ID!): TriggerGroup
  getAllUnit(q: QueryGetListInput): UnitPageData
  getOneUnit(id: ID!): Unit
  getAllUser(q: QueryGetListInput): UserPageData
  getOneUser(id: ID!): User
  userGetMe: User
  getAllUserAccessLog(q: QueryGetListInput): UserAccessLogPageData
  getOneUserAccessLog(id: ID!): UserAccessLog
  getMyVacomConfig: VacomConfig
  getAllViettelPostService(q: QueryGetListInput): ViettelPostServicePageData
  getOneViettelPostService(id: ID!): ViettelPostService
  getAllViettelPostStore(q: QueryGetListInput): ViettelPostStorePageData
  getOneViettelPostStore(id: ID!): ViettelPostStore
  syncViettelPostStore(q: QueryGetListInput): ViettelPostStorePageData
  getAllWallet(q: QueryGetListInput): WalletPageData
  getMyWallets: [Wallet]
  getOneWallet(id: ID!): Wallet
  customerGetWalletBalance(walletType: String): WalletBalance
  getAllWalletTransaction(q: QueryGetListInput): WalletTransactionPageData
  getOneWalletTransaction(id: String!): WalletTransaction
  getAllWarehouse(q: QueryGetListInput): WarehousePageData
  getOneWarehouse(id: ID!): Warehouse
  getAllWarehouseProduct(q: QueryGetListInput, staffPermissionScope: EStaffPermissionScope): WarehouseProductPageData
  getOneWarehouseProduct(id: ID!): WarehouseProduct
  getProductStockNeeds(q: getProductStockNeedInput): [ProductStockNeedData]
  getAllWarehouseProductAudit(q: QueryGetListInput): WarehouseProductAuditPageData
  getOneWarehouseProductAudit(id: ID!): WarehouseProductAudit
  getAllWarehouseProductAuditItem(q: QueryGetListInput): WarehouseProductAuditItemPageData
  getOneWarehouseProductAuditItem(id: ID!): WarehouseProductAuditItem
  countWarehouseProductAuditItem(filter: Mixed!): Int
  getAllWarehouseProductAuditLog(q: QueryGetListInput): WarehouseProductAuditLogPageData
  getOneWarehouseProductAuditLog(id: ID!): WarehouseProductAuditLog
  getAllWarehouseProductHistory(q: QueryGetListInput): WarehouseProductHistoryPageData
  getOneWarehouseProductHistory(id: ID!): WarehouseProductHistory
  getAllWeather(q: QueryGetListInput): WeatherPageData
  getOneWeather(id: ID!): Weather
  getAllWriter(q: QueryGetListInput): WriterPageData
  getOneWriter(id: ID!): Writer
  getAllWriterGroup(q: QueryGetListInput): WriterGroupPageData
  getOneWriterGroup(id: ID!): WriterGroup
  getAllWriterNotification(q: QueryGetListInput): WriterNotificationPageData
  getOneWriterNotification(id: ID!): WriterNotification
  getAllYoutubeVideo(q: QueryGetListInput): YoutubeVideoPageData
  getAllYoutubeVideoGroup(q: QueryGetListInput): YoutubeVideoGroupPageData
  getOneYoutubeVideoGroup(id: ID!): YoutubeVideoGroup
  getAllZaloMiniAppConfig(q: QueryGetListInput): ZaloMiniAppConfigPageData
  getOneZaloMiniAppConfig(id: ID!): ZaloMiniAppConfig
  getOneZaloMiniAppConfigByCode(code: String!): ZaloMiniAppConfig
  agencyGetMyZaloMiniAppConfig: ZaloMiniAppConfig
  getAllZaloMiniAppShopDisplayConfig(q: QueryGetListInput): ZaloMiniAppShopDisplayConfigPageData
  getOneZaloMiniAppShopDisplayConfig(id: ID!): ZaloMiniAppShopDisplayConfig
  getAllZaloOASendMessageSetting(q: QueryGetListInput): ZaloOASendMessageSettingPageData
  getOneZaloOASendMessageSetting(id: ID!): ZaloOASendMessageSetting
  getDataForConnectZaloOA: ConnectZaloOAData
  getAllZaloOASetting(q: QueryGetListInput): ZaloOASettingPageData
  getOneZaloOASetting(id: ID!): ZaloOASetting
  flowZaloOA(data: FlowZaloOAUInput): Mixed
  getAllZaloShopConfig(q: QueryGetListInput): ZaloShopConfigPageData
  getMyZaloShopConfig: ZaloShopConfig
  getAllZaloUid(q: QueryGetListInput): ZaloUidPageData
  getOneZaloUid(id: ID!): ZaloUid
  getAllAgencyMemberBillPaymentMethod: [PaymentMethodData]
  getAgencyUserToken(agencyUserId: ID!): String
  customerDeleteAccount: Customer
  getAllInvitedCustomers(customerId: ID!, q: QueryGetListInput): InvitedCustomerPageData
  getCustomerToken(shopCode: String!): CustomerLoginData
  getGlobalCustomerDataByRefId(refId: String!): GlobalCustomer
  globalCustomerGetMe: GlobalCustomer
  globalCustomerDeleteAccount: GlobalCustomer
  globalCustomerIsPhoneExist(phone: String!, regionCode: String): GlobalCustomerCheckPhoneExist
  fetchCustomerGroup(groupId: ID!, q: QueryGetListInput): CustomerPageData
  getCustomerGroupResource: [CustomerGroupResource]
  driverGetMe: Driver
  getSuggestManychatFlows: [SuggestManychatFlow]
  getAListOfStoresByProvince: Mixed
  getMemberToken(memberId: ID!): String
  getShopDataByCustomer(memberIds: [ID]!): [Member]
  memberDeleteAccount: Member
  getAhamovePromotions(orderId: ID!): [AhamovePromotion]

  """Ví dụ : cityId=SGN"""
  getAllAhamoveDeliveryService(lat: Float, lng: Float, cityId: String): [AhamoveDeliveryService]
  getAllDeliveryService(orderId: ID!, ahamovePromotionCode: String): [DeliveryService]

  """Ví dụ : cityId=SGN"""
  getAllGrabExpressDeliveryService: [GrabExpressDeliveryService]
  getEOrderStatus: [EOrderStatus]
  getAllPaymentMethod(shopBranchId: ID): [PaymentMethodData]
  getNewProduct(limit: Int, categoryId: ID): [Product]
  getRandomProduct(limit: Int, categoryId: String): [Product]
  getTopSaleProduct(limit: Int, categoryId: ID): [Product]
  reportOrderReconciliation(filter: ReportOrderReconciliationInput): ReportOrderReconciliationData
  reportPaymentHistory(filter: ReportPaymentHistoryInput): ReportPaymentHistoryData
  reportShopCustomer: ReportShopCustomerData
  reportShopOrder(filter: ReportShopOrderInput!): ReportShopOrderData
  reportShopOrderKline(filter: ReportShopOrderInput!): KlineData
  reportShopProduct(filter: ReportShopProductInput!): ReportShopProductData
  reportShopVoucher(filter: ReportShopVoucherInput!): ReportShopVoucherData
  reportWarehouseProduct(filter: ReportWarehouseProductInput): ReportWarehouseProductData
  serviceReport: ServiceReportData
  serviceReportAdmin: ServiceReportData
  reportCollaborator(fromDate: String!, toDate: String!, memberId: ID): CollaboratorReport
  reportCustomer(fromDate: String!, toDate: String!, memberId: ID): CustomerReport
  reportOrder(
    fromDate: String!
    toDate: String!
    memberId: ID

    """day, week, month"""
    timeUnit: String
  ): OrderReport
  reportPromotion(fromDate: String!, toDate: String!, memberId: ID): PromotionReport
  reportQRCode(
    fromDate: String!
    toDate: String!
    memberId: ID

    """day, week, month"""
    timeUnit: String
  ): reportQRCode
  reportRewardPoint(fromDate: String!, toDate: String!, memberId: ID): RewardPointReport
  reportServiceReservation(
    fromDate: String!
    toDate: String!
    memberId: ID

    """day, week, month"""
    timeUnit: String
  ): ReportServiceReservation
  reportShop: ShopReport
  getOverviewAllCollaboratorProducts(branchId: ID, sellerIds: [ID]): OverviewMediaProductStats
  getOverviewAllCollaborators(branchId: ID, sellerIds: [ID]): OverviewMediaCollaboratorStats
  getTopMediaCollaboratorProducts(query: GetTopMediaCollaboratorProductsInput!): MediaCollaboratorProducts
  getTopMediaCollaborators(query: GetTopMediaCollaboratorsInput!): MediaCollaborators
  getAllNearByShopBranch(q: QueryGetListInput, lat: Float!, lng: Float!, maxDistance: Int!, staffPermissionScope: EStaffPermissionScope): ShopBranchPageData
  getZaloMiniAppShopBranch(q: QueryGetListInput, zaloMiniAppConfigCode: String!, lat: Float!, lng: Float!, maxDistance: Int!): ShopBranchPageData
  getAllShopWithPagination(lat: Float!, lng: Float!, categoryId: ID, search: String, orderNew: Boolean, limit: Int, page: Int): PublicShopPageData
  getAllShop(lat: Float!, lng: Float!, categoryId: ID, search: String, orderNew: Boolean, limit: Int, page: Int): [PublicShop]
  getShopConfig: ShopConfig
  getAllVoucher(categoryId: ID): [PublicVoucher]
  getRandomVoucher(
    """Số voucher muốn random , default = 8"""
    numberVoucher: Int
  ): [ShopVoucher]
  getShopVoucherByCode(code: String!): ShopVoucher
  staffGetMe: Staff
  markThreadSeen(threadId: ID!): Thread
  getTriggerEvents: Mixed
  getNearestWeather(lng: Float, lat: Float): Weather
  writerGetMe: Writer
  getZaloOaId: ZaloOaData
}

input QueryGetListInput {
  limit: Int
  offset: Int
  page: Int
  order: Mixed
  filter: Mixed
  search: String
}

input QueryStatisticPolicyInput {
  startDate: DateTime
  endDate: DateTime
  filter: Mixed
  limit: Int
  offset: Int
  order: Mixed
  page: Int
  search: String
}

type ReceivedOfferProduct {
  productId: String
  product: Product
  quantity: Int
}

type RecurringProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên chính sách"""
  name: String
  memberId: ID

  """Số kỳ trả thưởng (ví dụ 12)"""
  totalPeriods: Int

  """Loại kỳ: tuần, tháng,..."""
  periodType: ECommissionRecurringPeriodType

  """Chỉ dùng cho kỳ HÀNG THÁNG: ví dụ trả vào ngày 15 hàng tháng"""
  periodTime: Int

  """Số kỳ đầu bỏ qua (vd: 1 để bỏ qua kỳ trả sắp tới)"""
  startAfterPeriods: Int
  startDate: DateTime
  endDate: DateTime
  isActivated: Boolean

  """
  Nếu true: BE tự động trả thưởng khi đến kỳ; nếu false: cần admin can thiệp
  """
  isAutoPayout: Boolean
  rules: [RecurringProductCommissionPolicyRule]
}

type RecurringProductCommissionPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type RecurringProductCommissionPolicyLogPageData {
  data: [RecurringProductCommissionPolicyLog]
  total: Int
  pagination: Pagination
}

type RecurringProductCommissionPolicyPageData {
  data: [RecurringProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type RecurringProductCommissionPolicyRule {
  tier: Int!
  commissionType: ECommissionPolicyCommissionType!
  commissionValue: Float!
  maxCommission: Int
}

input RecurringProductCommissionPolicyRuleInput {
  tier: Int!
  commissionType: ECommissionPolicyCommissionType!
  commissionValue: Float!
  maxCommission: Int
}

type RecurringProductCommissionSchedule {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  orderId: ID

  """Chính sách áp dụng"""
  recurringProductCommissionPolicyId: ID
  productIds: [ID]

  """Số kỳ trả thưởng theo chính sách"""
  totalPeriods: Int

  """Số kỳ đã trả (khởi tạo là 0)"""
  paidPeriods: Int

  """Số tiền thanh toán mỗi kỳ"""
  amountCommissionPerPeriod: Int

  """Tổng số hoa hồng = commissionPerPeriod * totalPeriods"""
  totalAmountCommission: Int

  """Ngày trả thưởng kế tiếp"""
  nextPaymentDate: DateTime

  """Đánh dấu nếu đã thanh toán đủ"""
  isCompleted: Boolean

  """Tổng số kỳ tích lũy có thể trả"""
  accumulatedPeriods: Int

  """Ngày cuối cùng được tích lũy"""
  lastAccumulationDate: DateTime
  status: ERecurringCommissionStatus
}

type RecurringProductCommissionSchedulePageData {
  data: [RecurringProductCommissionSchedule]
  total: Int
  pagination: Pagination
}

type RecurringServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  type: ECommissionRuleType
  name: String
  totalPeriods: Int
  periodType: ECommissionRecurringPeriodType
  periodTime: Int
  startAfterPeriods: Int
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  memberId: ID
  isAutoPayout: Boolean
  rules: [CommonCommissionRule]
  specialRules: [SpecialRecurringCommissionPolicyRuleCommon]
  periodAllocations: [PeriodCommissionAllocation]
  serviceContractTypeWithinRecurringServiceContractTypeCommissionPolices: [ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy]
}

type RecurringServiceContractTypeCommissionPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  recurringServiceContractTypeCommissionScheduleId: ID
  affiliateId: ID
  shopAffiliateId: ID
  shopAffiliate: ShopAffiliate
  globalCustomerId: ID
  customerId: ID
  customerPhone: String
  targetAffiliateId: ID
  targetShopAffiliateId: ID
  targetShopAffiliate: ShopAffiliate
  targetGlobalCustomerId: ID
  targetCustomerId: ID
  targetCustomerPhone: String
  serviceContractId: ID
  serviceContractCode: String
  serviceContractTypeId: ID
  serviceContractTypeName: String
  quantity: Int
  revenue: Mixed
  recurringServiceContractTypeCommissionPolicyId: ID
  recurringServiceContractTypeCommissionPolicyName: String
  status: ERecurringCommissionStatus
  isAutoPayout: Boolean
  alowApprovalAt: DateTime
  approvalAt: DateTime
  amount: Mixed
}

type RecurringServiceContractTypeCommissionPolicyLogPageData {
  data: [RecurringServiceContractTypeCommissionPolicyLog]
  total: Int
  pagination: Pagination
}

type RecurringServiceContractTypeCommissionPolicyPageData {
  data: [RecurringServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type RecurringServiceContractTypeCommissionSchedule {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  recurringServiceContractTypeCommissionPolicyId: ID
  recurringServiceContractTypeCommissionPolicyName: String

  """Số kỳ trả thưởng theo chính sách"""
  totalPeriods: Int

  """Số kỳ đã trả (khởi tạo là 0)"""
  paidPeriods: Int
  paidAmountCommission: Mixed
  totalAmountCommission: Mixed
  memberId: ID
  revenue: Int
  serviceContractId: ID
  serviceContractCode: String
  serviceContractTypeId: ID
  quantity: Int
  serviceContractTypeName: String
  customerId: ID
  globalCustomerId: ID
  shopAffiliateId: ID
  shopAffiliate: ShopAffiliate
  affiliateId: ID
  targetCustomerId: ID
  targetGlobalCustomerId: ID
  targetShopAffiliateId: ID
  targetShopAffiliate: ShopAffiliate
  targetAffiliateId: ID
  isAutoPayout: Boolean
  status: ERecurringCommissionStatus
}

type RecurringServiceContractTypeCommissionSchedulePageData {
  data: [RecurringServiceContractTypeCommissionSchedule]
  total: Int
  pagination: Pagination
}

type ReferralAndDirectChildShopAffiliate {
  totalReferralCount: Int
  totalReferralJoinedCount: Int
  latestTimeReferral: DateTime
  totalDirectChildShopAffiliate: Int
  latestTimeDirectChildShopAffiliate: DateTime
}

type ReferralCommissionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: String

  """Mã khách hàng của người giới thiệu"""
  presenterCustomerId: String

  """Mã đối tác của người giới thiệu"""
  presenterAffiliateId: String

  """Tên của người giới thiệu"""
  presenterCustomerName: String

  """Số điện thoại của người giới thiệu"""
  presenterCustomerPhone: String

  """Mã khách hàng của người được giới thiệu"""
  presenteeCustomerId: String

  """Mã đối tác của người được giới thiệu"""
  presenteeAffiliateId: String

  """Tên của người được giới thiệu"""
  presenteeCustomerName: String

  """Số điện thoại của người được giới thiệu"""
  presenteeCustomerPhone: String

  """Trạng thái"""
  status: ReferralCommissionLogStatus

  """Thời điểm"""
  time: DateTime
  details: [ReferralCommissionLogDetail]
  amount: Float
}

type ReferralCommissionLogDataForCustomer {
  """Tiền hoa hồng giới thiệu"""
  totalAmount: Float

  """Tổng giới thiệu"""
  totalReferralCommissionLog: Int

  """Tổng giới thiệu thành công"""
  approvedReferralCommissionLog: Int
}

type ReferralCommissionLogDetail {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: String

  """Mã lịch sử thưởng giới thiệu"""
  referralCommissionLogId: String

  """Mã nhận người hoa hồng"""
  receiverId: String

  """Mã đối tác người nhận hoa hồng"""
  receiverAffiliateId: String

  """Tên người nhận hoa hồng"""
  receiverName: String

  """Cấp bậc"""
  level: Int

  """Số tiền được nhận"""
  amount: Float
  status: ReferralCommissionLogStatus
  receiver: Customer
  receiverAffiliate: ShopAffiliate
  referralCommissionLog: ReferralCommissionLog
}

type ReferralCommissionLogDetailPageData {
  data: [ReferralCommissionLogDetail]
  total: Int
  pagination: Pagination
}

type ReferralCommissionLogPageData {
  data: [ReferralCommissionLog]
  total: Int
  pagination: Pagination

  """Tổng thưởng giới thiệu"""
  totalCommissionAmount: Float
}

enum ReferralCommissionLogStatus {
  """Chờ duyệt"""
  PENDING

  """Thất bại"""
  CANCELED

  """Đã duyệt"""
  APPROVED

  """Vô hiệu hóa"""
  DISABLED
}

type ReferralCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: String

  """Kích hoạt"""
  isActive: Boolean

  """Thiết lập thưởng giới thiệu"""
  referralRules: [ReferralCommissionPolicyRule]

  """Thiết lập KPI thưởng giới thiệu"""
  kpiRules: [KpiReferralCommissionPolicy]
}

enum ReferralCommissionPolicyCommissionType {
  """Cố định"""
  FIXED

  """Phần trăm"""
  PERCENTAGE
}

type ReferralCommissionPolicyPageData {
  data: [ReferralCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ReferralCommissionPolicyRule {
  """Cấp"""
  tier: Int

  """Loại thưởng hoa hồng"""
  commissionType: ReferralCommissionPolicyCommissionType

  """Giá trị thưởng hoa hồng"""
  commissionValue: Float
}

input ReferralCommissionPolicyRuleInput {
  """Cấp"""
  tier: Int

  """Loại thưởng hoa hồng"""
  commissionType: ReferralCommissionPolicyCommissionType

  """Giá trị thưởng hoa hồng"""
  commissionValue: Float
}

type ReferralCustomer {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã Người Giới Thiệu"""
  refCustomerId: ID

  """Mã khách hàng"""
  customerId: ID

  """Tên Người Giới Thiệu"""
  name: String

  """Số điện thoại Người Giới Thiệu"""
  phone: String

  """Avatar Người Giới Thiệu"""
  avatar: String

  """Người giới thiệu"""
  refCustomer: GlobalCustomer

  """Khách hàng"""
  customer: GlobalCustomer
  commissionBalance: Float
}

type ReferralCustomerPageData {
  data: [ReferralCustomer]
  total: Int
  pagination: Pagination
}

type ReferralData {
  """Mã CTV sàn"""
  idGlobalCustomer: String

  """Số tiền hoa hồng"""
  commissionAmount: Float

  """Mã ví nhận"""
  walletId: String

  """Nội dung"""
  note: String
}

type ReferralShopAffiliateRewardMilestone {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  referralThreshold: Int
  reward: String
  rewardType: EAchievementRewardType
  balanceAwarded: Mixed
  referralShopAffiliateRewardMilestoneConfigId: ID
  memberId: ID
}

type ReferralShopAffiliateRewardMilestoneConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  isActivated: Boolean
  referralShopAffiliateRewardMilestones: [ReferralShopAffiliateRewardMilestone]
}

type ReferralShopAffiliateRewardMilestoneConfigPageData {
  data: [ReferralShopAffiliateRewardMilestoneConfig]
  total: Int
  pagination: Pagination
}

type ReferralShopAffiliateRewardMilestonePageData {
  data: [ReferralShopAffiliateRewardMilestone]
  total: Int
  pagination: Pagination
}

input RegisterCustomerByPhoneInput {
  phone: String!
  idToken: String
  deviceId: String
  deviceToken: String
  referrerCode: String
}

input RegisterMemberInput {
  agencyCode: String
  code: String
  username: String!
  name: String!
  avatar: String
  phone: String!
  shopName: String!
  password: String!
  shopLogo: String
  address: String
  provinceId: String
  districtId: String
  wardId: String
  shopType: EShopType
  identityCardNumber: String
  gender: String
  birthday: DateTime
  initFeatureGroups: [EFeatureGroup]
}

type Report {
  charts: Mixed
}

type ReportOrderReconciliationData {
  """Tổng đơn"""
  totalOrder: Int

  """Tổng tiền đã đối soát"""
  reconciledAmount: Float

  """Tổng tiền chưa đối soát"""
  unreconciledAmount: Float
}

input ReportOrderReconciliationInput {
  fromDate: String
  toDate: String
  shopBranchId: ID
  pickupMethod: String
  paymentMethod: String
  orderReconciliationStatus: String
}

type ReportPaymentHistoryData {
  """Tổng đơn"""
  totalOrder: Int

  """Tổng đơn đã hoàn thành"""
  totalCompletedOrder: Float

  """Tổng tiền đã thanh toán"""
  totalCompletedOrderAmount: Float
}

input ReportPaymentHistoryInput {
  fromDate: String
  toDate: String
  shopBranchId: ID
  paymentMethod: String
}

type reportQRCode {
  summary: Mixed
  top10QRCodeScan: Mixed
  chart: Mixed
}

type ReportServiceReservation {
  summary: Mixed
  topServices: Mixed
  topShops: Mixed
  topRevenue: Mixed
  chart: Mixed
}

type ReportShopCustomerData {
  total: Int
}

type ReportShopOrderData {
  pending: Int
  confirmed: Int
  delivering: Int
  completed: Int
  canceled: Int
  failure: Int
  total: Int
  pendingRevenue: Float
  revenue: Float
  partnerShipfee: Float
  shipfee: Float
  discount: Float
}

input ReportShopOrderInput {
  fromDate: String
  toDate: String
  shopBranchId: ID
}

type ReportShopProductData {
  top10: [ProductOrder]
}

input ReportShopProductInput {
  fromDate: String!
  toDate: String!
  shopBranchId: ID
}

type ReportShopVoucherData {
  top10: [VoucherOrder]
}

input ReportShopVoucherInput {
  fromDate: String!
  toDate: String!
  shopBranchId: ID
}

type ReportWarehouseProductData {
  """Tổng số lượng đang tồn"""
  totalInStock: Int

  """Tổng tiền phiếu nhập"""
  importAmount: Float

  """Tổng tiền phiếu xuất"""
  exportAmount: Float
}

input ReportWarehouseProductInput {
  branchId: ID
  categoryId: ID
  productId: ID
}

input RequestToAhamoveInput {
  requestId: String!
  tierCode: String
  num: Int
}

type RevenueSharingPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  sharingType: ERevenueSharingType
  sharingValue: Float
  maxValueSharing: Float
  memberId: String
  isActivated: Boolean
  applyShopAffiliateId: String
  applyShopAffiliateName: String
  applyShopAffiliate: ShopAffiliate
  totalAmountSharingApproved: Mixed
  totalAmountSharingCanceled: Mixed
  totalAmountSharingPending: Mixed
  totalRevenueSharingApproved: Mixed
  totalRevenueSharingCanceled: Mixed
  totalRevenueSharingPending: Mixed
}

type RevenueSharingPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  targetAffiliateId: ID
  targetAffiliateName: String
  targetShopAffiliateId: ID
  targetShopAffiliateName: String
  targetGlobalCustomerId: ID
  targetCustomerId: ID
  targetCustomerName: String
  targetShopAffiliate: ShopAffiliate
  buyerCustomerId: ID
  buyerCustomerName: String
  buyerCustomerPhone: String
  orderId: ID
  orderCode: String
  status: ERevenueSharingPolicyLogStatus
  revenue: Mixed
  amount: Mixed
}

type RevenueSharingPolicyLogPageData {
  data: [RevenueSharingPolicyLog]
  total: Int
  pagination: Pagination
}

type RevenueSharingPolicyPageData {
  data: [RevenueSharingPolicy]
  total: Int
  pagination: Pagination
}

type RewardPointConfig {
  """Kích hoạt tính năng điểm thưởng"""
  active: Boolean

  """Tính điểm thưởng theo đơn hay sản phẩm order,product"""
  rewardBy: String

  """Đơn vj tính trên đơn hàng point,cast"""
  rewardUnit: String

  """Giá trị điểm quy đổi trên 1000"""
  value: Int

  """Giá trị điểm thưởng tối đa có thể nhận được"""
  maxValue: Int
}

input RewardPointConfigInput {
  """Kích hoạt tính năng điểm thưởng"""
  active: Boolean

  """Tính điểm thưởng theo đơn hay sản phẩm order,product"""
  rewardBy: String

  """Đơn vj tính trên đơn hàng point,cast"""
  rewardUnit: String

  """Giá trị điểm quy đổi trên 1000"""
  value: Int

  """Giá trị điểm thưởng tối đa có thể nhận được"""
  maxValue: Int
}

type RewardPointLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Loại điểm RECEIVE_FROM_ORDER,RECEIVE_FROM_TASK,USE_FOR_ORDER"""
  type: String

  """Giá trị"""
  value: Int

  """Đữ liệu kèm theo"""
  meta: Mixed
  orderCode: String
  orderId: ID
  taskId: ID
  taskCode: String
  member: Member
  customer: Customer
  order: Order
}

type RewardPointLogPageData {
  data: [RewardPointLog]
  total: Int
  pagination: Pagination
}

type RewardPointReport {
  summary: Mixed
  topCustomer: Mixed
}

type RuleToApplyAdvanced {
  totalRevenue: Int
  totalPoint: Int
}

input RuleToApplyAdvancedInput {
  totalRevenue: Int!
  totalPoint: Int!
}

type S3Url {
  presignedUrl: String
  url: String
}

type SaleFeedComment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã bản tin"""
  saleFeedId: ID

  """Mã member"""
  memberId: ID

  """Nội dung"""
  content: String

  """Hình ảnh"""
  images: [String]

  """Mã global"""
  globalId: String

  """Ngày xoá"""
  deletedAt: DateTime

  """Khách hàng"""
  globalCustomer: GlobalCustomer
}

type SaleFeedCommentPageData {
  data: [SaleFeedComment]
  total: Int
  pagination: Pagination
}

type SaleFeedContent {
  """Nội dung"""
  content: String

  """Hình ảnh"""
  images: [String]
}

input SaleFeedContentInput {
  """Nội dung"""
  content: String

  """Hình ảnh"""
  images: [String]
}

type SaleInformationStatistic {
  totalOrderCount: Int
  totalOrderCompletedCount: Int
  totalOrderAmount: Mixed
  totalCommissionAmount: Mixed
  totalProductSalesBonusAmount: Mixed
  totalProductSalesBasicBonusAmount: Mixed
  totalProductSalesAdvancedBonusAmount: Mixed
  totalReferralCommissionAmount: Mixed
  totalCompletedServiceContracts: Mixed
  totalAmountCompletedServiceContracts: Mixed
  totalServiceQuantityInCompletedContracts: Mixed
}

type SalePointConfig {
  """Bật / tắt salePoint"""
  active: Boolean

  """Doanh so tối thiểu"""
  minimumSale: Float

  """Noi dung dieu khoan"""
  termsAndConditions: String
}

input SalePointConfigInput {
  """Bật / tắt salePoint"""
  active: Boolean

  """Doanh so tối thiểu"""
  minimumSale: Float

  """Noi dung dieu khoan"""
  termsAndConditions: String
}

type SalesStatisticBranchShopAffiliateCounts {
  totalDirectChildShopAffiliateCount: Mixed
  newDirectChildShopAffiliateCount: Mixed
  totalBranchShopAffiliateCount: Mixed
  newBranchShopAffiliateCount: Mixed
}

type SalesStatisticBranchShopAffiliateRevenue {
  actualRevenue: Mixed
  expectedRevenue: Mixed
}

input SalesStatisticByShopAffiliateInput {
  shopAffiliateFilter: Mixed
  startDate: DateTime
  endDate: DateTime
}

type SalesStatisticDirectChildShopAffiliateByShopAffiliate {
  shopAffiliateId: String
  shopAffiliatePhone: String
  shopAffiliateName: String
  shopAffiliatePhoneCreatedAt: String
  shopAffiliatePhoneAvatarUrl: String
  shopAffiliate: ShopAffiliatePublic
  actualRevenue: Mixed
  expectedRevenue: Mixed
  paidCount: Mixed
  pendingCount: Mixed
  directChildShopAffiliateCount: Mixed
  childShopAffiliatesCount: Mixed
  newDirectChildShopAffiliateCount: Mixed
  newChildShopAffiliateCount: Mixed
  branchShopAffiliateActualRevenue: Mixed
  branchShopAffiliateExpectedRevenue: Mixed
}

input SalesStatisticDirectChildShopAffiliateByShopAffiliateInput {
  shopAffiliateFilter: Mixed
  startDate: DateTime
  endDate: DateTime
  sort: Mixed
  page: Int
  limit: Int
  search: String
}

type SalesStatisticDirectChildShopAffiliateByShopAffiliatePageData {
  data: [SalesStatisticDirectChildShopAffiliateByShopAffiliate]
  total: Int
  pagination: Pagination
}

type SaleStatisticByShopAffiliate {
  summary: SaleStatisticSummaryByShopAffiliate
  incomeSummary: SaleStatisticIncomeSummaryByShopAffiliate
}

type SaleStatisticIncomeSummaryByShopAffiliate {
  expectedIncome: Mixed
  actualIncome: Mixed
  walletExpense: Mixed
}

type SaleStatisticSummaryByShopAffiliate {
  actualRevenue: Mixed
  expectedRevenue: Mixed
  actualSales: Mixed
  expectedSales: Mixed
  totalChildShopAffiliate: Mixed
  newChildShopAffiliate: Mixed
}

input SaveProductWithinAffiliateLevelDiscountPolicyInput {
  affiliateLevelDiscountPolicyId: String!
  productWithinAffiliateLevelDiscountPolicies: [ProductWithinAffiliateLevelDiscountPolicyInput]
}

input SaveProductWithinDirectSubordinatesProductSalesBonusPolicyInput {
  directSubordinatesProductSalesBonusPolicyId: String!
  productWithinDirectSubordinatesProductSalesBonusPolicies: [CreateProductWithinDirectSubordinatesProductSalesBonusPolicyInput]
}

input SaveProductWithinIndividualProductSalesBonusPolicyInput {
  individualProductSalesBonusPolicyId: String!
  productWithinIndividualProductSalesBonusPolicies: [CreateProductWithinIndividualProductSalesBonusPolicyInput]
}

input SaveProductWithinProductCommissionPolicyInput {
  productCommissionPolicyId: String!
  productWithinProductCommissionPolicies: [CreateProductWithinProductCommissionPolicyInput]
}

input SaveProductWithinProductSalesBonusPolicyInput {
  productSalesBonusPolicyId: String!
  productWithinProductSalesBonusPolicies: [CreateProductWithinProductSalesBonusPolicyInput]
}

input SaveProductWithinRecurringProductCommissionPolicyInput {
  recurringProductCommissionPolicyId: String!
  productWithinRecurringProductCommissionPolicies: [CreateProductWithinRecurringProductCommissionPolicyInput]
}

input SaveServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput {
  individualServiceContractTypeSalesBonusPolicyId: String!
  serviceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicies: [CreateServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyInput]
}

input SaveServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput {
  recurringServiceContractTypeCommissionPolicyId: String!
  serviceContractTypeWithinRecurringServiceContractTypeCommissionPolicies: [CreateServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyInput]
}

input SaveServiceContractTypeWithinServiceContractTypeCommissionPolicyInput {
  serviceContractTypeCommissionPolicyId: String!
  serviceContractTypeWithinServiceContractTypeCommissionPolicies: [CreateServiceContractTypeWithinServiceContractTypeCommissionPolicyInput]
}

input SaveShopVoucherWithinShopVoucherWithinShopVoucherSharingPolicyInput {
  shopVoucherSharingPolicyId: ID!
  shopVoucherWithinShopVoucherSharingPolicies: [CreateShopVoucherWithinShopVoucherSharingPolicyInput]
}

input SendForgotPasswordEmailInput {
  username: String!
  callbackUrl: String!
}

type SEOConfig {
  """Tiêu đề """
  title: String

  """Hình ảnh """
  images: [imageData]

  """Mô tả """
  description: String

  """Các keyword cho SEO """
  keywords: String
}

input SEOConfigInput {
  """Tiêu đề """
  title: String

  """Hình ảnh """
  images: [imageDataInput]

  """Mô tả """
  description: String

  """Các keyword cho SEO """
  keywords: String
}

input SeriesChartByShopAffiliateInput {
  shopAffiliateFilter: Mixed
  startDate: DateTime
  endDate: DateTime
  dateBucketUnit: EDateBucketUnit
}

type SeriesChartItem {
  period: DateTime
  value: Mixed
}

input SeriesChartItemInput {
  period: DateTime
  value: Mixed
}

type Service {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Trạng thái ẩn"""
  isHidden: Boolean

  """Slug"""
  slug: String

  """Ngày ẩn"""
  hiddenAt: DateTime

  """ID cửa hàng"""
  memberId: String

  """Cửa hàng"""
  member: Member

  """Tên dịch vụ"""
  name: String

  """ID danh mục dịch vụ"""
  shopServiceCategoryId: String

  """Danh mục dịch vụ"""
  shopServiceCategory: ShopServiceCategory

  """Danh sách ID loại dịch vụ"""
  serviceTagIds: [String]

  """Danh sách loại dịch vụ"""
  serviceTags: [ServiceTag]

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String

  """Giá dịch vụ"""
  price: Float

  """Mô tả dịch vụ"""
  description: String

  """Hình ảnh"""
  images: [String]

  """video """
  video: String

  """Loại địa điểm có thể chọ AT_SHOP,AT_RESERVER"""
  availableAddressType: [String]

  """Thời gian tối thiểu để đặt trước: ...... ngày trước ngày hẹn(bắt buộc)"""
  minAdvanceReservationInDay: Int

  """Thiết lập cho phép/không cho phép thay đổi """
  canChangeReservation: Boolean

  """ Thời gian tối thiểu để thay đổi: ...... ngày trước ngày hẹn (bắt buộc)
  """
  minAdvanceReservationChangeInDay: Int

  """Thiết lập cho phép/không chop phép hủy"""
  canCancelReservation: Boolean

  """ Thời gian tối thiểu để hủy: ...... ngày trước ngày hẹn (bắt buộc)"""
  minAdvanceReservationCancelInDay: Int

  """
  Thiết lập chuyên viên phụ trách: cho phép người đặt chọn/không được chọn chuyên viên (bắt buộc)
  """
  canReserverSetSpecialist: Boolean

  """Danh sách ID Chuyên viên"""
  shopServiceSpecialistIds: [String]

  """Danh sách Chuyên viên"""
  shopServiceSpecialists: [ShopServiceSpecialist]

  """Danh sách dịch vụ bổ sung"""
  additionalServices: [AdditionalService]
}

type ServiceCart {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  globalCustomerId: ID
  customerId: ID
  memberId: ID
  serviceContractTypeId: ID
  amount: Int
  serviceContractType: ServiceContractType
}

type ServiceCartPageData {
  data: [ServiceCart]
  total: Int
  pagination: Pagination
}

type ServiceContract {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  code: String
  customerId: ID
  customerPhone: String
  customerName: String
  startDate: DateTime
  endDate: DateTime
  isPaymentToSupplier: Boolean
  usedSessions: Int
  name: String
  serviceContractTypeQuantity: Int
  shopBranchId: ID
  shopBranchName: String
  shopBranch: ShopBranch
  haveIssueInvoice: Boolean
  allowPaymentToSupplier: Boolean
  paymentMethods: [EPaymentMethod]
  paymentMethod: EPaymentMethod
  paymentStatus: EServiceContractPaymentStatus
  paymentQR: String
  paymentMeta: Mixed
  paymentMetas: [Mixed]
  bankTransferInformation: Bank
  supplierIds: [ID]
  customerNote: String
  staffSaleId: ID
  staffSale: Staff
  staffSpecialistIds: [ID]
  serviceContractTypeIds: [ID]
  shopVoucherIds: [ID]
  shopVouchers: [ShopVoucher]
  hasValueAddedTax: Boolean
  totalValueAddedTaxAmount: Mixed
  originalTotalAmount: Mixed
  totalDiscountAmountByShopVoucher: Mixed
  totalDiscountAmount: Mixed
  totalServiceContractTypePricePolicyDiscount: Mixed
  totalExtraFee: Mixed
  subTotalAmount: Mixed
  totalAmount: Mixed
  paymentDate: DateTime
  isActivated: Boolean
  imageUrls: [String]
  status: EServiceContractStatus
  canceledReason: String
  referrerShopAffiliateId: ID
  referrerShopAffiliateName: String
  referrerCustomerName: String
  referrerCustomerId: ID
  referrerGlobalCustomerId: ID
  referrerShopAffiliatePhone: String
  referrerShopAffiliateCode: String
  rejectedReason: String
  isExpired: Boolean
  createBy: EServiceContractCreateBy
  serviceContractTypeInServiceContracts: [ServiceContractTypeInServiceContract]
  isInvoiceHasIssues: Boolean
  errorMessage: String
  isValid: Boolean
}

type ServiceContractDraft {
  serviceContract: ServiceContract
  invalid: Boolean
  invalidReason: String
}

type ServiceContractPageData {
  data: [ServiceContract]
  total: Int
  pagination: Pagination
  error: String
}

type ServiceContractPaymentByMethod {
  paymentMethod: EPaymentMethod
  totalAmount: Mixed
  count: Int
}

type ServiceContractType {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  code: String
  name: String
  description: String
  memberId: ID
  serviceContractTypeCategoryId: ID
  serviceContractTypeCategoryIsActivated: Boolean
  serviceContractTypeCategoryName: String
  serviceContractTypeCategory: ServiceContractTypeCategory
  isActivated: Boolean
  hasNumberSessions: Boolean
  imageUrl: String
  hasCheckIn: Boolean
  supplierId: ID
  supplier: Supplier
  otherImageUrls: [String]
  staffSpecialistIds: [String]
  staffSpecialists: [Staff]
  shopBranchIds: [String]
  shopBranches: [ShopBranch]
  numberSessions: Int
  durationDate: Int
  basePrice: Int
  isFixedPrice: Boolean
  isContactRequired: Boolean
  isPriceCalculatedLater: Boolean
  customForms: [CustomForm]
  customFields: [CustomField]
  soldQuantity: Int
  serviceContractCount: Int
  uniqueCustomerBuyers: Int
  isAllowPaymentToSupplier: Boolean
  unitId: ID
  unitName: String
  unit: Unit
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  valueAddedTaxAmount: Float
  isAutoCompletedOnPaid: Boolean
  priceRuleScript: String
}

type ServiceContractTypeCategory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  priority: Int
  memberId: ID
  name: String
  isActivated: Boolean
  description: String
  imageUrl: String
  imageUrls: [String]
  countServiceContractType: Int
}

type ServiceContractTypeCategoryPageData {
  data: [ServiceContractTypeCategory]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  isActive: Boolean
  name: String
  memberId: String
  type: CommissionRuleType
  startDate: DateTime
  endDate: DateTime
  rules: [CommonCommissionRule]
  specialRules: [SpecialCommissionPolicyRuleCommon]
  settlementDate: DateTime
  settlementDuration: Int
  applyCount: Int
  serviceContractTypeWithinServiceContractTypeCommissionPolicies: [ServiceContractTypeWithinServiceContractTypeCommissionPolicy]
  totalCommission: Mixed
  shopAffiliateServiceContractTypeCommissionPolicy: ShopAffiliateServiceContractTypeCommissionPolicy
}

type ServiceContractTypeCommissionPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  member: Member
  affiliateId: ID
  affiliate: Affiliate
  affiliateName: String
  shopAffiliateId: ID
  shopAffiliate: ShopAffiliate
  shopAffiliateName: String
  globalCustomerId: ID
  globalCustomer: GlobalCustomer
  customerId: ID
  customer: Customer
  customerName: String
  customerPhone: String
  targetAffiliateId: ID
  targetAffiliate: Affiliate
  targetAffiliateName: String
  targetShopAffiliateId: ID
  targetShopAffiliate: ShopAffiliate
  targetShopAffiliateName: String
  targetGlobalCustomerId: ID
  targetGlobalCustomer: GlobalCustomer
  targetCustomerId: ID
  targetCustomer: Customer
  targetCustomerName: String
  targetCustomerPhone: String
  buyerId: ID
  buyer: Customer
  globalBuyerId: ID
  globalBuyer: GlobalCustomer
  buyerName: String
  buyerPhone: String
  serviceContractTypeId: ID
  serviceContractType: ServiceContractType
  serviceContractTypeName: String
  type: String
  serviceContractId: ID
  serviceContract: ServiceContract
  serviceContractCode: String
  quantity: Int
  basePrice: Float
  revenue: Float
  serviceContractTypeCommissionPolicyId: ID
  serviceContractTypeCommissionPolicy: ServiceContractTypeCommissionPolicy
  serviceContractTypeCommissionPolicyName: String
  status: String
  isWithdrawn: Boolean
  amount: Float
  shopAffiliateServiceContractTypeCommissionPolicyId: ID
}

type ServiceContractTypeCommissionPolicyLogPageData {
  data: [ServiceContractTypeCommissionPolicyLog]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeCommissionPolicyPageData {
  data: [ServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeInServiceContract {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceContractId: ID
  serviceContractType: ServiceContractType
  serviceContractName: String
  serviceContractTypeId: ID
  serviceContractTypeName: String
  serviceContractTypeDescription: String
  serviceContractTypeImageUrl: String
  memberId: ID
  customerId: ID
  globalCustomerId: ID
  customerName: String
  customerPhone: String
  startDate: DateTime
  endDate: DateTime
  isExpired: Boolean
  hasNumberSessions: Boolean
  numberSessions: Int
  usedSessions: Int
  staffSpecialistId: ID
  staffSaleId: ID
  originalTotalAmount: Mixed
  isApplyAllSpecialist: Boolean
  staffSpecialistIds: [ID]
  staffSpecialists: [Staff]
  staffSpecialist: Staff
  hasValueAddedTax: Boolean
  valueAddedTaxRate: Float
  valueAddedTaxAmountPerItem: Float
  valueAddedTaxAmount: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  unit: String
  isPriceCalculatedLater: Boolean
  hasCheckIn: Boolean
  isApplyAllShopBranch: Boolean
  applyShopBranchIds: [ID]
  applyShopBranches: [ShopBranch]
  totalAmount: Mixed
  isActivated: Boolean
  quantity: Int
  basePrice: Mixed
  isContactRequired: Boolean
  referrerShopAffiliateId: ID
  referrerShopAffiliateName: String
  referrerCustomerName: String
  referrerCustomerId: ID
  referrerGlobalCustomerId: ID
  referrerShopAffiliatePhone: String
  referrerShopAffiliateCode: String
  customFormsData: [CustomFormData]
  customFieldsData: [CustomFieldData]
  isAutoCompletedOnPaid: Boolean
}

input ServiceContractTypeInServiceContractInput {
  id: ID
  serviceContractTypeId: ID
  startDate: DateTime
  endDate: DateTime
  hasNumberSessions: Boolean
  numberSessions: Int
  staffSpecialistId: ID
  isApplyAllSpecialist: Boolean
  staffSpecialistIds: [ID]
  isApplyAllShopBranch: Boolean
  applyShopBranchIds: [ID]
  hasCheckIn: Boolean
  quantity: Int
  basePrice: Mixed
  isPriceCalculatedLater: Boolean
  customFormsData: [CustomFormDataInput]
  customFieldsData: [CustomFieldDataInput]
  isAutoCompletedOnPaid: Boolean
}

type ServiceContractTypeInServiceContractPageData {
  data: [ServiceContractTypeInServiceContract]
  total: Int
  pagination: Pagination
}

type ServiceContractTypePageData {
  data: [ServiceContractType]
  total: Int
  pagination: Pagination
}

type ServiceContractTypePricePolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  isActivated: Boolean
  name: String
  rules: [ServiceContractTypePricePolicyRule]
  applyCount: Int
}

type ServiceContractTypePricePolicyPageData {
  data: [ServiceContractTypePricePolicy]
  total: Int
  pagination: Pagination
}

type ServiceContractTypePricePolicyRule {
  minQty: Int
  reductionValue: Float
  reductionType: String
  maxReductionValue: Int

  """Đối tượng áp dụng """
  applyType: String
}

input ServiceContractTypePricePolicyRuleInput {
  minQty: Int
  reductionValue: Float
  reductionType: String
  maxReductionValue: Int

  """Đối tượng áp dụng """
  applyType: String
}

type ServiceContractTypeSalesBonusByChildShopAffiliate {
  totalRevenueAmount: Mixed
  totalPointAmount: Mixed
  latestCreated: DateTime
  latestUpdate: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  targetShopAffiliateId: String
  targetShopAffiliate: ShopAffiliate
  totalOrderCount: Int
}

type ServiceContractTypeSalesBonusByChildShopAffiliatePageData {
  data: [ServiceContractTypeSalesBonusByChildShopAffiliate]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeSessionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceContractName: String
  serviceContractTypeName: String
  serviceContractId: ID
  serviceContractTypeId: ID
  serviceContractTypeInServiceContractId: ID
  serviceContractTypeInServiceContract: ServiceContractTypeInServiceContract
  customerId: ID
  customer: Customer
  globalCustomerId: ID
  memberId: ID
  staffSpecialistId: ID
  staffSpecialListName: String
  staffSaleId: ID
  staffSaleName: String
  shopBranchId: ID
  shopBranchName: String
  shopBranch: ShopBranch
  currentNumberSessions: Int
  hasNumberSessions: Boolean
  numberSessions: Int
  note: String
}

type ServiceContractTypeSessionLogPageData {
  data: [ServiceContractTypeSessionLog]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceContractTypeId: String
  memberId: String
  isWithinIndividualServiceContractTypeSalesBonusPolicy: Boolean
  individualServiceContractTypeSalesBonusPolicyId: String
  point: Int
  member: Member
  serviceContractType: ServiceContractType
  individualServiceContractTypeSalesBonusPolicy: IndividualServiceContractTypeSalesBonusPolicy
}

type ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicyPageData {
  data: [ServiceContractTypeWithinIndividualServiceContractTypeSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceContractTypeId: String
  memberId: String
  isWithinRecurringServiceContractTypeCommissionPolicy: Boolean
  recurringServiceContractTypeCommissionPolicyId: String
  point: Int
  member: Member
  serviceContractType: ServiceContractType
  recurringServiceContractTypeCommissionPolicy: RecurringServiceContractTypeCommissionPolicy
}

type ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicyPageData {
  data: [ServiceContractTypeWithinRecurringServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ServiceContractTypeWithinServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceContractTypeId: ID
  serviceContractType: ServiceContractType
  memberId: ID
  isWithinServiceContractTypeCommissionPolicy: Boolean
  serviceContractTypeCommissionPolicyId: ID
  serviceContractTypeCommissionPolicy: ServiceContractTypeCommissionPolicy
}

type ServiceContractTypeWithinServiceContractTypeCommissionPolicyPageData {
  data: [ServiceContractTypeWithinServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ServiceMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  enum: String
  name: String
  image: String
  description: String
}

type ServiceMinigamePageData {
  data: [ServiceMinigame]
  total: Int
  pagination: Pagination
}

input ServiceMinigameUpdateInput {
  minigameId: String
  isActiveManyChat: Boolean
}

type ServicePageData {
  data: [Service]
  total: Int
  pagination: Pagination
}

type ServiceReportData {
  """Số lượng dịch vụ"""
  serviceCount: Int
}

type ServiceReservation {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã lịch hẹn"""
  code: String

  """trạng thái lịch hẹn PENDING,CONFIRMED,COMPLETED,CANCELED"""
  status: String

  """ID cửa hàn"""
  memberId: String

  """Cửa hàng"""
  member: Member

  """ID dịch vụ gốc"""
  serviceId: String

  """Dịch vụ"""
  service: Service

  """tên dịch vụ"""
  name: String

  """ID danh mục dịch vụ"""
  shopServiceCategoryId: String

  """Danh mục dịch vụ"""
  shopServiceCategory: ShopServiceCategory

  """Danh sách ID loại dịch vụ"""
  serviceTagIds: [String]

  """Danh sách loại dịch vụ"""
  serviceTags: [ServiceTag]

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String

  """Tổng giá dịch vụ"""
  totalPrice: Float

  """hình ảnh"""
  images: [String]

  """ngày hẹn"""
  reservationDate: DateTime

  """Loại địa điểm AT_SHOP,AT_RESERVER"""
  addressType: String

  """Id người hẹn"""
  reserverId: String

  """Họ và tên người hẹn"""
  reserverFullname: String

  """SDT người hẹn"""
  reserverInternationalPhone: String

  """Global Customer"""
  globalCustomer: GlobalCustomer

  """ID chi nhánh đặt hẹn"""
  reservationShopBranchId: String

  """Chi nhánh đặt hẹn"""
  reservationShopBranch: ShopBranch

  """Địa chỉ người đặt hẹn"""
  reservationAddress: Place

  """ghi chú dịch v"""
  note: String

  """hình thức thanh toán CASH"""
  paymentMethod: String

  """ID chuyên viên phụ trách"""
  shopServiceSpecialistId: String

  """Chuyên viên phụ trách"""
  shopServiceSpecialist: ShopServiceSpecialist

  """dịch vụ bổ sung"""
  additionalServiceIds: [String] @deprecated(reason: "This field is deprecated, and will be delete soon.use additionalServices")
  additionalServices: [AdditionalServiceItem]

  """Danh sách log"""
  logs: [HistoryServiceReservation]
}

type ServiceReservationPageData {
  data: [ServiceReservation]
  total: Int
  pagination: Pagination
}

type ServiceTag {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên tag dịch vụ"""
  name: String!

  """Ảnh"""
  image: String

  """Số lượng dịch vụ có tag này"""
  serviceCount: Int
}

type ServiceTagPageData {
  data: [ServiceTag]
  total: Int
  pagination: Pagination
}

type Setting {
  id: String
  type: String
  options: [SettingOption]
  name: String
  key: String
  value: Mixed
  isActive: Boolean
  isPrivate: Boolean
  readOnly: Boolean
  groupId: String
  createdAt: DateTime
  updatedAt: DateTime
  group: SettingGroup
}

type SettingGroup {
  id: String
  slug: String
  name: String
  desc: String
  readOnly: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  settings: [Setting]
}

type SettingGroupPageData {
  data: [SettingGroup]
  total: Int
  pagination: Pagination
}

type SettingMinigame {
  """Unique identifier for the settings"""
  id: String

  """Timestamp for when the settings were created"""
  createdAt: DateTime

  """Timestamp for the last update of the settings"""
  updatedAt: DateTime

  """Timestamp for when the settings were deleted (if applicable)"""
  deletedAt: DateTime

  """Indicates whether the settings are currently active"""
  isActive: Boolean

  """Identifier for the associated application"""
  applicationId: String

  """Identifier for the associated merchant"""
  merchantId: String

  """The probability of winning in the minigame"""
  winningRate: Float

  """Total number of turns used by players"""
  totalUsedTurn: Int

  """Total available turns for the minigame"""
  totalTurn: Int

  """Indicates if the total turns should reset daily"""
  shouldResetTotalTurnByDay: Boolean

  """Maximum turns allowed per customer"""
  totalTurnPerCustomer: Int

  """Whether customer turns reset daily"""
  shouldResetTotalTurnPerCustomerByDay: Boolean

  """Whether players can earn additional turns by sharing"""
  canShareForTurn: Boolean

  """Number of turns received when sharing the game"""
  turnReceivedByShare: Int

  """Fields required to collect player information"""
  collectionFields: [String]

  """Whether phone verification is required to join"""
  shouldRequirePhoneVerification: Boolean

  """URL-friendly name for the minigame"""
  slug: String

  """Google Analytics tracking String"""
  googleAnalyticsId: Mixed

  """Indicates if rewards should be sent via message"""
  shouldSendRewardByMessage: Boolean

  """Platforms used for sending reward messages"""
  sendRewardMessagePlatforms: [Mixed]

  """How the game outcome is determined (e.g., random, fixed)"""
  determineOutcomeType: String
}

input SettingMinigameInput {
  """Unique identifier for the settings"""
  id: String

  """Timestamp for when the settings were created"""
  createdAt: DateTime

  """Timestamp for the last update of the settings"""
  updatedAt: DateTime

  """Timestamp for when the settings were deleted (if applicable)"""
  deletedAt: DateTime

  """Indicates whether the settings are currently active"""
  isActive: Boolean

  """Identifier for the associated application"""
  applicationId: String

  """Identifier for the associated merchant"""
  merchantId: String

  """The probability of winning in the minigame"""
  winningRate: Float

  """Total number of turns used by players"""
  totalUsedTurn: Int

  """Total available turns for the minigame"""
  totalTurn: Int

  """Indicates if the total turns should reset daily"""
  shouldResetTotalTurnByDay: Boolean

  """Maximum turns allowed per customer"""
  totalTurnPerCustomer: Int

  """Whether customer turns reset daily"""
  shouldResetTotalTurnPerCustomerByDay: Boolean

  """Whether players can earn additional turns by sharing"""
  canShareForTurn: Boolean

  """Number of turns received when sharing the game"""
  turnReceivedByShare: Int

  """Fields required to collect player information"""
  collectionFields: [String]

  """Whether phone verification is required to join"""
  shouldRequirePhoneVerification: Boolean

  """URL-friendly name for the minigame"""
  slug: String

  """Google Analytics tracking String"""
  googleAnalyticsId: Mixed

  """Indicates if rewards should be sent via message"""
  shouldSendRewardByMessage: Boolean

  """Platforms used for sending reward messages"""
  sendRewardMessagePlatforms: [Mixed]

  """How the game outcome is determined (e.g., random, fixed)"""
  determineOutcomeType: String
}

type SettingOption {
  value: String
  label: String
  isPrivate: Boolean
  readOnly: Boolean
  color: String
}

type SettingPageData {
  data: [Setting]
  total: Int
  pagination: Pagination
}

type Shipment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ShipmentPageData {
  data: [Shipment]
  total: Int
  pagination: Pagination
}

type ShipServicePricing {
  """Mã dịch vụ"""
  code: String

  """Tên dịch vụ"""
  name: String

  """Giá cước"""
  price: Float

  """Thời gian dự kiến"""
  time: String
  exchangeWeight: Float
}

type Shop {
  code: String
  id: String

  """Mã chủ shop"""
  username: String

  """UID Firebase"""
  uid: String

  """Họ tên"""
  name: String

  """Avatar"""
  avatar: String

  """Điện thoại"""
  phone: String

  """Mã Fanpage"""
  fanpageId: String

  """Tên Fanpage"""
  fanpageName: String

  """Hình Fanpage"""
  fanpageImage: String

  """Tên cửa hàng"""
  shopName: String

  """Logo cửa hàng"""
  shopLogo: String

  """Hình cover cửa hàng"""
  shopCover: String

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Điểm nhận hàng cửa hàng"""
  addressDelivery: AddressDelivery

  """Danh sách mã điểm nhận hàng"""
  addressDeliveryIds: [ID]
  addressDeliverys: [AddressDelivery]

  """Danh sách mã kho"""
  addressStorehouseIds: [ID]
  addressStorehouses: [AddressStorehouse]
  mainAddressStorehouseId: ID
  mainAddressStorehouse: AddressStorehouse
  allowSale: Boolean
  config: ShopConfig

  """Phân loại cửa hàng"""
  categoryId: ID
  category: ShopCategory

  """Chủ shop đã kích hoạt"""
  activated: Boolean
  affiliateConfig: AffiliateConfig
  domain: String
  templateConfig: TemplateConfig
  deliveryDistricts: [String]
  salePoints: [Shop]
}

type ShopAffiliate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  affiliateId: String
  affiliate: Affiliate
  memberId: String
  code: String
  member: MemberPublic
  customerId: String
  globalCustomerId: String

  """Tổng số dư của ví (Bao gồm cả đang chờ giải ngân)"""
  totalBalance: Mixed

  """Số dư ví bị đống bằng (Đống bằng vì đang chờ giải ngân)"""
  balancePendingWithdrawal: Mixed

  """Số dư ví khả dụng (Không bao gôm đang chờ giải ngân)"""
  balanceAvailable: Mixed
  balanceWithdrawn: Mixed

  """Tổng số lượt bán"""
  totalSales: Int

  """Mã của đối tác cha"""
  recruitedId: String

  """Số khác hàng liên kết"""
  recruitedNumber: Int

  """Level hiên tại"""
  currentTier: Int
  currentTierName: String
  isActive: Boolean

  """Tổng số cấp dưới"""
  totalDownlines: Int

  """Tổng số cấp dưới trực tiếp"""
  totalDirectDownlines: Int
  statisticDownlines: [ShopAffiliateStatisticDownlines]
  isActiveAndNotExpired: Boolean
  totalOrder: Int
  totalProduct: Int
  totalAmount: Mixed
  totalSuccessOrder: Int
  totalSuccessProduct: Int
  totalSuccessAmount: Mixed
  totalReferrerPhoneNumber: Int
  totalReferrerCode: Int

  """Số khách hàng đang liên kết"""
  refererNumber: Int
  referrerPhoneNumber: String
  referrerCode: String
  recruitedAffiliate: Affiliate
  recruitedShopAffiliate: ShopAffiliate
  name: String
  customer: Customer
  shopAffiliateLevel: Int
  taxCode: String

  """Tổng hoa hồng đã rút thành công"""
  withdrawalApprovedCommission: Mixed

  """Tổng hoa đang rút"""
  withdrawalPendingCommission: Mixed

  """Tổng hoa hồng rút bị từ chối"""
  withdrawalCanceledCommission: Mixed

  """Tổng hoa hồng hợp lệ"""
  approvedCommission: Mixed

  """Tổng hoa hồng đang chờ"""
  pendingCommission: Mixed

  """Tổng hoa hồng đã bị hủy"""
  canceledCommission: Mixed
  totalCommission: Mixed
  totalAmountBonusProductSalesBonusPolicy: Mixed

  """Số lượng chính sách hoa hồng tham gia"""
  totalCommissionPolicyJoinedCount: Mixed

  """Tổng tiền thưởng từ chính sách hoa hồng (Cho cá nhân)"""
  totalPersonalCommissionAmount: Mixed

  """
  Tổng toàn bộ tiền thưởng từ chính sách hoa hồng của tất cả cấp dưới (Nhánh)
  """
  totalBranchShopAffiliateCommissionAmount: Mixed

  """Số lượng chính sách thưởng bán hàng tham gia"""
  totalProductSalesPolicyJoinedCount: Mixed

  """Số lượng chính sách thưởng bán hàng nâng cao tham gia"""
  totalProductSalesPolicyAdvancedJoinedCount: Mixed

  """Tổng tiền thưởng từ chính sách bán hàng (Cho cá nhân)"""
  totalPersonalProductSalesBonusAmount: Mixed

  """Tổng tiền thưởng 'cơ bản' từ chính sách bán hàng (Cho cá nhân)"""
  totalPersonalProductSalesBasicBonusAmount: Mixed

  """Tổng tiền thưởng 'nâng cao' từ chính sách bán hàng (Cho cá nhân)"""
  totalPersonalProductSalesAdvancedBonusAmount: Mixed

  """
  Tổng toàn bộ tiền thưởng từ chính sách bán hàng của tất cả cấp dưới (Nhánh)
  """
  totalBranchShopAffiliateProductSalesBonusAmount: Mixed

  """
  Tổng toàn bộ tiền thưởng cơ bản từ chính sách bán hàng của tất cả cấp dưới (Nhánh)
  """
  totalBranchShopAffiliateProductSalesBasicBonusAmount: Mixed

  """
  Tổng toàn bộ tiền thưởng nâng cao từ chính sách bán hàng của tất cả cấp dưới (Nhánh)
  """
  totalBranchShopAffiliateProductSalesAdvancedBonusAmount: Mixed

  """Tổng tiền thưởng hoa hồng giới thiệu (Cho cá nhân)"""
  totalPersonalReferralCommissionAmount: Mixed

  """
  Tổng toàn bộ tiền thưởng hoa hồng giới thiệu của tất cả cấp dưới (Nhánh)
  """
  totalBranchShopAffiliateReferralCommissionAmount: Mixed

  """Tổng tiền thưởng từ chính sách hoa hồng nhánh"""
  totalCommissionAmount: Mixed

  """Số lượng chính sách giá tham gia"""
  totalPricePolicyJoinedCount: Mixed

  """Số lượng chính sách khuyến mãi tham gia"""
  totalPromotionPolicyJoinedCount: Mixed

  """Tổng toàn bộ tiền thưởng cơ bản từ chính sách bán hàng của Đội Nhóm"""
  totalProductSalesBasicBonusAmount: Mixed

  """Tổng tiền thưởng 'nâng cao' từ chính sách bán hàng của đội nhóm"""
  totalProductSalesAdvancedBonusAmount: Mixed

  """Tổng tiền thưởng hoa hồng giới thiệu (Cho toàn đội nhóm)"""
  totalReferralCommissionAmount: Mixed

  """Tổng toàn bộ tiền thưởng từ chính sách bán hàng của Đội nhóm"""
  totalProductSalesBonusAmount: Mixed
  totalBranchShopAffiliateAffiliateOrderCount: Mixed
  totalBranchShopAffiliateAffiliateOrderCompletedCount: Mixed
  totalBranchShopAffiliateAffiliateOrderProcessingCount: Mixed
  totalBranchShopAffiliateAffiliateOrderCanceledCount: Mixed
  totalBranchShopAffiliateAffiliateOrderAmount: Mixed

  """Tổng đã rút thành công"""
  withdrawalApproved: Mixed

  """Tổng đang rút"""
  withdrawalPending: Mixed

  """Tổng rút bị từ chối"""
  withdrawalCanceled: Mixed

  """Tổng hoa hồng giới thiệu"""
  totalReferralCommission: Mixed
  withdrawalApprovedAmountBonusProductSalesBonusPolicy: Mixed
  withdrawalPendingAmountBonusProductSalesBonusPolicy: Mixed
  expiredAt: DateTime
  wallets: [Wallet]
  totalShopAffiliateLevelDiscountPolicyJoinedCount: Mixed
  totalPersonalAffiliateLevelDiscountCommissionAmount: Mixed
  totalBranchShopAffiliateAffiliateLevelDiscountCommissionAmount: Mixed
  totalAffiliateLevelDiscountCommissionAmount: Mixed
  shopAffiliateLabelIds: [ID]
  shopAffiliateLabels: [ShopAffiliateLabel]
  totalRevenue: Mixed
  totalPersonalRevenue: Mixed
  totalBranchShopAffiliateRevenue: Mixed

  """Tổng số đơn (cả cá nhân + cấp dưới)"""
  totalOrderCount: Mixed

  """Số đơn trạng thái completed (xem ghi chú trạng thái)"""
  totalOrderCompletedCount: Mixed

  """Số đơn đang xử lý (tổng - completed - canceled)"""
  totalOrderProcessingCount: Mixed

  """Số đơn bị huỷ (canceled/failure)"""
  totalOrderCanceledCount: Mixed

  """
  Tổng số sản phẩm (tổng qty hoặc items trong tất cả order cá nhân + cấp dưới)
  """
  totalProductCount: Mixed

  """Số sản phẩm thuộc đơn completed"""
  totalProductCompletedCount: Mixed

  """Số sản phẩm thuộc đơn processing"""
  totalProductProcessingCount: Mixed

  """Số sản phẩm thuộc đơn canceled"""
  totalProductCanceledCount: Mixed

  """Tổng doanh số từ order (cả cá nhân + cấp dưới)"""
  totalOrderAmount: Mixed

  """Doanh số từ đơn completed"""
  totalOrderCompletedAmount: Mixed

  """Doanh số từ đơn processing"""
  totalOrderProcessingAmount: Mixed

  """Doanh số từ đơn canceled"""
  totalOrderCanceledAmount: Mixed

  """Tổng tiền các đơn hàng đã thanh toán (tất cả trạng thái paid)"""
  totalOrderPaidAmount: Mixed

  """Tổng số đơn hàng đã thanh toán"""
  totalOrderPaidCount: Mixed

  """Tổng tiền các order item đã thanh toán (tất cả)"""
  totalProductPaidAmount: Mixed

  """Tổng số order item đã thanh toán (số bản ghi hoặc items)"""
  totalProductPaidCount: Mixed

  """Tổng số đơn do chính shopAffiliate này tạo (không gồm cấp dưới)"""
  totalPersonalOrderCount: Mixed

  """Số đơn cá nhân ở trạng thái completed"""
  totalPersonalOrderCompletedCount: Mixed

  """Số đơn cá nhân processing"""
  totalPersonalOrderProcessingCount: Mixed

  """Số đơn cá nhân canceled"""
  totalPersonalOrderCanceledCount: Mixed

  """Tổng số sản phẩm (qty) do chính shopAffiliate này tạo"""
  totalPersonalProductCount: Mixed

  """Số sản phẩm cá nhân thuộc đơn completed"""
  totalPersonalProductCompletedCount: Mixed

  """Số sản phẩm cá nhân thuộc đơn processing"""
  totalPersonalProductProcessingCount: Mixed

  """Số sản phẩm cá nhân thuộc đơn canceled"""
  totalPersonalProductCanceledCount: Mixed

  """Tổng doanh số từ đơn của chính shopAffiliate này"""
  totalPersonalOrderAmount: Mixed

  """Doanh số cá nhân từ đơn completed"""
  totalPersonalOrderCompletedAmount: Mixed

  """Doanh số cá nhân từ đơn processing"""
  totalPersonalOrderProcessingAmount: Mixed

  """Doanh số cá nhân từ đơn canceled"""
  totalPersonalOrderCanceledAmount: Mixed

  """Tổng tiền đơn hàng đã thanh toán thuộc về affiliate (personal)"""
  totalPersonalOrderPaidAmount: Mixed

  """Số đơn hàng đã thanh toán thuộc về affiliate (personal)"""
  totalPersonalOrderPaidCount: Mixed

  """Tổng tiền order item đã thanh toán thuộc affiliate (personal)"""
  totalPersonalProductPaidAmount: Mixed

  """Số order item đã thanh toán thuộc affiliate (personal)"""
  totalPersonalProductPaidCount: Mixed

  """Tổng số đơn của tất cả cấp dưới (không bao gồm cá nhân)"""
  totalBranchShopAffiliateOrderCount: Mixed

  """Số đơn cấp dưới completed"""
  totalBranchShopAffiliateOrderCompletedCount: Mixed

  """Số đơn cấp dưới processing"""
  totalBranchShopAffiliateOrderProcessingCount: Mixed

  """Số đơn cấp dưới canceled"""
  totalBranchShopAffiliateOrderCanceledCount: Mixed

  """Tổng số sản phẩm (qty) của cấp dưới"""
  totalBranchShopAffiliateProductCount: Mixed

  """Sản phẩm cấp dưới thuộc đơn completed"""
  totalBranchShopAffiliateProductCompletedCount: Mixed

  """Sản phẩm cấp dưới thuộc đơn processing"""
  totalBranchShopAffiliateProductProcessingCount: Mixed

  """Sản phẩm cấp dưới thuộc đơn canceled"""
  totalBranchShopAffiliateProductCanceledCount: Mixed

  """Doanh số tổng cấp dưới (all statuses)"""
  totalBranchShopAffiliateOrderAmount: Mixed

  """Doanh số cấp dưới từ completed"""
  totalBranchShopAffiliateOrderCompletedAmount: Mixed

  """Doanh số cấp dưới từ processing"""
  totalBranchShopAffiliateOrderProcessingAmount: Mixed

  """Doanh số cấp dưới từ canceled"""
  totalBranchShopAffiliateOrderCanceledAmount: Mixed

  """Tổng tiền đơn hàng đã thanh toán của tất cả affiliate con"""
  totalBranchShopAffiliateOrderPaidAmount: Mixed

  """Số đơn hàng đã thanh toán của tất cả affiliate con"""
  totalBranchShopAffiliateOrderPaidCount: Mixed

  """Tổng tiền order item đã thanh toán của affiliate con"""
  totalBranchShopAffiliateProductPaidAmount: Mixed

  """Số order item đã thanh toán của affiliate con"""
  totalBranchShopAffiliateProductPaidCount: Mixed

  """Tổng số hợp đồng (cả cá nhân + cấp dưới)"""
  totalServiceContractCount: Mixed

  """Số hợp đồng completed (APPROVED/ENDED)"""
  totalServiceContractCompletedCount: Mixed

  """Số hợp đồng processing (tổng - completed - canceled)"""
  totalServiceContractProcessingCount: Mixed

  """Số hợp đồng canceled/rejected"""
  totalServiceContractCanceledCount: Mixed

  """Tổng số service contract types (type-level) (cả personal + branch)"""
  totalServiceContractTypeCount: Mixed

  """Số service contract types completed"""
  totalServiceContractTypeCompletedCount: Mixed

  """Số service contract types processing"""
  totalServiceContractTypeProcessingCount: Mixed

  """Số service contract types canceled"""
  totalServiceContractTypeCanceledCount: Mixed

  """Tổng tiền từ service contract (cả cá nhân + cấp dưới)"""
  totalServiceContractAmount: Mixed

  """Doanh số service contract completed"""
  totalServiceContractCompletedAmount: Mixed

  """Doanh số service contract processing"""
  totalServiceContractProcessingAmount: Mixed

  """Doanh số service contract canceled"""
  totalServiceContractCanceledAmount: Mixed

  """Tổng tiền service contract đã thanh toán (tất cả)"""
  totalServiceContractPaidAmount: Mixed

  """Tổng số service contract đã thanh toán"""
  totalServiceContractPaidCount: Mixed

  """Tổng tiền service-contract-type đã thanh toán (tất cả)"""
  totalSerivceContractTypePaidAmount: Mixed

  """Tổng số service-contract-type đã thanh toán"""
  totalSerivceContractTypePaidCount: Mixed

  """Tổng số hợp đồng do cá nhân (không gồm cấp dưới)"""
  totalPersonalServiceContractCount: Mixed

  """Số hợp đồng cá nhân completed"""
  totalPersonalServiceContractCompletedCount: Mixed

  """Số hợp đồng cá nhân processing"""
  totalPersonalServiceContractProcessingCount: Mixed

  """Số hợp đồng cá nhân canceled"""
  totalPersonalServiceContractCanceledCount: Mixed

  """Tổng số service contract types cá nhân"""
  totalPersonalServiceContractTypeCount: Mixed

  """Số type cá nhân completed"""
  totalPersonalServiceContractTypeCompletedCount: Mixed

  """Số type cá nhân processing"""
  totalPersonalServiceContractTypeProcessingCount: Mixed

  """Số type cá nhân canceled"""
  totalPersonalServiceContractTypeCanceledCount: Mixed

  """Doanh số hợp đồng cá nhân (tổng)"""
  totalPersonalServiceContractAmount: Mixed

  """Doanh số hợp đồng cá nhân completed"""
  totalPersonalServiceContractCompletedAmount: Mixed

  """Doanh số hợp đồng cá nhân processing"""
  totalPersonalServiceContractProcessingAmount: Mixed

  """Doanh số hợp đồng cá nhân canceled"""
  totalPersonalServiceContractCanceledAmount: Mixed

  """Tổng tiền service contract đã thanh toán thuộc affiliate (personal)"""
  totalPersonalServiceContractPaidAmount: Mixed

  """Số service contract đã thanh toán thuộc affiliate (personal)"""
  totalPersonalServiceContractPaidCount: Mixed

  """
  Tổng tiền service-contract-type đã thanh toán thuộc affiliate (personal)
  """
  totalPersonalSerivceContractTypePaidAmount: Mixed

  """Số service-contract-type đã thanh toán thuộc affiliate (personal)"""
  totalPersonalSerivceContractTypePaidCount: Mixed

  """Tổng số hợp đồng cấp dưới"""
  totalBranchShopAffiliateServiceContractCount: Mixed

  """Số hợp đồng cấp dưới completed"""
  totalBranchShopAffiliateServiceContractCompletedCount: Mixed

  """Số hợp đồng cấp dưới processing"""
  totalBranchShopAffiliateServiceContractProcessingCount: Mixed

  """Số hợp đồng cấp dưới canceled"""
  totalBranchShopAffiliateServiceContractCanceledCount: Mixed

  """Tổng số service contract types cấp dưới"""
  totalBranchShopAffiliateServiceContractTypeCount: Mixed

  """Số type cấp dưới completed"""
  totalBranchShopAffiliateServiceContractTypeCompletedCount: Mixed

  """Số type cấp dưới processing"""
  totalBranchShopAffiliateServiceContractTypeProcessingCount: Mixed

  """Số type cấp dưới canceled"""
  totalBranchShopAffiliateServiceContractTypeCanceledCount: Mixed

  """Doanh số hợp đồng cấp dưới (tổng)"""
  totalBranchShopAffiliateServiceContractAmount: Mixed

  """Doanh số hợp đồng cấp dưới completed"""
  totalBranchShopAffiliateServiceContractCompletedAmount: Mixed

  """Doanh số hợp đồng cấp dưới processing"""
  totalBranchShopAffiliateServiceContractProcessingAmount: Mixed

  """Doanh số hợp đồng cấp dưới canceled"""
  totalBranchShopAffiliateServiceContractCanceledAmount: Mixed

  """Tổng tiền service contract đã thanh toán của affiliate con"""
  totalBranchShopAffiliateServiceContractPaidAmount: Mixed

  """Số service contract đã thanh toán của affiliate con"""
  totalBranchShopAffiliateServiceContractPaidCount: Mixed

  """Tổng tiền service-contract-type đã thanh toán của affiliate con"""
  totalBranchShopAffiliateSerivceContractTypePaidAmount: Mixed

  """Số service-contract-type đã thanh toán của affiliate con"""
  totalBranchShopAffiliateSerivceContractTypePaidCount: Mixed

  """Tổng tiền nhận từ chính sách hoa hồng giới thiệu (tất cả nguồn)"""
  totalFromReferralCommissionPolices: Mixed

  """Tổng tiền nhận từ các chính sách hoa hồng (product + service)"""
  totalFromCommissionPolicies: Mixed

  """Tổng tiền nhận từ sales-bonus (product + service)"""
  totalFromSalesBonusPolicies: Mixed

  """Tổng tiền nhận từ thưởng nhóm trực tiếp"""
  totalFromDirectSubordinateSalesBonusPolicies: Mixed

  """Tổng tiền nhận từ thưởng cá nhân (product + service)"""
  totalFromIndividualSalesBonusPolicies: Mixed

  """Tổng tiền nhận từ chia sẻ voucher"""
  totalFromVoucherSharing: Mixed

  """Tổng tiền từ chênh lệch chiết khấu theo cấp bậc"""
  totalFromDiscountDifferenceAffiliateLevelDiscountCommission: Mixed

  """Tổng tiền nhận từ hoàn thành nhiệm vụ"""
  totalFromTask: Mixed

  """Tổng tiền nhận từ leaderboard / milestone rewards"""
  totalFromLeaderBoard: Mixed

  """Tổng từ referral (chỉ cá nhân)"""
  totalPersonalFromReferralCommissionPolices: Mixed

  """Tổng từ commission policies (chỉ cá nhân)"""
  totalPersonalFromCommissionPolicies: Mixed

  """Tổng từ sales bonus (chỉ cá nhân)"""
  totalPersonalFromSalesBonusPolicies: Mixed

  """Tổng từ direct-subordinate bonuses (cá nhân)"""
  totalPersonalFromDirectSubordinateSalesBonusPolicies: Mixed

  """Tổng từ individual bonuses (cá nhân)"""
  totalPersonalFromIndividualSalesBonusPolicies: Mixed

  """Tổng từ voucher sharing (cá nhân)"""
  totalPersonalFromVoucherSharing: Mixed

  """Tổng từ discount difference (cá nhân)"""
  totalPersonalFromDiscountDifferenceAffiliateLevelDiscountCommission: Mixed

  """Tổng từ task (cá nhân)"""
  totalPersonalFromTask: Mixed

  """Tổng từ leaderboard (cá nhân)"""
  totalPersonalFromLeaderBoard: Mixed

  """Tổng từ referral (cấp dưới)"""
  totalBranchShopAffiliateFromReferralCommissionPolices: Mixed

  """Tổng từ commission policies (cấp dưới)"""
  totalBranchShopAffiliateFromCommissionPolicies: Mixed

  """Tổng từ sales bonus (cấp dưới)"""
  totalBranchShopAffiliateFromSalesBonusPolicies: Mixed

  """Tổng từ direct-subordinate bonuses (cấp dưới)"""
  totalBranchShopAffiliateFromDirectSubordinateSalesBonusPolicies: Mixed

  """Tổng từ individual bonuses (cấp dưới)"""
  totalBranchShopAffiliateFromIndividualSalesBonusPolicies: Mixed

  """Tổng từ voucher sharing (cấp dưới)"""
  totalBranchShopAffiliateFromVoucherSharing: Mixed

  """Tổng từ discount diff (cấp dưới)"""
  totalBranchShopAffiliateFromDiscountDifferenceAffiliateLevelDiscountCommission: Mixed

  """Tổng từ task (cấp dưới)"""
  totalBranchShopAffiliateFromTask: Mixed

  """Tổng từ leaderboard (cấp dưới)"""
  totalBranchShopAffiliateFromLeaderBoard: Mixed
}

type ShopAffiliateConfigPoliciesAllowed {
  productCommission: Boolean
  referralCommission: Boolean
  productSalesBonusBasic: Boolean
  productSalesBonusAdvanced: Boolean
  individualProductSalesBonus: Boolean
  directSubordinatesProductSalesBonus: Boolean
  referralShopAffiliateRewardMilestone: Boolean
  topLeaderBoardBonus: Boolean
}

input ShopAffiliateConfigPoliciesAllowedInput {
  productCommission: Boolean
  referralCommission: Boolean
  productSalesBonusBasic: Boolean
  productSalesBonusAdvanced: Boolean
  individualProductSalesBonus: Boolean
  directSubordinatesProductSalesBonus: Boolean
  referralShopAffiliateRewardMilestone: Boolean
  topLeaderBoardBonus: Boolean
}

type ShopAffiliateConfigShopAffiliateWalletConfig {
  minimumBalance: Int
}

input ShopAffiliateConfigShopAffiliateWalletConfigInput {
  minimumBalance: Int
}

type ShopAffiliateConfigWordsDisplayed {
  shopAffiliate: String
  productCommission: String
  referralCommission: String
  productSalesBonusBasic: String
  productSalesBonusAdvanced: String
  individualProductSalesBonus: String
  directSubordinatesProductSalesBonus: String
  referralShopAffiliateRewardMilestone: String
  topLeaderBoardBonus: String
}

input ShopAffiliateConfigWordsDisplayedInput {
  shopAffiliate: String
  productCommission: String
  referralCommission: String
  productSalesBonusBasic: String
  productSalesBonusAdvanced: String
  individualProductSalesBonus: String
  directSubordinatesProductSalesBonus: String
  referralShopAffiliateRewardMilestone: String
  topLeaderBoardBonus: String
}

type ShopAffiliateDirectSubordinatesProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  affiliateId: String
  affiliate: Affiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  memberId: String
  member: Member
  directSubordinatesProductSalesBonusPolicyId: String
  directSubordinatesProductSalesBonusPolicy: DirectSubordinatesProductSalesBonusPolicy
  directSubordinatesProductSalesBonusPolicyName: String

  """Tổng doanh thu"""
  totalRevenue: Mixed

  """Tổng tiền thưởng nhận được"""
  amountBonus: Mixed
  amountBonusCalculationFormulas: [String]

  """
  Giá trị thưởng cơ bản đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApply: Float

  """Tổng doanh thu ước tính"""
  totalRevenueEstimate: Mixed

  """Tổng tiền thưởng nhận được ước tính"""
  amountBonusEstimate: Mixed

  """
  Giá trị thưởng cơ bản ước tính đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApplyEstimate: Float
  amountBonusEstimateCalculationFormulas: [String]
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
}

type ShopAffiliateDirectSubordinatesProductSalesBonusPolicyPageData {
  data: [ShopAffiliateDirectSubordinatesProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateFeeLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã shop"""
  memberId: String

  """Mã yêu cầu cộng tác"""
  shopAffiliateRequestId: String

  """Mã đối tác"""
  affiliateId: String

  """Mã global customer"""
  globalCustomerId: String

  """Mã customer"""
  customerId: String

  """Mã đối tác của shop"""
  shopAffiliateId: String

  """Tên đối tác"""
  shopAffiliateName: String

  """Số điện thoại đối tác"""
  shopAffiliatePhone: String

  """Phí hội viên"""
  fee: Float

  """Loại phí"""
  type: ShopAffiliateFeeLogType

  """Trạng thái lịch sử"""
  status: ShopAffiliateFeeLogStatus
}

type ShopAffiliateFeeLogData {
  """Tổng phí đối tác"""
  totalFee: Float!

  """Tổng phí đối tác chờ duyệt"""
  pendingFee: Float!

  """Tổng phí đối tác đã duyệt"""
  approvalFee: Float!
}

type ShopAffiliateFeeLogPageData {
  data: [ShopAffiliateFeeLog]
  total: Int
  pagination: Pagination
}

enum ShopAffiliateFeeLogStatus {
  """Chờ duyệt"""
  PENDING

  """Đã duyệt"""
  APPROVED

  """Đã hủy"""
  CANCELED
}

enum ShopAffiliateFeeLogType {
  """Đăng ký"""
  REGISTER

  """Gia hạn"""
  RENEWAL
}

type ShopAffiliateIndividualProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  affiliateId: String
  affiliate: Affiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  memberId: String
  member: Member
  individualProductSalesBonusPolicyId: String
  individualProductSalesBonusPolicy: IndividualProductSalesBonusPolicy
  individualProductSalesBonusPolicyName: String

  """Tổng doanh thu (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenue: Mixed

  """Tổng tiền thưởng nhận được (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonus: Mixed
  amountBonusCalculationFormulas: [String]

  """
  Giá trị thưởng cơ bản đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApply: Float

  """Tổng doanh thu ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenueEstimate: Mixed

  """Tổng tiền thưởng nhận được ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonusEstimate: Mixed

  """
  Giá trị thưởng cơ bản ước tính đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApplyEstimate: Float
  amountBonusEstimateCalculationFormulas: [String]
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
}

type ShopAffiliateIndividualProductSalesBonusPolicyPageData {
  data: [ShopAffiliateIndividualProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateIndividualServiceContractTypeSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  affiliateId: String
  affiliate: Affiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  memberId: String
  member: Member
  individualServiceContractTypeSalesBonusPolicyId: String
  individualServiceContractTypeSalesBonusPolicy: IndividualServiceContractTypeSalesBonusPolicy
  individualServiceContractTypeSalesBonusPolicyName: String

  """Tổng doanh thu (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenue: Mixed

  """Tổng tiền thưởng nhận được (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonus: Mixed
  amountBonusCalculationFormulas: [String]

  """
  Giá trị thưởng cơ bản đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApply: Float

  """Tổng doanh thu ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenueEstimate: Mixed

  """Tổng tiền thưởng nhận được ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonusEstimate: Mixed

  """
  Giá trị thưởng cơ bản ước tính đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApplyEstimate: Float
  amountBonusEstimateCalculationFormulas: [String]
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
}

type ShopAffiliateIndividualServiceContractTypeSalesBonusPolicyPageData {
  data: [ShopAffiliateIndividualServiceContractTypeSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateLabel {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  description: String
  imageUrl: String
  isActivated: Boolean
  shopAffiliateCount: Int
  memberId: ID
  member: Member
}

type ShopAffiliateLabelPageData {
  data: [ShopAffiliateLabel]
  total: Int
  pagination: Pagination
}

type ShopAffiliateLevelDiscountPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ShopAffiliateLevelDiscountPolicyPageData {
  data: [ShopAffiliateLevelDiscountPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliatePageData {
  data: [ShopAffiliate]
  total: Int
  pagination: Pagination
}

type ShopAffiliateProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  affiliateId: String
  affiliate: Affiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  memberId: String
  member: Member
  productCommissionPolicyId: String
  productCommissionPolicy: ProductCommissionPolicy
  productCommissionPolicyName: String

  """Tổng doanh thu (APPROVED)"""
  totalRevenue: Mixed

  """Tổng doanh thu nhánh cá nhân (APPROVED)"""
  totalPersonalRevenue: Mixed

  """Tổng doanh thu nhánh (APPROVED)"""
  totalBranchShopAffiliateRevenue: Mixed

  """Tổng doanh thu ước tính (APPROVED,PENDING)"""
  totalRevenueEstimate: Mixed

  """Tổng doanh thu nhánh cá nhân (APPROVED,PENDING)"""
  totalPersonalRevenueEstimate: Mixed

  """Tổng doanh thu ước tính nhánh (APPROVED,PENDING)"""
  totalBranchShopAffiliateRevenueEstimate: Mixed

  """Tổng hoa hồng (APPROVED)"""
  totalAmount: Mixed

  """Tổng hoa hồng cá nhân (APPROVED)"""
  totalPersonalAmount: Mixed

  """Tổng hoa hồng nhánh (APPROVED)"""
  totalBranchShopAffiliateAmount: Mixed

  """Tổng hoa hồng ước tính (APPROVED,PENDING)"""
  totalAmountEstimate: Mixed

  """Tổng hoa hồng nhánh cá nhân (APPROVED,PENDING)"""
  totalPersonalAmountEstimate: Mixed

  """Tổng hoa hồng ước tính nhánh (APPROVED,PENDING)"""
  totalBranchShopAffiliateAmountEstimate: Mixed
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
}

type ShopAffiliateProductCommissionPolicyPageData {
  data: [ShopAffiliateProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateProductSalesBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: String
  shopAffiliate: ShopAffiliate
  affiliateId: String
  affiliate: Affiliate
  customerId: String
  customer: Customer
  globalCustomerId: String
  globalCustomer: GlobalCustomer
  memberId: String
  member: Member
  productSalesBonusPolicyId: String
  productSalesBonusPolicy: ProductSalesBonusPolicy
  productSalesBonusPolicyName: String

  """Tổng doanh thu (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenue: Mixed

  """Tổng doanh thu cá nhân tự bán (Cá nhân)"""
  amountPersonalRevenue: Mixed

  """Tổng doanh thu của nhánh bán cho cá nhân (Nhánh bán cho cá nhân)"""
  amountBranchToShopAffiliateRevenue: Mixed

  """Tổng doanh thu của cả nhánh (Nhánh)"""
  amountBranchShopAffiliateRevenue: Mixed

  """Tổng điểm thưởng (Cá nhân + Nhánh bán cho cá nhân)"""
  totalPoint: Mixed

  """Tổng điểm thưởng cá nhân tự bán (Cá nhân)"""
  amountPersonalPoint: Mixed

  """Tổng điểm thưởng nhánh cho cá nhân (Cá nhân + nhánh bán cho cá nhân)"""
  amountBranchToShopAffiliatePoint: Mixed

  """Tổng điểm thưởng nhánh tự bán trong chính sách này (Nhánh)"""
  amountBranchShopAffiliatePoint: Mixed

  """Tổng nhánh full"""
  countBranchFull: Int

  """Tổng tiền thưởng nhận được (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonus: Mixed

  """Tổng tiền thưởng nhận được mà cá nhân tự bán ước tính (Cá nhân)"""
  amountPersonalBonus: Mixed

  """
  Tổng tiền thưởng nhận được mà nhánh bán cho cá nhân ước tính (Nhánh bán cho cá nhân)
  """
  amountBranchToShopAffiliateBonus: Mixed

  """
  Tổng tiền thưởng nhận được mà của các thành viên trong nhánh thuộc chính sách này (Nhánh)
  """
  amountBranchShopAffiliateBonus: Mixed

  """
  Tổng tiền thưởng cơ bản của cá nhân (Cá nhân  + Nhánh bán cho cá nhân )
  """
  amountBasicBonus: Mixed

  """
  Tổng tiền thưởng cơ bản của các thành viên trong nhanh thuộc chính sách này (Nhánh)
  """
  amountBranchShopAffiliateBasicBonus: Mixed

  """
  Tổng tiền thưởng nâng cao của cá nhân (Cá nhân  + Nhánh bán cho cá nhân )
  """
  amountAdvanceBonus: Mixed

  """
  Tổng tiền thưởng nâng cao của các thành viên trong nhanh thuộc chính sách này (Nhánh)
  """
  amountBranchShopAffiliateAdvanceBonus: Mixed
  amountBonusCalculationFormulas: [String]
  amountBasicBonusCalculationFormulas: [String]
  amountAdvanceBonusCalculationFormulas: [String]

  """Tổng doanh thu ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  totalRevenueEstimate: Mixed

  """Tổng doanh thu do cá nhân bán được (Cá nhân)"""
  amountPersonalRevenueEstimate: Mixed

  """
  Tổng doanh thu do cấp dưới bán được cho cá nhân (Nhánh bán cho cá nhân)
  """
  amountBranchToShopAffiliateRevenueEstimate: Mixed

  """
  Tổng ước tính tất cả doanh thu của cấp dưới bán được trong chính sách này (Nhánh)
  """
  amountBranchShopAffiliateRevenueEstimate: Mixed

  """Tổng điểm ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  totalPointEstimate: Mixed

  """Tổng điểm cá nhân tự bán ước tính (Cá nhân)"""
  amountPersonalPointEstimate: Mixed

  """Tổng điểm nhánh bán cho cá nhân ước tính (Nhánh bán cho cá nhân)"""
  amountBranchToShopAffiliatePointEstimate: Mixed

  """
  Tổng tiền thưởng nhận được của toàn bộ cấp dưới trong chính sách này (Nhánh)
  """
  amountBranchShopAffiliatePointEstimate: Mixed

  """
  Giá trị thưởng cơ bản đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApply: Float

  """
  Giá trị thưởng nâng cao đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  advancedBonusValueApply: Float

  """Tổng nhánh full ước tính"""
  countBranchFullEstimate: Int

  """Tổng tiền thưởng nhận được ước tính (Cá nhân + Nhánh bán cho cá nhân)"""
  amountBonusEstimate: Mixed

  """Tổng tiền thưởng nhận được mà cá nhân tự bán ước tính (Cá nhân)"""
  amountPersonalBonusEstimate: Mixed

  """
  Tổng tiền thưởng nhận được mà nhánh bán cho cá nhân ước tính (Nhánh bán cho cá nhân)
  """
  amountBranchToShopAffiliateBonusEstimate: Mixed

  """
  Tổng tiền thưởng nhận được của toàn bộ cấp dưới trong chính sách này (Nhánh)
  """
  amountBranchShopAffiliateBonusEstimate: Mixed

  """
  Tổng tiền thưởng cơ bản của cá nhân ước tính (Cá nhân  + Nhánh bán cho cá nhân )
  """
  amountBasicBonusEstimate: Mixed

  """
  Tổng tiền thưởng cơ bản của các thành viên trong nhanh thuộc chính sách này ước tính (Nhánh)
  """
  amountBranchShopAffiliateBasicBonusEstimate: Mixed

  """
  Tổng tiền thưởng năng cao của cá nhân ước tính (Cá nhân  + Nhánh bán cho cá nhân )
  """
  amountAdvanceBonusEstimate: Mixed

  """
  Tổng tiền thưởng nâng cao của các thành viên trong nhanh thuộc chính sách này ước tính (Nhánh)
  """
  amountBranchShopAffiliateAdvanceBonusEstimate: Mixed

  """
  Giá trị thưởng cơ bản ước tính đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  bonusValueApplyEstimate: Float

  """
  Giá trị thưởng nâng cao ước tính đang được áp dụng cho đối tác bán hàng ở chính sách này
  """
  advancedBonusValueApplyEstimate: Float
  amountBonusEstimateCalculationFormulas: [String]
  amountBasicBonusEstimateCalculationFormulas: [String]
  amountAdvanceBonusEstimateCalculationFormulas: [String]
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
}

type ShopAffiliateProductSalesBonusPolicyPageData {
  data: [ShopAffiliateProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliatePublic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  affiliateId: String
  affiliate: Affiliate
  code: String
  phone: String
  memberId: String
  member: MemberPublic
  customerId: String
  customer: CustomerPublic
  globalCustomerId: String
  currentTier: Int
  shopAffiliateLevel: Int
  name: String
  taxCode: String
  wallets: [Wallet]
  shopAffiliateLabelIds: [ID]
  shopAffiliateLabels: [ShopAffiliateLabel]
  totalRevenue: Mixed
  totalPersonalRevenue: Mixed
  totalBranchShopAffiliateRevenue: Mixed

  """Tổng tiền tất cả đơn (cá nhân + cấp dưới)"""
  totalOrderAmount: Mixed

  """Tổng số đơn (cá nhân + cấp dưới)"""
  totalOrderCount: Mixed

  """Tổng tiền các đơn đã hoàn thành (completed)"""
  totalOrderCompletedAmount: Mixed

  """Số đơn đã hoàn thành (completed)"""
  totalOrderCompletedCount: Mixed

  """Tổng tiền các đơn đang xử lý (processing)"""
  totalOrderProcessingAmount: Mixed

  """Số đơn đang xử lý (processing)"""
  totalOrderProcessingCount: Mixed

  """Tổng tiền các đơn đã hủy (canceled)"""
  totalOrderCanceledAmount: Mixed

  """Số đơn đã hủy (canceled)"""
  totalOrderCanceledCount: Mixed

  """
  Tổng số lượng sản phẩm bán ra (cộng cả cấp dưới) — tính theo qty trong items
  """
  totalProductCount: Mixed

  """Tổng số sản phẩm trong các đơn đã hoàn thành (completed)"""
  totalProductCompletedCount: Mixed

  """Tổng số sản phẩm trong các đơn đang xử lý (processing)"""
  totalProductProcessingCount: Mixed

  """Tổng số sản phẩm trong các đơn đã hủy (canceled)"""
  totalProductCanceledCount: Mixed

  """Số hợp đồng bán bởi cá nhân (personal)"""
  totalPersonalServiceContractCount: Mixed

  """Số hợp đồng bán bởi cấp dưới (branch)"""
  totalBranchShopAffiliateServiceContractCount: Mixed

  """Tổng tiền hợp đồng (cá nhân + cấp dưới)"""
  totalServiceContractAmount: Mixed

  """Tổng số hợp đồng (cá nhân + cấp dưới)"""
  totalServiceContractCount: Mixed

  """Tổng tiền hợp đồng đã được approved (trạng thái APPROVED)"""
  totalServiceContractApprovedAmount: Mixed

  """Số hợp đồng đã được approved"""
  totalServiceContractApprovedCount: Mixed

  """Tổng: tiền nhận từ chính sách hoa hồng giới thiệu"""
  totalFromReferralCommissionPolices: Mixed

  """
  Tổng: tiền nhận từ các chính sách hoa hồng (product + service commission)
  """
  totalFromCommissionPolicies: Mixed

  """Tổng: tiền nhận từ các chính sách thưởng bán hàng (sales bonus)"""
  totalFromSalesBonusPolicies: Mixed

  """
  Tổng: tiền nhận từ thưởng nhóm trực tiếp (direct subordinate sales bonus)
  """
  totalFromDirectSubordinateSalesBonusPolicies: Mixed

  """
  Tổng: tiền nhận từ thưởng cá nhân (product + service individual bonuses)
  """
  totalFromIndividualSalesBonusPolicies: Mixed

  """Tổng: tiền nhận từ chia sẻ voucher (voucher sharing)"""
  totalFromVoucherSharing: Mixed

  """
  Tổng: tiền nhận từ chênh lệch chiết khấu theo cấp bậc (affiliate level discount difference)
  """
  totalFromDiscountDifferenceAffiliateLevelDiscountCommission: Mixed

  """Tổng: tiền nhận từ hoàn thành nhiệm vụ (task rewards)"""
  totalFromTask: Mixed

  """Tổng: tiền nhận từ các phần thưởng bảng xếp hạng (leaderboard rewards)"""
  totalFromLeaderBoard: Mixed
}

type ShopAffiliateRecurringProductCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ShopAffiliateRecurringProductCommissionPolicyPageData {
  data: [ShopAffiliateRecurringProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateRecurringServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ShopAffiliateRecurringServiceContractTypeCommissionPolicyPageData {
  data: [ShopAffiliateRecurringServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateReferralCommissionData {
  """Tên đối tác"""
  shopAffiliateName: String

  """Tổng hoa hồng"""
  totalCommission: Mixed

  """Tổng hoa hồng giới thiệu"""
  totalReferralCommission: Mixed

  """Tổng hoa hồng thưởng đạt số lượng giới thiệu"""
  totalKpiReferralCommission: Mixed
}

type ShopAffiliateReferralCommissionLog {
  """Thời điểm"""
  time: String

  """Hoa hồng giới thiệu thực nhận"""
  referralCommission: Mixed

  """Hoa hồng giới thiệu khả dụng"""
  referralCommissionEstimate: Mixed

  """Hoa hồng thưởng đạt số lượng giới thiệu"""
  kpiReferralCommission: Mixed
  kpiReferralCommissionEstimate: Mixed

  """Tổng hoa hồng"""
  totalCommission: Mixed

  """Tổng hoa hồng ước tính"""
  totalCommissionEstimate: Mixed
  totalReferralAmount: Mixed
  totalPersonalReferralAmount: Mixed
  totalBranchShopAffiliateReferralAmount: Mixed
  totalReferralAmountEstimate: Mixed
  totalPersonalReferralAmountEstimate: Mixed
  totalBranchShopAffiliateReferralAmountEstimate: Mixed
}

type ShopAffiliateReferralCommissionLogPageData {
  data: [ShopAffiliateReferralCommissionLog]
  total: Int
  pagination: Pagination
}

type ShopAffiliateRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  globalCustomerId: String
  customerId: String
  customer: Customer
  status: ShopAffiliateRequestStatus
  recruitedId: String
  recruited: Customer
  referrerPhoneNumber: String
  referrerCode: String
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  name: String
  phone: String
  email: String
  citizenId: String
  fullAddress: String
  isPaid: Boolean

  """Người giới thiệu"""
  referrer: Customer

  """Loại yêu cầu"""
  type: ShopAffiliateRequestType

  """QrCode MbBank"""
  qrCode: String
  fee: Mixed
  taxCode: String
  passwordInput: String
}

type ShopAffiliateRequestPageData {
  data: [ShopAffiliateRequest]
  total: Int
  pagination: Pagination
}

enum ShopAffiliateRequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ShopAffiliateRequestType {
  """Đăng ký"""
  REGISTER

  """Gia hạn"""
  RENEWAL
}

type ShopAffiliateServiceContractTypeCommissionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  affiliateId: ID
  shopAffiliateId: ID
  globalCustomerId: ID
  customerId: ID
  serviceContractTypeCommissionPolicyId: ID
  serviceContractTypeCommissionPolicyName: String
  startDate: DateTime
  endDate: DateTime
  isActivated: Boolean
  totalAmount: Mixed
  totalAmountEstimate: Mixed
  totalRevenue: Mixed
  totalRevenueEstimate: Mixed
  totalPersonalAmount: Mixed
  totalPersonalAmountEstimate: Mixed
  totalPersonalRevenue: Mixed
  totalPersonalRevenueEstimate: Mixed
  totalBranchShopAffiliateAmount: Mixed
  totalBranchShopAffiliateAmountEstimate: Mixed
  totalBranchShopAffiliateRevenue: Mixed
  totalBranchShopAffiliateRevenueEstimate: Mixed
}

type ShopAffiliateServiceContractTypeCommissionPolicyPageData {
  data: [ShopAffiliateServiceContractTypeCommissionPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateShopVoucherSharingPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopAffiliateId: ID
  affiliateId: ID
  customerId: ID
  globalCustomerId: ID
  memberId: ID
  shopVoucherSharingPolicyId: ID
  shopVoucherSharingPolicy: ShopVoucherSharingPolicy
  shopVoucherSharingPolicyName: String
  startDate: DateTime
  endDate: DateTime
  isActivated: Boolean
  releasedAmountBonus: Mixed
  pendingAmountBonus: Mixed
  approvedAmountBonus: Mixed
  canceledAmountBonus: Mixed
  disabledAmountBonus: Mixed
  totalShopVoucherSharingLog: Int
  releasedAmountShopVoucherSharingLog: Int
  pendingAmountShopVoucherSharingLog: Int
  approvedAmountShopVoucherSharingLog: Int
  canceledAmountShopVoucherSharingLog: Int
  disabledAmountShopVoucherSharingLog: Int
}

type ShopAffiliateShopVoucherSharingPolicyPageData {
  data: [ShopAffiliateShopVoucherSharingPolicy]
  total: Int
  pagination: Pagination
}

type ShopAffiliateStatisticChildShopAffiliateData {
  shopAffiliateStats: ShopAffiliateStatisticChildShopAffiliateDetail
  topChildShopAffiliateRevenue: [TopChildShopAffiliateRevenueDetail]
}

type ShopAffiliateStatisticChildShopAffiliateDetail {
  direct: Int
  indirect1: Int
  indirect2: Int
  indirect3: Int
  others: Int
}

type ShopAffiliateStatisticDownlines {
  tier: Int
  total: Int
  shopAffiliate: [ShopAffiliate]
}

type ShopBanner {
  """Loại banner image,youtube"""
  type: String

  """Hình ảnh"""
  image: String

  """Tiêu đề"""
  title: String

  """Mô tả tiêu đề"""
  subtitle: String

  """Loại hành động WEBSITE,PRODUCT,VOUCHER,SHOP,NONE"""
  actionType: String

  """Đường dẫn website"""
  link: String

  """Mã sản phẩm"""
  productId: ID

  """Mã voucher"""
  voucherId: ID

  """Hiển thị công khai"""
  isPublic: Boolean

  """Link youtube"""
  youtubeLink: String
  product: Product
  voucher: ShopVoucher
}

input ShopBannerInput {
  """Loại banner image,youtube"""
  type: String

  """Hình ảnh"""
  image: String!

  """Tiêu đề"""
  title: String

  """Mô tả tiêu đề"""
  subtitle: String

  """Loại hành động WEBSITE,PRODUCT,VOUCHER,SHOP,NONE"""
  actionType: String!

  """Đường dẫn website"""
  link: String

  """Mã sản phẩm"""
  productId: ID

  """Mã voucher"""
  voucherId: ID

  """Hiển thị công khai"""
  isPublic: Boolean

  """Link youtube"""
  youtubeLink: String
}

type ShopBranch {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã chi nhánh"""
  code: String

  """Tên chi nhánh"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """hiệu lực hay không hiệu lực"""
  activated: Boolean

  """Toạ độ"""
  location: Mixed

  """Hình ảnh cover"""
  coverImage: String

  """Mở cửa"""
  isOpen: Boolean

  """Thời gian chuẩn bị"""
  shipPreparationTime: String

  """Khoản cách giao hàng mặc định"""
  shipDefaultDistance: Int

  """Phí giao hàng mặc định"""
  shipDefaultFee: Float

  """Phí ship cộng thêm mỗi km"""
  shipNextFee: Float

  """Phí ship dưới 1 km"""
  shipOneKmFee: Float

  """Bật phí ship dưới 1 km"""
  shipUseOneKmFee: Boolean

  """Ghi chú cho shipper"""
  shipNote: String

  """Ngày xoá"""
  deletedAt: DateTime
  member: MemberPublic
  preBookingTimeSlotConfig: ShopBranchPreBookingTimeSlotConfig
  distance(lat: Float, lng: Float): Mixed
  operatingTimes: [OperatingTime]
}

type ShopBranchPageData {
  data: [ShopBranch]
  total: Int
  pagination: Pagination
}

type ShopBranchPreBookingTimeSlotConfig {
  isActivated: Boolean

  """Khoảng cách giữa các khung giờ"""
  timeSlotInterval: Int

  """Có giới hạn số lượt đặt tối đa mỗi khung giờ"""
  hasMaxPreBookingPerTimeSlot: Boolean

  """
  Số lượt đặt tối đa cho mỗi khung giờ (Sử dụng khi hasMaxPreBookingPerTimeSlot=true)
  """
  maxPreBookingPerTimeSlot: Int

  """Có giới hạn thời gian đặt trước tối đa"""
  hasMaxAdvancePreBookingTime: Boolean

  """
  Thời gian đặt trước tối đa (Sử dụng khi hasMaxAdvancePreBookingTime=true)
  """
  maxAdvancePreBookingTime: Int

  """Có giới hạn thời gian đặt tối thiếu"""
  hasMinAdvancePreBookingTime: Boolean

  """Thời gian đặt tối thiếu (Sử dụng khi hasMinAdvancePreBookingTime=true)"""
  minAdvancePreBookingTime: Int
}

input ShopBranchPreBookingTimeSlotConfigInput {
  isActivated: Boolean
  timeSlotInterval: Int
  hasMaxPreBookingPerTimeSlot: Boolean
  maxPreBookingPerTimeSlot: Int
  hasMaxAdvancePreBookingTime: Boolean
  maxAdvancePreBookingTime: Int
  hasMinAdvancePreBookingTime: Boolean
  minAdvancePreBookingTime: Int
}

type ShopCategory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên phân loại"""
  name: String

  """Hình ảnh"""
  image: String

  """Mô tả"""
  desc: String

  """Ưu tiên"""
  priority: Int
  shopCount: Int
}

type ShopCategoryPageData {
  data: [ShopCategory]
  total: Int
  pagination: Pagination
}

type ShopComment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã đơn hàng"""
  orderId: ID

  """Tên người comment"""
  ownerName: String

  """Nội dung bình luận"""
  message: String

  """Điểm đánh giá"""
  rating: Int

  """Trạng thái bình luận PENDING,PUBLIC,HIDDEN"""
  status: String

  """Tag"""
  tags: [ShopTag]

  """Hình ảnh"""
  images: [String]
}

type ShopCommentPageData {
  data: [ShopComment]
  total: Int
  pagination: Pagination
}

type ShopCommissionsStatistics {
  pendingCommissions: Mixed
  approvedUnWithdrawalCommissions: Mixed
  approveCommissions: Mixed
  cancelCommissions: Mixed
}

type ShopConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Mã CRM VNPost"""
  vnpostCode: String

  """Điện thoại VNPost"""
  vnpostPhone: String

  """Tên người dùng VNPost"""
  vnpostName: String

  """Thời gian chuẩn bị"""
  shipPreparationTime: String

  """Khoản cách giao hàng mặc định"""
  shipDefaultDistance: Int

  """Phí giao hàng mặc định"""
  shipDefaultFee: Float

  """Phí ship cộng thêm mỗi km"""
  shipNextFee: Float

  """Phí ship dưới 1 km"""
  shipOneKmFee: Float

  """Bật phí ship dưới 1 km"""
  shipUseOneKmFee: Boolean

  """Ghi chú cho shipper"""
  shipNote: String

  """Đánh giá sao"""
  rating: Float

  """Số lượng đánh giá"""
  ratingQty: Int

  """Số lượng đã bán"""
  soldQty: Int

  """Tiêu đề Upsale"""
  upsaleTitle: String

  """Màu primary"""
  primaryColor: String

  """Màu accent"""
  accentColor: String

  """Bật tin nhắn đơn hàng"""
  smsOrder: Boolean

  """Bạt tin nhắn OTP"""
  smsOtp: Boolean

  """Bật tin nhắn CTV"""
  smsCol: Boolean

  """Bật / tắt cộng tác viên"""
  collaborator: Boolean

  """Yêu cầu duyệt cộng tác viên"""
  colApprove: Boolean

  """Yêu cầu CTV có số đơn tối thiểu"""
  colMinOrder: Int

  """Tính hoa hồng dựa trên điệu kiên gì"""
  colCommissionBy: String

  """Hoa hồng cố định theo % hoặc VND """
  colCommissionUnit: String

  """Giá trị hoa hồng trên từng đơn hàng"""
  colCommissionValue: Float

  """Điều khoản cộng tác viên"""
  colTerm: String

  """Trạng thái kết nối"""
  cassoStatus: String

  """Tài khoản Casso"""
  cassoUser: Mixed

  """Bật / tắt chuyển khoản ngân hàng qua casso"""
  cassoEnabled: Boolean

  """Danh sách tài khoản ngân hàng"""
  banks: [Bank]

  """Thông tin terminal của MBBank"""
  mbTerminal: MBTerminal
  mbEnabled: Boolean
  napasEnabled: Boolean

  """Bật / tắt thanh toán khi nhận hàng"""
  codEnabled: Boolean

  """Bật / tắt thanh toán momo"""
  momoEnabled: Boolean

  """Bật / tắt thanh toán vnpay"""
  vnpayEnabled: Boolean

  """Bật / tắt thanh toán payon"""
  payonEnabled: Boolean

  """Bật / tắt thanh toán zalo"""
  zalopayEnabled: Boolean

  """Giới hạn số đơn được đặt cùng 1 lúc"""
  limitOpenOrder: Int

  """Giới hạn số sản phẩm trong 1 đơn hàng"""
  limitItem: Int

  """Giới hạn số lần giao hàng thất bại trong 1 đơn hàng"""
  limitDeliveryFail: Int

  """Thông tin chung"""
  intro: String

  """Điều khoản cửa cửa hàng"""
  terms: String

  """Thiết lập tính năng"""
  featureConfig: ShopFeatureConfig
  shopPaymentConfig: ShopPaymentConfig
  valueAddedTaxConfig: ValueAddedTaxConfig
  authenticationCustomerConfig: ShopConfigAuthenticationCustomer

  """Cấu hình cho SEO"""
  SEOConfig: SEOConfig
  ahamoveConfig: AhamoveConfig
  analyticConfig: AnalyticConfig
  distributorConfig: DistributorConfig

  """Cấu hình tên miền"""
  domainConfig: DomainConfig
  grabExpressConfig: GrabExpressConfig
  internalDriverConfig: InternalDriverConfig
  leaderBoardConfig: LeaderBoardConfig
  manychatConfig: ManychatConfig
  notifyConfig: NotifyConfig
  orderConfig: OrderConfig
  rewardPointConfig: RewardPointConfig
  salePointConfig: SalePointConfig
  banners: [ShopBanner]
  productGroups: [ShopProductGroup]
  tags: [ShopTag]
  SMTPConfig: SMTPConfig
  supportConfig: SupportConfig
  useRewardPointConfig: UseRewardPointConfig
  viettelPostConfig: ViettelPostConfig
  wareHouseConfig: WareHouseConfig
  webhookConfig: WebhookConfig
  zaloConfig: ZaloConfig
}

type ShopConfigAuthenticationCustomer {
  registerRequireOTP: Boolean
  registerFakeOTPAfterSecond: Int
  registerCustomerWithReferralCode: Boolean
}

input ShopConfigAuthenticationCustomerInput {
  registerRequireOTP: Boolean
  registerFakeOTPAfterSecond: Int
  registerCustomerWithReferralCode: Boolean
}

type ShopConfigPublic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID
  banks: [Bank]

  """Bật / tắt thanh toán khi nhận hàng"""
  codEnabled: Boolean

  """Bật / tắt thanh toán momo"""
  momoEnabled: Boolean

  """Bật / tắt thanh toán vnpay"""
  vnpayEnabled: Boolean

  """Bật / tắt thanh toán payon"""
  payonEnabled: Boolean

  """Bật / tắt thanh toán zalo"""
  zalopayEnabled: Boolean

  """Giới hạn số đơn được đặt cùng 1 lúc"""
  limitOpenOrder: Int

  """Giới hạn số sản phẩm trong 1 đơn hàng"""
  limitItem: Int

  """Thông tin chung"""
  intro: String

  """Điều khoản cửa cửa hàng"""
  terms: String
  isInvoiceHasIssues: Boolean
}

input ShopCreateShopAffiliateRequestInput {
  shopId: String
  phone: String
  countryCode: String
  name: String
  email: String
  citizenId: String
  fullAddress: String
  gender: String
  referrerPhoneNumber: String
  referrerCode: String
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  password: String
  taxCode: String
  psid: Mixed
}

type ShopDisbursementPeriod {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  status: String
  memberId: String
  member: MemberPublic
  startDateReceivingRequest: DateTime
  endDateReceivingRequest: DateTime
  completedAt: DateTime
  minimumAmountEachRequest: Mixed
  maximumAmountEachRequest: Mixed
  accountingDate: DateTime
  expectedPaymentDate: DateTime

  """Tổng số tiền yêu cầu giải ngân"""
  totalAmountRequested: Mixed

  """Tổng số tiền chờ giải ngân"""
  totalAmountRequestWaitForPay: Mixed

  """Tổng số tiền bị từ chối giải ngân"""
  totalAmountRequestRefusePayment: Mixed

  """Tổng số tiền giải ngân thành công"""
  totalAmountRequestPaymentSuccess: Mixed

  """Tổng số tiền giải ngân thất bại"""
  totalAmountRequestPaymentFailed: Mixed
  isWithholdingPersonalIncomeTax: Boolean
  personalIncomeTaxPercent: Int
  disbursementRequests: [DisbursementRequest]
}

type ShopDisbursementPeriodPageData {
  data: [ShopDisbursementPeriod]
  total: Int
  pagination: Pagination
}

type ShopFeatureConfig {
  serviceFeature: ShopServiceFeatureConfig
  minigameFeature: ShopMinigameFeatureConfig
}

input ShopFeatureConfigInput {
  serviceFeature: ShopServiceFeatureConfigInput
  minigameFeature: ShopMinigameFeatureConfigInput
}

type ShopMinigameFeatureConfig {
  """Bật tính năng dịch vụ"""
  isActivated: Boolean
}

input ShopMinigameFeatureConfigInput {
  """Bật tính năng dịch vụ"""
  isActivated: Boolean
}

type ShopPaymentConfig {
  shopPaymentNextPayConfigs: [ShopPaymentNextPayConfig]
  shopPaymentPayFrontsConfig: ShopPaymentPayFrontsConfig
  shopPaymentDebtConfig: ShopPaymentDebtConfig
}

input ShopPaymentConfigInput {
  shopPaymentNextPayConfigs: [ShopPaymentNextPayConfigInput]
  shopPaymentPayFrontsConfig: ShopPaymentPayFrontsConfigInput
  shopPaymentDebtConfig: ShopPaymentDebtConfigInput
}

type ShopPaymentDebtConfig {
  isActivated: Boolean
}

input ShopPaymentDebtConfigInput {
  isActivated: Boolean
}

type ShopPaymentNextPayConfig {
  """Bật tính năng Shop Service Feature Config"""
  enabled: Boolean

  """ID của Merchant"""
  merchantId: String

  """Khóa bí mật của Merchant"""
  secretKey: String

  """ID của POS"""
  posId: String
  mobileUsername: String
  mobilePassword: String
  applyShopBranchId: ID
  applyShopBranch: ShopBranch
}

input ShopPaymentNextPayConfigInput {
  """Bật tính năng Shop Service Feature Config"""
  enabled: Boolean

  """ID của Merchant"""
  merchantId: String

  """Khóa bí mật của Merchant"""
  secretKey: String

  """ID của POS"""
  posId: String
  mobileUsername: String
  mobilePassword: String
  applyShopBranchId: ID
}

type ShopPaymentPayFrontsConfig {
  isActivated: Boolean
  vendorName: String
  venderCode: String
}

input ShopPaymentPayFrontsConfigInput {
  isActivated: Boolean
}

type ShopPaymentPayFrontsConfigUrlData {
  webConfigUrl: String
}

type ShoppingCart {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  globalCustomerId: ID
  customerId: ID
  memberId: ID
  productId: ID
  amount: Float
  productAttributes: [ShoppingCartProductAttribute]
  product: Product
  note: String
}

type ShoppingCartPageData {
  data: [ShoppingCart]
  total: Int
  pagination: Pagination
}

type ShoppingCartProductAttribute {
  productAttribute: ProductAttribute
  productAttributeId: ID
  productAttributeElements: [ShoppingCartProductAttributeElement]
}

type ShoppingCartProductAttributeElement {
  productAttributeElement: ProductAttributeElement
  productAttributeElementId: ID
}

type ShoppingWalletConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  accountTypeApply: EAccountTypeApply
  minimumDeposit: Float
  maximumDeposit: Float
  accumulatedDepositRewardMilestones: [AccumulatedDepositRewardMilestone]
  isInit: Boolean
  depositMethods: [EDepositMethod]
}

type ShoppingWalletConfigPageData {
  data: [ShoppingWalletConfig]
  total: Int
  pagination: Pagination
}

type ShopPost {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Tiêu đề"""
  title: String

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Số lượt view"""
  view: Int

  """Danh sách chủ đề"""
  topicIds: [ID]
  accountTypeDisplay: EAccountTypeDisplayPost
  tags: [ShopPostTag]
  topics: [ShopTopic]

  """Các key word cho SEO"""
  keywords: String
  seen: Boolean
}

type ShopPostPageData {
  data: [ShopPost]
  total: Int
  pagination: Pagination
}

type ShopPostTag {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Id của member"""
  memberId: ID

  """Tên tag"""
  name: String

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

type ShopPostTagPageData {
  data: [ShopPostTag]
  total: Int
  pagination: Pagination
}

type ShopPostViewLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Mã post"""
  postId: ID

  """Mã người dùng"""
  userId: ID

  """Lượt view"""
  view: Int
}

type ShopPostViewLogPageData {
  data: [ShopPostViewLog]
  total: Int
  pagination: Pagination
}

type ShopProductGroup {
  """Tên nhóm"""
  name: String

  """Hiển thị công khai"""
  isPublic: Boolean

  """Danh sách sản phẩm"""
  productIds: [ID]
  products: [Product]
}

input ShopProductGroupInput {
  """Tên nhóm"""
  name: String!

  """Hiển thị công khai"""
  isPublic: Boolean

  """Danh sách sản phẩm"""
  productIds: [ID]
}

type ShopRegistration {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Email"""
  email: String

  """Số điện thoại"""
  phone: String

  """Họ tên"""
  name: String

  """Mã cửa hàng"""
  shopCode: String

  """Tên cửa hàng"""
  shopName: String

  """Logo cửa hàng"""
  shopLogo: String

  """Địa chỉ"""
  address: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Phường/xã"""
  wardId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Ngày sinh"""
  birthday: DateTime

  """Giới tính male,female,other"""
  gender: String

  """Trạng thái PENDING,APPROVED,REJECTED"""
  status: String

  """Ngày duyệt"""
  approvedAt: DateTime

  """Ngày từ chối"""
  rejectedAt: DateTime

  """Tài khoản chủ shop"""
  memberId: ID

  """Phân loại cửa hàng"""
  categoryId: ID

  """Loại cửa hàng"""
  shopType: String @deprecated(reason: "This field is deprecated, and will be delete soon. User memberType instead")

  """Id khách hàng"""
  customerId: ID
  parentMemberId: ID

  """Mã số thuế"""
  taxCode: String

  """Loại chủ shop BRANCH,SALE,AGENCY,DISTRIBUTOR"""
  memberType: String

  """Mã global customer"""
  globalCustomerId: ID
  globalCustomer: GlobalCustomer
  category: ShopCategory
  customer: Customer
  parentMember: Member
}

type ShopRegistrationPageData {
  data: [ShopRegistration]
  total: Int
  pagination: Pagination
}

type ShopReport {
  summary: Mixed
  categories: Mixed
  topRevenue: Mixed
  topOrder: Mixed
  topDiscount: Mixed
  topCollaborator: Mixed
  topCommission: Mixed
  topSubscriptionFee: Mixed
}

type ShopSaleFeed {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã member"""
  memberId: ID

  """Tên bản tin"""
  name: String

  """Mô tả ngắn"""
  snippet: String

  """Hướng dẫn"""
  tips: String

  """Nội dung"""
  contents: [SaleFeedContent]

  """Mã sản phẩm"""
  productId: ID

  """Trạng thái"""
  active: Boolean

  """Ưu tiên"""
  priority: Int

  """Công khai"""
  isPublic: Boolean

  """Lượt xem"""
  view: Int

  """Ngày xoá"""
  deletedAt: DateTime
  product: Product
  images: [String]
  shareLink: String
  shop: Shop
  comment: Int
}

type ShopSaleFeedPageData {
  data: [ShopSaleFeed]
  total: Int
  pagination: Pagination
}

type ShopServiceCategory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """ID cửa hàng"""
  memberId: String

  """Tên danh mục dịch vụ"""
  name: String
}

type ShopServiceCategoryPageData {
  data: [ShopServiceCategory]
  total: Int
  pagination: Pagination
}

type ShopServiceContractTypeCommissionsStatistics {
  pendingCommissions: Mixed
  approvedUnWithdrawalCommissions: Mixed
  approveCommissions: Mixed
  cancelCommissions: Mixed
}

type ShopServiceFeatureConfig {
  """Bật tính năng dịch vụ"""
  isActivated: Boolean
}

input ShopServiceFeatureConfigInput {
  """Bật tính năng dịch vụ"""
  isActivated: Boolean
}

type ShopServiceSpecialist {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """ID cửa hàng"""
  memberId: String

  """Tên"""
  name: String

  """avatar"""
  avatar: String

  """SDT quốc tế"""
  internationalPhone: String

  """Email"""
  email: String

  """Danh sách ID Chuyên môn phụ trách"""
  shopServiceCategoryIds: [String]

  """Danh sách Chuyên môn phụ trách"""
  shopServiceCategories: [ShopServiceCategory]

  """Địa chỉ"""
  address: Place

  """Số lượng dịch vụ đã làm"""
  serviceCompletedCount: Int
}

type ShopServiceSpecialistPageData {
  data: [ShopServiceSpecialist]
  total: Int
  pagination: Pagination
}

type ShopSubscription {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Gói dịch vụ FREE,MONTH,YEAR"""
  plan: String

  """Ngày hết hạn"""
  expiredAt: DateTime

  """Ngày nhắc nhở hết hạn"""
  remindExpiredAt: DateTime

  """Ngày nhắc nhở khoá"""
  remindLockAt: DateTime

  """Ngày khoá"""
  lockedAt: DateTime

  """Phí dịch vụ"""
  fee: Float

  """Mã yêu cầu đăng ký"""
  requestId: ID
  request: SubscriptionRequest
  estimate: Mixed
}

type ShopSubscriptionPageData {
  data: [ShopSubscription]
  total: Int
  pagination: Pagination
}

type ShopTable {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  code: String

  """* Id cua hang"""
  memberId: ID

  """Id chi nhanh"""
  branchId: ID
  member: Member
  branch: Branch
  pickupUrl: String
}

type ShopTablePageData {
  data: [ShopTable]
  total: Int
  pagination: Pagination
}

type ShopTag {
  """Tên tag"""
  name: String

  """Link icon"""
  icon: String

  """Số lượng"""
  qty: Int
}

input ShopTagInput {
  """Tên tag"""
  name: String!

  """Link icon"""
  icon: String!

  """Số lượng"""
  qty: Int!
}

type ShopTopic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: ID

  """Tên chủ đề"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

type ShopTopicPageData {
  data: [ShopTopic]
  total: Int
  pagination: Pagination
}

type ShopVideo {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: ID

  """Tên video"""
  name: String

  """Link video"""
  link: String

  """Link thumbnail"""
  thumbnail: String

  """Mô tả"""
  description: String

  """Kích hoạt"""
  active: Boolean

  """Ưu tiên"""
  priority: Int
}

type ShopVideoPageData {
  data: [ShopVideo]
  total: Int
  pagination: Pagination
}

type ShopVoucher {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Shop"""
  member: Member

  """Mã khuyến mãi"""
  code: String

  """Mô tả"""
  description: String

  """Kích hoạt"""
  isActive: Boolean

  """Loại giảm giá"""
  type: EShopVoucherType
  applyForOrder: EShopVoucherApplyForOrder

  """
  Có giới hạn số lượng phát hành hay không, nếu TRUE thì sẽ quan tâm đến
  issueNumber và issueByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveIssueNumber: Boolean

  """
  Tổng số lượng phát hành , nếu issueByDate=false thì đây sẽ tổng số lượng phát
  hành xuyên suốt, còn nếu issueByDate=true thì đây sẽ tổng số lượng phát hành
  theo từng ngày(NUMBER)
  """
  issueNumber: Int

  """issueNumber có phải là phát hành theo từng ngày hay không (TRUE/FALSE)"""
  issueByDate: Boolean

  """
  Có giới hạn số lượng sử dụng hay không, nếu TRUE thì sẽ quan tâm đên useLimit
  và useLimitByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveUseLimit: Boolean

  """
  Tổng số lượng giới hạn mỗi khách có thể sử dụng, nếu useLimitByDate=false thì
  đây là tổng giới hạn voucher mỗi khách có thể dụng trong xuyên suốt, còn nếu
  useLimitByDate=true thì đây là tổng giới hạn voucher mỗi khách có thể sử dụng
  mỗi ngày  (NUMBER)
  """
  useLimit: Int

  """
  useLimit có phải là giới hạn số lượng voucher mỗi khác theo mỗi ngày hay không (TRUE/FALSE)
  """
  useLimitByDate: Boolean
  applyType: PricePolicyApplyType

  """Các dịch vụ áp dụng"""
  applyServiceContractTypeIds: [ID]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyServiceContractType: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyServiceContractType: Boolean

  """Các sản phẩm không áp dụng"""
  exceptServiceContractTypeIds: [ID]

  """Đơn vị giảm giá """
  discountUnit: EDiscountUnit

  """Giá trị giảm giá"""
  discountValue: Float

  """Giảm giá tối đa"""
  maxDiscount: Float

  """Sản phẩm quà tặng"""
  offerItems: [OfferItem]

  """Sản phẩm quà tặng"""
  offerItemGroups: [[OfferItem]]

  """Sản phẩm theo nhóm 2"""
  offerItemGroups2: [OfferItemGroup]

  """Sản phẩm giảm giá"""
  discountItems: [DiscountItem]

  """Các sản phẩm áp dụng"""
  applyItemIds: [ID]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyItem: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyItem: Boolean

  """Các sản phẩm không áp dụng"""
  exceptItemIds: [ID]

  """Tổng tiền hàng tối thiểu"""
  minSubtotal: Float

  """Phương thức thanh toán áp dụng"""
  applyPaymentMethods: [String]

  """Số lượng sản phẩm tối thiểu"""
  minItemQty: Int

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Mã giảm giá riêng tư"""
  isPrivate: Boolean

  """Mã giảm giá chỉ dành cho tặng cá nhân"""
  isPersonal: Boolean

  """Hình ảnh"""
  image: String

  """Nội dung html"""
  content: String

  """Đồng giá"""
  samePrice: Float

  """Áp dụng tất cả sản phẩm"""
  offerAllItem: Boolean

  """Số lượng tặng"""
  offerQty: Int

  """Ưu tiên sản phẩm giá cao"""
  offerHighestPrice: Boolean

  """Tụ động thêm sản phẩm ưu đãi"""
  autoAddOfferItem: Boolean

  """Ngày trong tuần áp dụng : từ 1-7 với 1=Thứ 2, 7= Chủ nhật"""
  applyISODayOfWeek: [Int]

  """Khung giờ áp dụng, [ ['HH:mm:ss','HH:mm:ss'] ]"""
  applyTimeOfDay: [[String]]

  """Ngày xoá"""
  deletedAt: DateTime
  receiveShopVoucherThrough: EReceiveShopVoucherThrough
  totalVoucherCustomerUsed: Mixed
  totalVoucherCustomerUsedToday: Mixed
  totalVoucherAllCustomersUsed: Mixed
  totalVoucherAllCustomersUsedToday: Mixed
  remainingUseLimit: Mixed
  totalVoucherAbleUsedToDay: Mixed
  skipPolicies: [EPolicy]

  """Tổng số lần toàn hệ thống đã sử dụng voucher này (không phân biệt ai)."""
  usedAllEvery: Mixed

  """Số lần toàn hệ thống đã dùng voucher này hôm nay."""
  usedAllToday: Mixed

  """Số lần khách hàng hiện tại đã dùng voucher này từ trước đến nay."""
  usedByCustomerEvery: Mixed

  """Số lần khách hàng hiện tại đã dùng voucher này trong ngày hôm nay."""
  usedByCustomerToday: Mixed

  """
  Tổng số lượt voucher đã được gán riêng cho customer (qua shopVoucherAssignments)
  """
  assignedTotal: Mixed

  """Số lượt assignment đã được sử dụng (có usedAt != null)"""
  assignedUsed: Mixed

  """Số lượt assignment đã dùng hôm nay (có usedAt trong ngày hiện tại)"""
  assignedUsedToday: Mixed

  """
  Voucher không giới hạn tổng số lượt sử dụng cho toàn hệ thống (haveIssueNumber = false)
  """
  shopLifetimeUnlimited: Boolean

  """
  Voucher không giới hạn lượt sử dụng mỗi ngày cho mỗi khách hàng (haveUseLimit = false).
  """
  shopDailyUnlimited: Boolean

  """
  Số lượt còn lại mà hệ thống chưa dùng hết (được tính từ issueNumber - usedAll...)
  """
  shopRemainingLifetime: Mixed

  """
  Số lượt khách hàng hiện tại còn được dùng hôm nay, dựa vào useLimit - usedByCustToday nếu có
  """
  shopRemainingDaily: Mixed

  """
  Số lượt còn có thể dùng trong suốt vòng đời của voucher (dựa vào shop hoặc
  assignment). Đây là chỉ số kỹ thuật để lọc những voucher còn xài được.
  """
  numericRemainingLifetime: Mixed

  """
  Số lượt còn có thể dùng trong hôm nay, có xét đến giới hạn ngày nếu có, và số assignment còn lại.
  """
  numericRemainingToday: Mixed

  """
  Customer hiểu rằng voucher này không giới hạn tổng số lần dùng cho cả đời.
  """
  isLifetimeUnlimited: Boolean

  """Voucher không giới hạn số lượt dùng mỗi ngày."""
  isDailyUnlimited: Boolean

  """
  Nếu có giới hạn lifetime, thì hiển thị số lượt còn lại. Nếu không có giới hạn (isLifetimeUnlimited = true) thì = null.
  """
  remainingLifetime: Mixed

  """
  Nếu có giới hạn mỗi ngày, thì hiển thị số lượt còn lại hôm nay. Nếu không có
  giới hạn (isDailyUnlimited = true) thì = null.
  """
  remainingToday: Mixed
  shareLink: String
}

type ShopVoucherAssignment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopVoucherId: ID
  shopVoucher: ShopVoucher
  customerId: ID
  customer: Customer
  memberId: ID
  assignmentFrom: EShopVoucherAssignmentFrom
  isUsed: Boolean
  taskId: ID
  taskLogId: ID
}

type ShopVoucherAssignmentForCustomer {
  shopVoucherId: ID
  shopVoucher: ShopVoucher
  customerId: ID
  customer: Customer
  memberId: ID
  assignmentFrom: EShopVoucherAssignmentFrom
  totalShopVouchers: Int
  lastReceived: DateTime
  totalUsed: Int
}

type ShopVoucherAssignmentForCustomerPageData {
  data: [ShopVoucherAssignmentForCustomer]
  total: Int
  pagination: Pagination
}

type ShopVoucherAssignmentPageData {
  data: [ShopVoucherAssignment]
  total: Int
  pagination: Pagination
}

type ShopVoucherPageData {
  data: [ShopVoucher]
  total: Int
  pagination: Pagination
}

type ShopVoucherSharingPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  minigameId: String
  minigameInfo: Minigame
  minigameHasDeleted: Boolean
  memberId: ID
  member: Member
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  myAffiliateUrlString: String
  releasedAmountBonus: Mixed
  pendingAmountBonus: Mixed
  approvedAmountBonus: Mixed
  canceledAmountBonus: Mixed
  disabledAmountBonus: Mixed
  totalShopVoucherSharingLog: Int
  releasedAmountShopVoucherSharingLog: Int
  pendingAmountShopVoucherSharingLog: Int
  approvedAmountShopVoucherSharingLog: Int
  canceledAmountShopVoucherSharingLog: Int
  disabledAmountShopVoucherSharingLog: Int
}

type ShopVoucherSharingPolicyLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  shopAffiliateShopVoucherSharingPolicyId: ID
  globalCustomerId: ID
  customerId: ID
  customerName: String
  customerPhone: String
  targetAffiliateId: ID
  targetAffiliateName: String
  targetShopAffiliateId: ID
  targetShopAffiliateName: String
  targetGlobalCustomerId: ID
  targetCustomerId: ID
  targetCustomerName: String
  targetCustomerPhone: String
  shopVoucherSharingPolicyId: ID
  shopVoucherSharingPolicyName: String
  amountBonus: Int
  shopVoucherId: ID
  shopVoucher: ShopVoucher
  shopVoucherCode: String
  shopVoucherAssignmentId: ID
  promotionId: ID
  promotionName: String
  promotionAssignmentId: ID
  minigameMerchantId: String
  minigameApplicationId: String
  minigameVoucherGroupId: String
  minigameVoucherCode: String
  minigameVoucherGroupInfo: MinigameMerchantInfo
  orderId: ID
  orderCode: String
  status: EShopVoucherSharingPolicyLogStatus
}

type ShopVoucherSharingPolicyLogPageData {
  data: [ShopVoucherSharingPolicyLog]
  total: Int
  pagination: Pagination
}

type ShopVoucherSharingPolicyPageData {
  data: [ShopVoucherSharingPolicy]
  total: Int
  pagination: Pagination
}

type ShopVoucherWithinShopVoucherSharingPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopVoucherId: ID
  shopVoucher: ShopVoucher
  minigameMerchantId: String
  minigameApplicationId: String
  minigameVoucherGroupId: String
  minigameVoucherInfo: VoucherGroupMinigame
  memberId: ID
  member: Member
  isWithinShopVoucherSharingPolicy: Boolean
  shopVoucherSharingPolicyId: ID
  amountBonus: Int
}

type ShopVoucherWithinShopVoucherSharingPolicyPageData {
  data: [ShopVoucherWithinShopVoucherSharingPolicy]
  total: Int
  pagination: Pagination
}

type ShopZaloMiniAppConfig {
  backToShopListPage: ShopZaloMiniAppConfigBackToShopListPage
}

type ShopZaloMiniAppConfigBackToShopListPage {
  isActivated: Boolean
  contentButton: String
}

input ShopZaloMiniAppConfigBackToShopListPageInput {
  isActivated: Boolean
  contentButton: String
}

input ShopZaloMiniAppConfigInput {
  backToShopListPage: ShopZaloMiniAppConfigBackToShopListPageInput
}

type SignatureContractDetailItem {
  """dmhanghoa_id — ID gói"""
  packageId: String

  """ma_hanghoa — Mã gói"""
  packageCode: String

  """ten_hanghoa — Tên gói"""
  packageName: String

  """dvt — Đơn vị tính"""
  unit: String

  """so_luong — Số lượng"""
  quantity: Int

  """don_gia — Đơn giá"""
  unitPrice: Float

  """tien_thue — Tiền thuế"""
  taxAmount: Float

  """thanhtien — Tổng trước thuế"""
  grossAmount: Float

  """thanh_tien — Thành tiền sau thuế"""
  netAmount: Float

  """ma_thue — Mã thuế suất"""
  taxCode: Int

  """ma_nhacungcap — Mã nhà cung cấp"""
  providerCode: String
}

type SignatureRegistrationRequest {
  """ID của yêu cầu"""
  id: String

  """Thời điểm tạo yêu cầu"""
  createdAt: DateTime

  """Thời điểm cập nhật gần nhất"""
  updatedAt: DateTime
  memberId: ID
  member: Member
  agencyId: ID
  agency: Agency

  """ID hồ sơ chữ ký số liên quan"""
  signatureRecordId: String

  """Mã số thuế của khách hàng"""
  taxCode: String
  legalAddress: String

  """Tên khách hàng"""
  customerName: String

  """Địa chỉ liên hệ"""
  contactAddress: String

  """Người đại diện"""
  representative: String

  """Chức danh người đại diện"""
  representativeTitle: String

  """Cơ quan thuế quản lý"""
  taxOffice: String

  """Số căn cước công dân"""
  citizenId: String

  """Nơi cấp CCCD"""
  citizenIdIssuedPlace: String

  """Ngày cấp CCCD"""
  citizenIdIssuedDate: DateTime

  """Số tài khoản ngân hàng"""
  bankAccount: String

  """Tên ngân hàng"""
  bankName: String

  """Người liên hệ"""
  contactPerson: String

  """Địa chỉ nhận thiết bị Token"""
  tokenDeliveryAddress: String

  """Số điện thoại liên hệ"""
  contactPhone: String

  """Email liên hệ"""
  contactEmail: String

  """Phương thức nhận thông báo (0: Email, 1: SMS,...)"""
  notificationMethod: Int

  """ID gói dịch vụ đăng ký"""
  packageId: String
  packageName: String

  """Loại chữ ký số (cá nhân/doanh nghiệp)"""
  signatureType: String

  """Nhà cung cấp chữ ký số"""
  provider: String

  """Số tháng sử dụng"""
  durationMonths: Int

  """Tổng số tiền thanh toán"""
  totalAmount: Float

  """Thời điểm gửi yêu cầu"""
  requestedAt: DateTime

  """Phương thức thanh toán"""
  paymentMethod: EPaymentMethod

  """Thông tin metadata của thanh toán"""
  paymentMeta: Mixed

  """Thông tin metadata khác của thanh toán"""
  paymentMetas: [Mixed]

  """Trạng thái thanh toán"""
  paymentStatus: ESignatureRegistrationRequestPaymentStatus

  """Ngày thanh toán"""
  paymentDate: DateTime

  """Trạng thái xử lý yêu cầu"""
  requestStatus: ESignatureRegistrationRequestStatus

  """Ghi chú xử lý nội bộ"""
  processingNotes: String
  activationDate: DateTime
  expirationDate: DateTime
  providerName: String
  providerCode: String

  """Thời điểm hoàn tất xử lý"""
  completedAt: DateTime
}

type SignatureRegistrationRequestAttachedFile {
  fileUrls: [String]
  fileType: ESignatureRegistrationRequestAttachedDocumentType
  fileFormat: ESignatureRegistrationRequestAttachedFileFormat
}

input SignatureRegistrationRequestAttachedFileInput {
  fileUrls: [String]
  fileType: ESignatureRegistrationRequestAttachedDocumentType
  fileFormat: ESignatureRegistrationRequestAttachedFileFormat
}

type SignatureRegistrationRequestPageData {
  data: [SignatureRegistrationRequest]
  total: Int
  pagination: Pagination
}

type signDeclarationRegisterInvoiceData {
  ok: String
  success: Boolean
  message: String
}

input SignUpMemberInput {
  username: String!
  password: String!
  name: String!
  phone: String!
  shopName: String
  address: String
  provinceId: String
  districtId: String
  wardId: String
  identityCardNumber: String
  gender: String
  birthday: DateTime
  psid: Mixed
  inviteCode: String
}

type SMTPConfig {
  """Tính năng Gửi mail qua SMTP"""
  isActivatedSendMail: Boolean
  mailSender: String
  mailRecipient: String
}

input SMTPConfigInput {
  """Bật / tắt gửi mail"""
  isActivatedSendMail: Boolean

  """Mail người gửi"""
  mailSender: String

  """Mật khẩu mail gửi"""
  passwordSender: String

  """Mail nhận"""
  mailRecipient: String
}

type Spec {
  name: String
}

type SpecialCommissionPolicyRuleCommon {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  shopAffiliates: [ShopAffiliate]
  shopAffiliateLabels: [ShopAffiliateLabel]
  priority: Int
  rules: [CommonCommissionRule]
}

input SpecialCommissionPolicyRuleCommonInput {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  priority: Int
  rules: [CommonCommissionRuleInput]
}

type SpecialRecurringCommissionPolicyRuleCommon {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  shopAffiliates: [ShopAffiliate]
  shopAffiliateLabels: [ShopAffiliateLabel]
  priority: Int
  rules: [CommonCommissionRule]
  periodAllocations: [PeriodCommissionAllocation]
}

input SpecialRecurringCommissionPolicyRuleCommonInput {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  priority: Int
  rules: [CommonCommissionRuleInput]
  periodAllocations: [PeriodCommissionAllocationInput]
}

type SpecialSaleBonusPolicyPolicyRuleCommon {
  shopAffiliateIds: [ID]
  shopAffiliateLabelIds: [ID]
  shopAffiliates: [ShopAffiliate]
  shopAffiliateLabels: [ShopAffiliateLabel]
  priority: Int
  rules: [CommonSaleBonusPolicyRule]
}

input SpecInput {
  name: String
}

type SpecsTemplate {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  specs: [Spec]
  member: Member
}

type SpecsTemplatePageData {
  data: [SpecsTemplate]
  total: Int
  pagination: Pagination
}

type Staff {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Email đăng nhập"""
  username: String

  """Tên nhân viên"""
  name: String

  """Mã nhân viên"""
  code: String

  """Điện thoại nhân viên"""
  phone: String

  """Ảnh đại diện"""
  avatar: String

  """Địa chỉ"""
  address: String @deprecated(reason: "This field is deprecated, and will be delete soon. User internationalPhone instead")

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  fullAddress: Place @deprecated(reason: "This field is deprecated, and will be delete soon. ShopBranchIds instead")
  branchId: ID
  branch: ShopBranch

  """Mã chi nhánh"""
  shopBranchIds: [ID]
  shopBranches: [ShopBranch]

  """Danh sách phân quyền REPORT,MANAGER,BRANCH,WAREHOUSE,ORDER"""
  scopes: [String]
  staffPermissions: [StaffPermission]
  member: Member
}

type StaffPageData {
  data: [Staff]
  total: Int
  pagination: Pagination
}

type StaffPermission {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID
  member: Member
  shopBranchId: ID
  shopBranch: ShopBranch
  staffId: ID
  staff: Staff
  permissionType: EPermissionType
  permissions: [StaffPermissionGroup]
}

type StaffPermissionGroup {
  """Nhóm phạm vi phân quyền"""
  scopeGroup: EStaffPermissionScopeGroup!

  """Phạm vi phân quyền"""
  permissionScopes: [EStaffPermissionScope]
}

input StaffPermissionGroupInput {
  """Nhóm phạm vi phân quyền"""
  scopeGroup: EStaffPermissionScopeGroup!

  """Phạm vi phân quyền"""
  permissionScopes: [EStaffPermissionScope]
}

type StaffPermissionPageData {
  data: [StaffPermission]
  total: Int
  pagination: Pagination
}

type StaffPermissionScopeData {
  scopeGroup: EStaffPermissionScopeGroup
  permissionScopes: [EStaffPermissionScope]
}

input StaffUpdateMeInput {
  """Tên nhân viên"""
  name: String

  """Điện thoại nhân viên"""
  phone: String

  """Ảnh đại diện"""
  avatar: String

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  fullAddress: PlaceInput
}

type StatisticAmountKeyByMonthCategory {
  thisMonth: Mixed
  lastMonth: Mixed
  otherMonths: Mixed
}

type StatisticDetailMinigame {
  accessGameLogs: Mixed
  playerJoinGameLogs: Mixed
  totalVoucherUsed: Int
  totalVoucherAwarded: Int
  totalPlayerPlayMinigame: Int
  totalPlayerUsedVoucher: Int
  totalPlayerShareCampaign: Int
  totalNewPlayer: Int
  minigameTypeName: String
  totalTurn: Int
  totalShareCompleted: Int
  accessGameCount: Int
}

type StatisticDetailMinigamePageData {
  data: [StatisticDetailMinigame]
  total: Int
  pagination: Pagination
}

type StatisticDirectSubordinatesProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type StatisticIncomeAndExpenditureCashFlow {
  period: DateTime
  totalProfit: Mixed
  totalAmountIncome: Mixed
  income: StatisticIncomeCashFlow
  totalAmountExpenditure: Mixed
  totalAmountExpenditureRelatedPaymentForShopAffiliate: Mixed
  expenditureRelatedPaymentForShopAffiliate: ExpenditureRelatedPaymentForShopAffiliate
  totalAmountExpenditureRelatedProduct: Mixed
  expenditureRelatedProduct: ExpenditureRelatedProduct
  expenditureRelatedServiceContract: ExpenditureRelatedServiceContract
}

input StatisticIncomeAndExpenditureCashFlowOptionInput {
  expenditureInventoryProduct: Boolean
  expenditureShopAffiliate: Boolean
}

type StatisticIncomeCashFlow {
  totalAmountActualRevenueCompletedOrders: Mixed
  countCompletedOrders: Mixed
  totalAmountActualRevenueCompletedServiceContracts: Mixed
  countCompletedServiceContracts: Mixed

  """Tổng số đối tác đã tham gia"""
  totalShopAffiliate: Mixed

  """Tổng doanh thu phí đối tác"""
  totalShopAffiliateFee: Mixed
}

type StatisticIncomeCustomer {
  totalFromReferralCommission: Mixed
  totalFromProductSaleCommission: Mixed
  totalFromProductSalesBonus: Mixed
  totalFromIndividualProductSaleBonus: Mixed
  totalFromDirectSubordinateProductSaleBonus: Mixed
  totalFromReferralCommissionPolices: Mixed
  totalFromCommissionPolicies: Mixed
  totalFromSalesBonusPolicies: Mixed
  totalFromDirectSubordinateSalesBonusPolicies: Mixed
  totalFromIndividualSalesBonusPolicies: Mixed
  totalFromVoucherSharing: Mixed
  totalFromDiscountDifferenceAffiliateLevelDiscountCommission: Mixed
  totalFromTask: Mixed
  totalFromLeaderBoard: Mixed
}

type StatisticIndividualProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type StatisticIndividualServiceContractTypeSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
}

type StatisticInformationCustomer {
  customer: Customer
  interactiveInformation: InteractiveInformationCustomer
  orderInformation: OrderInformationCustomer
}

type StatisticInformationShopAffiliate {
  statisticMonthly: StatisticInformationShopAffiliateMonthly
  shopAffiliate: ShopAffiliate
  referralAndDirectChildShopAffiliateInformation: ReferralAndDirectChildShopAffiliate
  branchShopAffiliateInformation: BranchShopAffiliateInformation
  policyJoined: PolicyJoined
  personalSaleInformation: SaleInformationStatistic
  branchShopAffiliateSaleInformation: SaleInformationStatistic
}

type StatisticInformationShopAffiliateMonthly {
  monthlyReceiveWalletShopAffiliate: Mixed
  monthlyOrderCount: Int
  monthlyReferralCount: Int
}

type StatisticMerchantMinigame {
  totalPlayer: Int
  totalNewPlayer: Int
  totalMinigame: Int
  totalRewarded: Int
  totalAccess: Int
  totalPlayGameLog: Int
}

type StatisticOrderProductPricePolicyDiscount {
  status: String
  totalProductPricePolicyDiscount: Mixed
  totalOrder: Int
}

type StatisticPetroCard {
  monthIndex: Int
  monthStart: DateTime
  monthEnd: DateTime
  totalSpent: Int
  remaining: Int
  cardIdentifier: String
  creditLimit: Int
}

type StatisticPreBooking {
  overview: StatisticPreBookingOverview
  detailedStatisticsByBookingType: [DetailedStatisticsByBookingType]
}

type StatisticPreBookingOverview {
  countTotalPreBookings: Int
  countCompletedBookings: Int
  countCancelledBookings: Int
  countPendingBookings: Int
}

type StatisticProductCommissionPolicy {
  status: String
  totalRevenue: Mixed
  id: ID
  name: String
  memberId: ID
  isActive: Boolean

  """
  Loại hoa hồng COMMISSION_ACCUMULATE,COMMISSION_DIRECT,UNLIMITED_TIER_COMMISSION_DIRECT
  """
  type: String
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [ProductCommissionPolicyRule]
  totalOrderCompletedCount: Mixed
  totalCustomerOrderCompletedCount: Mixed
  totalShopAffiliateOrderCompletedCount: Mixed
  totalRevenueOrderCompletedAmount: Mixed
}

type StatisticProductCommissionPolicyPageData {
  data: [StatisticProductCommissionPolicy]
  total: Int
  pagination: Pagination
}

type StatisticProductPricePolicy {
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  reductionType: String
  type: String
  name: String
  memberId: String
  isActive: Boolean
  applyCount: Int
  rules: [ProductPricePolicyRule]
  totalOrderCompletedCount: Mixed
  totalCustomerOrderCompletedCount: Mixed
  totalShopAffiliateOrderCompletedCount: Mixed
  totalRevenueOrderCompletedAmount: Mixed
}

type StatisticProductPricePolicyPageData {
  data: [StatisticProductPricePolicy]
  total: Int
  pagination: Pagination
}

type StatisticProductSalesBonusPolicy {
  status: String
  totalRevenue: Mixed
  totalPoints: Mixed
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  name: String!
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDate: DateTime
  settlementDuration: Int
  disbursementPeriodId: String
  rules: [ProductSalesBonusPolicyRule]
  advancedRules: [ProductSalesBonusPolicyAdvancedRule]
  totalOrderCompletedCount: Mixed
  totalCustomerOrderCompletedCount: Mixed
  totalShopAffiliateOrderCompletedCount: Mixed
  totalRevenueOrderCompletedAmount: Mixed
}

type StatisticProductSalesBonusPolicyPageData {
  data: [StatisticProductSalesBonusPolicy]
  total: Int
  pagination: Pagination
}

type StatisticProductsRevenue {
  quantity: Int
  revenue: Mixed
  productId: ID!
  product: Product
}

type StatisticProductsRevenuePageData {
  data: [StatisticProductsRevenue]
  total: Int
  pagination: Pagination
}

type StatisticPromotionPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  memberId: String
  startDate: DateTime
  endDate: DateTime
  type: PromotionType
  buyConditionType: ConditionType
  offerConditionType: ConditionType
  conditionValueOfOrder: Float
  isActive: Boolean!
  buyProducts: [PromotionProduct]
  offerProducts: [PromotionProduct]
  description: String
  applyType: PricePolicyApplyType
  quantity: Int
  totalOrderCompletedCount: Mixed
  totalCustomerOrderCompletedCount: Mixed
  totalShopAffiliateOrderCompletedCount: Mixed
  totalRevenueOrderCompletedAmount: Mixed
}

type StatisticPromotionPolicyPageData {
  data: [StatisticPromotionPolicy]
  total: Int
  pagination: Pagination
}

type StatisticReferralCommission {
  status: ReferralCommissionLogStatus
  totalAmount: Mixed
}

type StatisticReferralCommissionData {
  """Tổng đối tác tham gia thành công"""
  totalShopAffiliate: Float!

  """Tổng phí đối tác"""
  totalFee: Float

  """Tổng hoa hồng giới thiệu"""
  totalReferralCommission: Float
}

type StatisticRevenueCommission {
  totalRevenueAmount: Mixed
  totalCommissionAmount: Mixed
}

type StatisticServiceContractData {
  totalRevenue: Mixed
  totalContracts: Int
  newContracts: Int
  renewContracts: Int
}

type StatisticServiceContractTypeSessionLogData {
  totalCustomersCount: Int
  totalSessionsCount: Int
  statisticSessionLogShopBranches: [StatisticSessionLogShopBranch]
}

type StatisticServiceContractTypesRevenue {
  quantity: Int
  revenue: Mixed
  serviceContractTypeId: ID!
  serviceContractType: ServiceContractType
}

type StatisticServiceContractTypesRevenuePageData {
  data: [StatisticServiceContractTypesRevenue]
  total: Int
  pagination: Pagination
}

type StatisticSessionLogShopBranch {
  sessionsCount: Int
  shopBranchId: ID
  shopBranch: ShopBranch
  customersCount: Int
}

type StatisticShopAffiliateProductCommissionPolicyData {
  totalRevenue: Mixed
  totalPersonalRevenue: Mixed
  totalBranchShopAffiliateRevenue: Mixed
  totalRevenueEstimate: Mixed
  totalPersonalRevenueEstimate: Mixed
  totalBranchShopAffiliateRevenueEstimate: Mixed
  totalAmount: Mixed
  totalPersonalAmount: Mixed
  totalBranchShopAffiliateAmount: Mixed
  totalAmountEstimate: Mixed
  totalPersonalAmountEstimate: Mixed
  totalBranchShopAffiliateAmountEstimate: Mixed
}

type StatisticTopShareMinigame {
  playerId: String
  playerName: String
  phone: String
  totalShares: Mixed
}

type StatisticTopShareMinigamePageData {
  data: [StatisticTopShareMinigame]
  total: Int
  pagination: Pagination
}

type StatisticTopUsedVoucherMinigame {
  playerId: String
  playerName: String
  phone: String
  totalUsedVoucher: Mixed
}

type StatisticTopUsedVoucherMinigamePageData {
  data: [StatisticTopUsedVoucherMinigame]
  total: Int
  pagination: Pagination
}

type StatisticTotalAmountAndCount {
  totalAmount: Mixed
  count: Int
}

type StatisticTotalAmountOrderByShopAffiliate {
  period: DateTime
  totalAmount: Mixed
  countOrder: Int
}

type StatisticVoucherGroupByMinigame {
  minigameId: String
  voucherId: String
  name: String
  totalVoucherAward: String
  voucherVoucherUsed: String
}

type StatisticVoucherGroupByMinigamePageData {
  data: [StatisticVoucherGroupByMinigame]
  total: Int
  pagination: Pagination
}

type StoreHouseCommissionLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thành viên"""
  memberId: String

  """Hoa hồng kho"""
  value: Float

  """Đơn hàng"""
  orderId: String

  """Ghi chú"""
  note: String
  order: Order
  member: Member
}

type StoreHouseCommissionLogPageData {
  data: [StoreHouseCommissionLog]
  total: Int
  pagination: Pagination
}

type SubscriberInfo {
  """Mã subscriber"""
  id: String

  """PSID Fanpage"""
  psid: Mixed

  """Tên facebook"""
  name: String

  """Tên """
  firstName: String

  """Họ """
  lastName: String

  """Giới tính male,female,other"""
  gender: String

  """Khu vực"""
  locale: String

  """Hình đại diện"""
  profilePic: String
}

type Subscription {
  _empty: String
  notifyStream: Notification
  orderStream: Order
  serviceContractStream: ServiceContract
  threadStream: ThreadStreamData
}

type SubscriptionMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  name: String
  image: String
  description: String
  shortDescription: String
  price: Int
  durationOfDay: Int
  index: Int
}

type SubscriptionMinigamePageData {
  data: [SubscriptionMinigame]
  total: Int
  pagination: Pagination
}

type SubscriptionPackage {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã gói"""
  code: String

  """Tên gói"""
  name: String

  """Mô tả"""
  desc: String

  """Giá bán"""
  sellPrice: Float

  """Giá gốc"""
  basePrice: Float

  """Tính năng"""
  features: [PackageFeature]

  """Đường dẫn"""
  url: String

  """Số tháng"""
  month: Int

  """Kích hoạt"""
  active: Boolean
}

type SubscriptionPackagePageData {
  data: [SubscriptionPackage]
  total: Int
  pagination: Pagination
}

type SubscriptionRequest {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Tên yêu cầu"""
  name: String

  """Gói yêu cầu FREE,MONTH,YEAR"""
  plan: String

  """Số tiền thanh toán"""
  amount: Float

  """Thời gian hết hạn"""
  expiredAt: DateTime

  """Thanh toán"""
  payment: Payment
}

type SubscriptionRequestPageData {
  data: [SubscriptionRequest]
  total: Int
  pagination: Pagination
}

type SuggestManychatFlow {
  name: String
  content: String
}

type Supplier {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  phone: String
  name: String
  code: String
  imageUrl: String
  address: String
  note: String
  taxCode: String
  shopBranchId: ID
  shopBranch: ShopBranch
  memberId: ID
  productCount: Int
  serviceContractTypeCount: Int
  paymentConfig: SupplierPaymentConfig
}

type SupplierPageData {
  data: [Supplier]
  total: Int
  pagination: Pagination
}

type SupplierPaymentBankConfig {
  bankName: String
  ownerName: String
  bankNumber: String
  branch: String
  note: String
  enabled: Boolean
  terminalId: String
  bankBin: String
}

input SupplierPaymentBankConfigInput {
  bankName: String
  ownerName: String
  bankNumber: String
  branch: String
  note: String
  enabled: Boolean
  terminalId: String
  bankBin: String
}

type SupplierPaymentConfig {
  mbBankConfig: SupplierPaymentBankConfig
  bankTransfers: [SupplierPaymentBankConfig]
}

input SupplierPaymentConfigInput {
  mbBankConfig: SupplierPaymentBankConfigInput
  bankTransfers: [SupplierPaymentBankConfigInput]
}

type SupportConfig {
  """Thanh điều hướng"""
  menu: [Mixed]

  """Điện thoại hỗ trợ"""
  hotline: String

  """Email hỗ trợ"""
  email: String
}

input SupportConfigInput {
  """Thanh điều hướng"""
  menu: [Mixed]

  """Điện thoại hỗ trợ"""
  hotline: String

  """Email hỗ trợ"""
  email: String
}

type SupportTicket {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã yêu cầu"""
  code: String

  """Mã chủ shop"""
  memberId: ID

  """Nội dung yêu cầu"""
  name: String

  """Mô tả chi tiết"""
  desc: String

  """Danh sách hình ảnh"""
  images: [String]

  """Trạng thái xử lý opening,pending,processing,closed"""
  status: String

  """
  Chi tiết trạng thái new,reopening,considering,assigning,request_more_info,info_completed,completed,canceled
  """
  subStatus: String

  """Lịch sử"""
  logs: [Mixed]

  """Nhân sự phụ trách"""
  assignerId: ID
  member: Member
  assigner: User
}

type SupportTicketComment {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã yêu cầu"""
  ticketId: ID

  """Bình luận từ chủ shop"""
  fromMember: Boolean

  """Mã chủ shop"""
  memberId: ID

  """Mã người dùng"""
  userId: ID

  """Tên"""
  name: String

  """Nội dung"""
  message: String

  """Hình ảnh"""
  images: [String]
  member: Member
  user: User
}

input SupportTicketCommentInput {
  """Nội dung"""
  message: String!

  """Hình ảnh"""
  images: [String]
}

type SupportTicketCommentPageData {
  data: [SupportTicketComment]
  total: Int
  pagination: Pagination
}

type SupportTicketPageData {
  data: [SupportTicket]
  total: Int
  pagination: Pagination
}

type Tab {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên tab thông tin sản phẩm"""
  name: String

  """Độ ưu tiên"""
  priority: Int

  """Mã cửa hàng"""
  memberId: String

  """Thông tin cửa hàng"""
  member: Member
}

type Table {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  shopBranchId: ID
  shopBranch: ShopBranch
  memberId: ID
  code: String
  name: String
  description: String
  seatNumber: Int
  status: ETableStatus
}

type TablePageData {
  data: [Table]
  total: Int
  pagination: Pagination
}

type TabPageData {
  data: [Tab]
  total: Int
  pagination: Pagination
}

type TascoInsuranceConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type TascoInsuranceConfigPageData {
  data: [TascoInsuranceConfig]
  total: Int
  pagination: Pagination
}

type Task {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã duy nhất cho nhiệm vụ"""
  taskCode: String
  description: String

  """Tên nhiệm vụ"""
  name: String

  """Loại nhiệm vụ, dùng enum ETaskType"""
  taskType: ETaskType

  """Loại phần thưởng, dùng enum ERewardType"""
  rewardType: ERewardType

  """
  Số tiền thưởng, chỉ áp dụng nếu rewardType là SHOPPING_WALLET hoặc SHOP_AFFILIATE_WALLET
  """
  rewardAmount: Mixed

  """Nội dung mô tả phần thưởng"""
  rewardText: String

  """Tiêu chuẩn cần đạt để nhận thưởng, ví dụ số đơn hàng cần đạt"""
  criteriaForReward: Mixed

  """Chỉ định nhiệm vụ có thể thực hiện lại nhiều lần hay không"""
  isRecurring: Boolean

  """Trạng thái kích hoạt của nhiệm vụ"""
  isEnabled: Boolean

  """ID của thành viên thực hiện nhiệm vụ"""
  memberId: ID

  """ID của khuyến mãi, nếu phần thưởng là PROMOTION"""
  promotionId: ID
  promotion: Promotion

  """ID của voucher cửa hàng, nếu phần thưởng là SHOP_VOUCHER"""
  shopVoucherId: ID
  shopVoucher: ShopVoucher

  """Thêm trường này để quy định cách tính thời gian"""
  timeCalculation: ETaskTimeCalculation

  """Tiến trình hiện tại"""
  currentProgress: Mixed
  currentProgressCycle: Mixed
  lastCompletedTask: DateTime
  countRewardedTask: Int
  hasApplyForSpecialServiceContractTypes: Boolean
  applyForServiceContractTypeIds: [ID]
  applyForServiceContractTypes: [ServiceContractType]
  imageUrl: String
}

type TaskLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  rewardedAt: DateTime
  taskCode: String
  name: String
  taskType: ETaskType
  rewardType: ERewardType
  rewardAmount: Int
  rewardText: String
  taskTypeImageUrl: String
  criteriaForReward: Int
  isRecurring: Boolean
  isEnabled: Boolean
  promotionId: ID
  promotion: Promotion
  shopVoucherId: ID
  shopVoucher: ShopVoucher
  isRewarded: Boolean
  rewardImageUrls: [String]
  customerId: ID
  customer: Customer
  memberId: ID
}

type TaskLogPageData {
  data: [TaskLog]
  total: Int
  pagination: Pagination
}

type TaskPageData {
  data: [Task]
  total: Int
  pagination: Pagination
}

type TaxCodeMInvoiceInfo {
  """Mã số thuế"""
  ma_so_thue: String

  """Mã số thuế của công ty"""
  masothue_id: String

  """Tên công ty"""
  ten_cty: String

  """Địa chỉ"""
  dia_chi: String

  """Cơ quan thuế cấp tỉnh"""
  cqthuecap_tinh: String

  """Cơ quan thuế quản lý"""
  cqthue_ql: String

  """Người địa diện"""
  nguoi_dai_dien: String

  """Ngày thàn lập"""
  ngay_thanh_lap: String
  tthai: Mixed
  ten_tthai: Mixed
}

type TaxCodeSearchMInoviceSite {
  """Mã số thuế"""
  taxCode: String

  """ID của mã số thuế"""
  taxCodeId: String

  """Tên công ty"""
  companyName: String

  """Địa chỉ công ty"""
  address: String

  """Cơ quan thuế cấp tỉnh"""
  taxOfficeProvince: String

  """Cơ quan thuế quản lý"""
  taxOfficeManaged: String

  """Người đại diện pháp luật"""
  representative: String

  """Ngày thành lập"""
  establishmentDate: String

  """Mã trạng thái"""
  statusCode: String

  """Tên trạng thái"""
  statusName: String

  """Ghi chú"""
  notes: String

  """Ngày cập nhật"""
  updatedAt: DateTime

  """Mã cơ quan thuế quản lý"""
  taxOfficeManagedCode: String
}

type TemplateBanner {
  displayPage: ETemplatePage
  imageUrl: String
  linkUrl: String
  priority: Int
}

input TemplateBannerInput {
  displayPage: ETemplatePage
  imageUrl: String
  linkUrl: String
  priority: Int
}

type TemplateConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  templateType: ETemplateType
  memberId: String
  banners: [TemplateBanner]
  logo: String
  primaryColor: String
  accentColor: String
  font: String
  googleAnalyticsId: String
  email: String
  address: String
  companyAddress: String
  hotline: String
  taxCode: String
  workingTime: [String]
  facebookUrl: String
  facebookId: String
  zaloUrl: String
  googleMapUrl: String
  platformUrlConfig: PlatformUrlConfig
  header: TemplateHeaderConfig
  homePage: TemplateHomePageConfig
  metaDescription: [String]
  iconTab: String
  backgroundFooterImgUrl: String
  data: String
  features: [TemplateFeature]
  userManuals: [TemplateUserManual]
  verifyList: [TemplateVerifyList]
  logoSecond: String
  isLogin: Boolean
  section: TemplateSection
  copyright: String
  keywords: [String]
  shopReviews: [TemplateShopReview]
  contact: TemplateConfigContact
  footer: TemplateConfigFooter
  pageConfig: TemplateConfigPage
  productMenu: [TemplateConfigProductMenuItem]
  relatedTradeMark: TemplateConfigRelatedTradeMark
  seo: [String]
  seoObject: TemplateSeo
  defaultSeo: TemplateSeo
}

type TemplateConfigBanner {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID
  member: Member
  type: ETemplateConfigBannerType
  imageUrl: String
  pageDisplay: ETemplatePage
  priority: Int
  title: TemplateConfigItem
  content: TemplateConfigItem
  button: TemplateConfigItem
  isActivated: Boolean
  link: String
  templateConfigId: ID
}

type TemplateConfigBannerPageData {
  data: [TemplateConfigBanner]
  total: Int
  pagination: Pagination
}

type TemplateConfigButton {
  isActivated: Boolean
  content: String
  fontSize: ValueUnit
}

input TemplateConfigButtonInput {
  isActivated: Boolean
  content: String
  fontSize: ValueUnitInput
}

type TemplateConfigContact {
  displayConfigs: [TemplateConfigFooterContactPageDisplayItem]
}

input TemplateConfigContactInput {
  displayConfigs: [TemplateConfigFooterContactPageDisplayItemInput]
}

type TemplateConfigFooter {
  title: String
  backgroundImageUrl: String
  contact: TemplateConfigFooterContact
  copyright: String
  logo: String
  menu: [TemplateConfigFooterMenu]
  styles: TemplateConfigStyles
  socialMedia: TemplateConfigFooterSocialMedia
}

type TemplateConfigFooterContact {
  email: String
  address: String
  companyAddress: String
  hotline: String
  taxCode: String
}

input TemplateConfigFooterContactInput {
  email: String
  address: String
  companyAddress: String
  hotline: String
  taxCode: String
}

type TemplateConfigFooterContactPageDisplayItem {
  pageDisplay: [ETemplatePage]
  type: ETemplateContactType
  backgroundUrl: String
  title: String
  subTitle: String
  buttonContent: String
  footerContent: String
}

input TemplateConfigFooterContactPageDisplayItemInput {
  pageDisplay: [ETemplatePage]
  type: ETemplateContactType
  backgroundUrl: String
  title: String
  subTitle: String
  buttonContent: String
  footerContent: String
}

input TemplateConfigFooterInput {
  title: String
  backgroundImageUrl: String
  contact: TemplateConfigFooterContactInput
  copyright: String
  logo: String
  menu: [TemplateConfigFooterMenuInput]
  styles: TemplateConfigStylesInput
  socialMedia: TemplateConfigFooterSocialMediaInput
}

type TemplateConfigFooterMenu {
  heading: String
  items: [TemplateConfigFooterMenuItem]
}

input TemplateConfigFooterMenuInput {
  heading: String
  items: [TemplateConfigFooterMenuItemInput]
}

type TemplateConfigFooterMenuItem {
  title: String
  slug: String
}

input TemplateConfigFooterMenuItemInput {
  title: String
  slug: String
}

type TemplateConfigFooterSocialMedia {
  title: String
  items: [TemplateConfigFooterSocialMediaItem]
  isActivated: Boolean
}

input TemplateConfigFooterSocialMediaInput {
  title: String
  items: [TemplateConfigFooterSocialMediaItemInput]
  isActivated: Boolean
}

type TemplateConfigFooterSocialMediaItem {
  platform: ESocialMedia
  iconUrl: String
  link: String
}

input TemplateConfigFooterSocialMediaItemInput {
  platform: ESocialMedia
  iconUrl: String
  link: String
}

type TemplateConfigItem {
  value: Mixed
  isActivated: Boolean
}

input TemplateConfigItemInput {
  value: Mixed
  isActivated: Boolean
}

type TemplateConfigMenuItem {
  name: String
  page: ETemplatePage
  priority: Int
  isActivated: Boolean
  link: String
}

input TemplateConfigMenuItemInput {
  name: String
  page: ETemplatePage
  priority: Int
  isActivated: Boolean
  link: String
}

type TemplateConfigPage {
  defaultPage: ETemplatePage
}

type TemplateConfigPageData {
  data: [TemplateConfig]
  total: Int
  pagination: Pagination
}

input TemplateConfigPageInput {
  defaultPage: ETemplatePage
}

type TemplateConfigProductMenuItem {
  id: String
  title: String
  slug: String
  isActivated: Boolean
  categoryIds: [ID]
  categories: [Category]
}

input TemplateConfigProductMenuItemInput {
  title: String
  isActivated: Boolean
  categoryIds: [ID]
}

type TemplateConfigRelatedTradeMark {
  title: String
  isActivated: Boolean
  amountDisplay: Int
  imageUrls: [String]
}

input TemplateConfigRelatedTradeMarkInput {
  title: String
  isActivated: Boolean
  amountDisplay: Int
  imageUrls: [String]
}

type TemplateConfigStyles {
  fontSize: ValueUnit
  textColor: String
  backgroundColor: String
  marginTop: ValueUnit
  marginBottom: ValueUnit
  marginLeft: ValueUnit
  marginRight: ValueUnit
  paddingTop: ValueUnit
  paddingBottom: ValueUnit
  paddingLeft: ValueUnit
  paddingRight: ValueUnit
  width: ValueUnit
  minWidth: ValueUnit
  maxWidth: ValueUnit
  height: ValueUnit
  minHeight: ValueUnit
  maxHeight: ValueUnit
  borderWidth: ValueUnit
  borderStyle: String
  borderColor: String
  borderRadius: ValueUnit
}

input TemplateConfigStylesInput {
  fontSize: ValueUnitInput
  textColor: String
  backgroundColor: String
  marginTop: ValueUnitInput
  marginBottom: ValueUnitInput
  marginLeft: ValueUnitInput
  marginRight: ValueUnitInput
  paddingTop: ValueUnitInput
  paddingBottom: ValueUnitInput
  paddingLeft: ValueUnitInput
  paddingRight: ValueUnitInput
  width: ValueUnitInput
  minWidth: ValueUnitInput
  maxWidth: ValueUnitInput
  height: ValueUnitInput
  minHeight: ValueUnitInput
  maxHeight: ValueUnitInput
  borderWidth: ValueUnitInput
  borderStyle: String
  borderColor: String
  borderRadius: ValueUnitInput
}

type TemplateFeature {
  title: String
  image: String
  shortDescription: String
}

input TemplateFeatureInput {
  title: String
  image: String
  shortDescription: String
}

type TemplateHeaderConfig {
  fontSize: ValueUnit
  buttonSearch: TemplateConfigButton
  buttonSendShopAffiliateRequest: TemplateConfigButton
  menu: [TemplateConfigMenuItem]
}

input TemplateHeaderConfigInput {
  fontSize: ValueUnitInput
  buttonSearch: TemplateConfigButtonInput
  buttonSendShopAffiliateRequest: TemplateConfigButtonInput
  menu: [TemplateConfigMenuItemInput]
}

type TemplateHomePageConfig {
  """Ảnh tiêu biểu sẽ hiện ở home page"""
  typicalImages: TemplateHomePageTypicalImagesConfig

  """productCategories sẽ hiển thị ở home page"""
  productCategories: TemplateHomePageProductCategoriesConfig
  overviewProductCategories: TemplateHomePageOverviewProductCategoriesConfig
  serviceContractTypeCategories: TemplateHomePageServiceContractTypeCategoriesConfig
  overviewServiceContractTypeCategories: TemplateHomePageOverviewServiceContractTypeCategoriesConfig
  shopVoucherDisplayConfig: TemplateHomePagePageShopVoucherDisplayConfig
  mediaCentralCategories: TemplateHomePageMediaCentralCategoriesConfig
}

input TemplateHomePageConfigInput {
  """Ảnh tiêu biểu sẽ hiện ở home page"""
  typicalImages: TemplateHomePageTypicalImagesConfigInput
  mediaCentralCategories: TemplateHomePageMediaCentralCategoriesConfigInput

  """productCategories sẽ hiển thị ở home page"""
  productCategories: TemplateHomePageProductCategoriesConfigInput
  overviewProductCategories: TemplateHomePageOverviewProductCategoriesConfigInput
  serviceContractTypeCategories: TemplateHomePageServiceContractTypeCategoriesConfigInput
  overviewServiceContractTypeCategories: TemplateHomePageOverviewServiceContractTypeCategoriesConfigInput
  shopVoucherDisplayConfig: TemplateHomePagePageShopVoucherDisplayConfigInput
}

"""MediaCentralCategorie sẽ hiển thị ở home page"""
type TemplateHomePageMediaCentralCategoriesConfig {
  isDisplay: Boolean
  mediaCentralCategories: [TemplateHomePageMediaCentralCategoryConfig]
}

"""MediaCentralCategorie sẽ hiển thị ở home page"""
input TemplateHomePageMediaCentralCategoriesConfigInput {
  isDisplay: Boolean
  mediaCentralCategories: [TemplateHomePageMediaCentralCategoryConfigInput]
}

"""MediaCentralCategorie sẽ hiển thị ở home page"""
type TemplateHomePageMediaCentralCategoryConfig {
  title: String
  mediaCentralCategoryId: String
  mediaCentralCategory: MediaCentralCategory
  priority: Int
}

"""MediaCentralCategorie sẽ hiển thị ở home page"""
input TemplateHomePageMediaCentralCategoryConfigInput {
  title: String
  mediaCentralCategoryId: String
  priority: Int
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePageOverviewProductCategoriesConfig {
  isDisplay: Boolean
  categories: [TemplateHomePageOverviewProductCategoryConfig]
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePageOverviewProductCategoriesConfigInput {
  isDisplay: Boolean
  categories: [TemplateHomePageOverviewProductCategoryConfigInput]
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePageOverviewProductCategoryConfig {
  title: String
  categoryId: String
  category: Category
  priority: Int
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePageOverviewProductCategoryConfigInput {
  title: String
  categoryId: String
  priority: Int
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
type TemplateHomePageOverviewServiceContractTypeCategoriesConfig {
  isDisplay: Boolean
  categories: [TemplateHomePageOverviewServiceContractTypeCategoryConfig]
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
input TemplateHomePageOverviewServiceContractTypeCategoriesConfigInput {
  isDisplay: Boolean
  categories: [TemplateHomePageOverviewServiceContractTypeCategoryConfigInput]
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
type TemplateHomePageOverviewServiceContractTypeCategoryConfig {
  title: String
  serviceContractTypeCategoryId: String
  serviceContractTypeCategory: ServiceContractTypeCategory
  priority: Int
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
input TemplateHomePageOverviewServiceContractTypeCategoryConfigInput {
  title: String
  serviceContractTypeCategoryId: String
  priority: Int
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePagePagePromotionDisplayConfig {
  isDisplay: Boolean
  title: String
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePagePagePromotionDisplayConfigInput {
  isDisplay: Boolean
  title: String
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePagePageShopVoucherDisplayConfig {
  isDisplay: Boolean
  title: String
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePagePageShopVoucherDisplayConfigInput {
  isDisplay: Boolean
  title: String
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePageProductCategoriesConfig {
  isDisplay: Boolean
  categories: [TemplateHomePageProductCategoryConfig]
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePageProductCategoriesConfigInput {
  isDisplay: Boolean
  categories: [TemplateHomePageProductCategoryConfigInput]
}

"""productCategorie sẽ hiển thị ở home page"""
type TemplateHomePageProductCategoryConfig {
  title: String
  categoryId: String
  category: Category
  priority: Int
  displayOrientation: ETemplateHomePageOrientation
}

"""productCategorie sẽ hiển thị ở home page"""
input TemplateHomePageProductCategoryConfigInput {
  title: String
  categoryId: String
  priority: Int
  displayOrientation: ETemplateHomePageOrientation
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
type TemplateHomePageServiceContractTypeCategoriesConfig {
  isDisplay: Boolean
  categories: [TemplateHomePageServiceContractTypeCategoryConfig]
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
input TemplateHomePageServiceContractTypeCategoriesConfigInput {
  isDisplay: Boolean
  categories: [TemplateHomePageServiceContractTypeCategoryConfigInput]
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
type TemplateHomePageServiceContractTypeCategoryConfig {
  title: String
  serviceContractTypeCategoryId: String
  serviceContractTypeCategory: ServiceContractTypeCategory
  priority: Int
}

"""ServiceContractTypeCategorie sẽ hiển thị ở home page"""
input TemplateHomePageServiceContractTypeCategoryConfigInput {
  title: String
  serviceContractTypeCategoryId: String
  priority: Int
}

"""Ảnh tiêu biểu sẽ hiện ở home page"""
type TemplateHomePageTypicalImageConfig {
  imageUrl: String
  redirectUrl: String
  priority: Int
}

"""Ảnh tiêu biểu sẽ hiện ở home page"""
input TemplateHomePageTypicalImageConfigInput {
  imageUrl: String
  redirectUrl: String
  priority: Int
}

"""Những ảnh tiêu biểu sẽ hiện ở home page"""
type TemplateHomePageTypicalImagesConfig {
  isDisplay: Boolean
  title: String
  images: [TemplateHomePageTypicalImageConfig]
}

"""Những ảnh tiêu biểu sẽ hiện ở home page"""
input TemplateHomePageTypicalImagesConfigInput {
  isDisplay: Boolean
  title: String
  images: [TemplateHomePageTypicalImageConfigInput]
}

type TemplateSection {
  color: String
  backgroundColor: String
  image: String
}

input TemplateSectionInput {
  color: String
  backgroundColor: String
  image: String
}

type TemplateSeo {
  title: String
  titleTemplate: String
  defaultTitle: String
  description: String
  canonical: String
  images: [String]
  openGraph: TemplateSeoOpenGraph
  additionalMetaTags: [TemplateSeoMetaTag]
}

input TemplateSeoInput {
  title: String
  titleTemplate: String
  defaultTitle: String
  description: String
  canonical: String
  images: [String]
  openGraph: TemplateSeoOpenGraphInput
  additionalMetaTags: [TemplateSeoMetaTagInput]
}

type TemplateSeoMetaTag {
  property: String
  content: String
}

input TemplateSeoMetaTagInput {
  property: String
  content: String
}

type TemplateSeoOpenGraph {
  type: String
  locale: String
  siteName: String
}

input TemplateSeoOpenGraphInput {
  type: String
  locale: String
  siteName: String
}

type TemplateShopReview {
  customerImage: String
  customerName: String
  star: Int
  content: String
}

input TemplateShopReviewInput {
  customerImage: String
  customerName: String
  star: Int
  content: String
}

type TemplateUserManual {
  heading: String
  items: [TemplateUserManualItem]
}

input TemplateUserManualInput {
  heading: String
  items: [TemplateUserManualItemInput]
}

type TemplateUserManualItem {
  title: String
  slug: String
}

input TemplateUserManualItemInput {
  title: String
  slug: String
}

type TemplateVerifyList {
  image: String
  link: String
}

input TemplateVerifyListInput {
  image: String
  link: String
}

type Thread {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Kênh trao đổi member,customer"""
  channel: String

  """Tin nhắn gần nhất"""
  snippet: String

  """Thời điểm tin nhắn gần nhất"""
  lastMessageAt: DateTime

  """Mã tin nhắn gần nhất"""
  messageId: ID

  """Mã chủ shop"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID

  """Mã quản lý"""
  userId: ID

  """Trạng thái trao đổi new,opening,closed"""
  status: String

  """Đã xem"""
  seen: Boolean

  """Ngày xem gần nhất"""
  seenAt: DateTime

  """Danh sách mã nhãn"""
  threadLabelIds: [ID]
  member: Member
  customer: Customer
  user: User
  message: ThreadMessage
  threadLabels: [ThreadLabel]
}

type ThreadLabel {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên nhãn"""
  name: String

  """Mã chủ shop"""
  memberId: ID

  """Màu sắc"""
  color: String
}

type ThreadLabelPageData {
  data: [ThreadLabel]
  total: Int
  pagination: Pagination
}

type ThreadMessage {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cuộc trao đổi"""
  threadId: ID

  """Loại tin nhắn general"""
  type: String

  """Tin nhắn"""
  text: String

  """Dữ liệu đính kèm"""
  attachment: Mixed

  """Người gửi"""
  sender: ThreadSender

  """Đã xem"""
  seen: Boolean

  """Ngày xem"""
  seenAt: DateTime

  """Đã thu hồi"""
  isUnsend: Boolean
}

type ThreadMessagePageData {
  data: [ThreadMessage]
  total: Int
  pagination: Pagination
}

type ThreadNote {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã thread"""
  threadId: ID

  """Nội dung"""
  text: String

  """Đính kèm"""
  attachment: String
}

type ThreadNotePageData {
  data: [ThreadNote]
  total: Int
  pagination: Pagination
}

type ThreadPageData {
  data: [Thread]
  total: Int
  pagination: Pagination
}

type ThreadSender {
  """Loại người dùng"""
  role: String

  """Mã quản lý"""
  userId: ID

  """Mã cửa hàng"""
  memberId: ID

  """Mã khách hàng"""
  customerId: ID
  user: User
  member: Shop
  customer: Customer
}

type ThreadStreamData {
  thread: Thread
  message: ThreadMessage
}

type TierConfig {
  level: Int
  name: String!
}

input TierConfigInput {
  level: Int!
  name: String!
}

type TokenMerchantMinigame {
  accessToken: String
}

type TokenZaloOaSendMessageSettingMinigame {
  accessToken: String
}

type TopChildShopAffiliateRevenueDetail {
  totalRevenue: Mixed
  orderCount: Int
  shopAffiliateSellerId: ID
  shopAffiliateSeller: ShopAffiliate
}

type Topic {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Đánh dấu ẩn"""
  isHidden: Boolean

  """Tên chủ đề"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

type TopicPageData {
  data: [Topic]
  total: Int
  pagination: Pagination
}

type TopLeaderBoardBonusLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  targetCustomerId: ID
  targetShopAffiliateId: ID
  typeLeaderBoard: ETypeLeaderBoardConfig
  top: Int
  reward: String
  balanceAwarded: Mixed
  isRewarded: Boolean
  amountRequireGreater: Mixed
  rewardType: EAchievementRewardType
  rewardImageUrls: [String]
  value: Mixed
  recentResetTime: DateTime
  nextResetTime: DateTime
  numberTopDisplay: Int
  applyTime: DateTime
  duration: EDurationLeaderBoardConfig
  amountDuration: Int
  timePointOfDuration: Int
  timePointOfHour: Int
  timePointOfMinute: Int
  topLeaderBoardBonusPolicyId: ID
  topLeaderBoardBonusPolicyScheduleLogId: ID
  targetCustomer: Customer
  targetShopAffiliate: ShopAffiliate
}

type TopLeaderBoardBonusLogPageData {
  data: [TopLeaderBoardBonusLog]
  total: Int
  pagination: Pagination
}

type TopLeaderBoardBonusMilestone {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  top: Int
  amountRequireGreater: Int
  reward: String
  rewardType: EAchievementRewardType
  balanceAwarded: Int
  topLeaderBoardBonusPolicyId: ID
  memberId: ID
}

type TopLeaderBoardBonusMilestonePageData {
  data: [TopLeaderBoardBonusMilestone]
  total: Int
  pagination: Pagination
}

type TopLeaderBoardBonusPolicy {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean
  typeLeaderBoard: ETypeLeaderBoardConfig
  hoursUntilReward: Int
  memberId: ID
  topLeaderBoardBonusMilestones: [TopLeaderBoardBonusMilestone]
}

type TopLeaderBoardBonusPolicyPageData {
  data: [TopLeaderBoardBonusPolicy]
  total: Int
  pagination: Pagination
}

type TopLeaderBoardBonusPolicyScheduleLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: ID
  recentResetTime: DateTime
  nextResetTime: DateTime
  numberTopDisplay: Int
  applyTime: DateTime
  duration: EDurationLeaderBoardConfig
  amountDuration: Int
  timePointOfDuration: Int
  timePointOfHour: Int
  timePointOfMinute: Int
  typeLeaderBoard: ETypeLeaderBoardConfig
  topLeaderBoardBonusPolicyId: ID
  status: ETopLeaderBoardBonusPolicyScheduleLogStatus
}

type TopLeaderBoardBonusPolicyScheduleLogPageData {
  data: [TopLeaderBoardBonusPolicyScheduleLog]
  total: Int
  pagination: Pagination
}

type ToppingOption {
  """Tên option"""
  name: String

  """Mã option"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
}

input ToppingOptionInput {
  """Tên option"""
  name: String

  """Mã option"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
}

type TopProduct {
  name: String
  value: Float
  unit: String
}

input TopSellingByShopAffiliateInput {
  shopAffiliateFilter: Mixed
  startDate: DateTime
  endDate: DateTime
  limit: Int
  page: Int
}

type TotalRewardPointByShop {
  shop: Shop
  totalPoint: Int
}

input TransferOrderToVNPostInput {
  """Tên người gửi *"""
  senderFullname: String!

  """Số điện thoại người gửi"""
  senderTel: String!

  """Địa chỉ gửi"""
  senderAddress: String!

  """Mã phường người gửi"""
  senderWardId: String!

  """Mã tỉnh người gửi"""
  senderProvinceId: String!

  """Mã quận người gửi"""
  senderDistrictId: String!

  """Tên người nhận"""
  receiverFullname: String!

  """Địa chỉ nhận"""
  receiverAddress: String!

  """Phone người nhận"""
  receiverTel: String!

  """Mã tỉnh người nhận"""
  receiverProvinceId: String!

  """Mã quận người nhận"""
  receiverDistrictId: String!

  """Mã phường người nhận"""
  receiverWardId: String!

  """
  Loại địa chỉ người nhận '1=Nhà riêng | 2=Cơ quan | null=Không có thông tin'
  """
  receiverAddressType: Int

  """Mã hóa đơn liên quan"""
  orderCode: String

  """Nội dung hàng"""
  packageContent: String

  """Trọng lượng (gr)"""
  weightEvaluation: Int!

  """Chiều rộng (cm)"""
  widthEvaluation: Int

  """Chiều dài (cm)"""
  lengthEvaluation: Int

  """Chiều cao (cm)"""
  heightEvaluation: Int

  """Số tiền thu hộ"""
  codAmountEvaluation: Float

  """Cho xem hàng không ?"""
  isPackageViewable: Boolean!

  """Giá trị đơn hàng tạm tính"""
  orderAmountEvaluation: Float

  """Cộng thêm cước vào phí thu hộ"""
  isReceiverPayFreight: Boolean

  """Yêu cầu khác"""
  customerNote: String

  """Báo phát"""
  useBaoPhat: Boolean

  """Hóa đơn"""
  useHoaDon: Boolean

  """Dịch vụ"""
  serviceName: String
}

type Trigger {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã cửa hàng"""
  memberId: ID

  """Mã trigger"""
  code: String

  """Tên trigger"""
  name: String

  """Kích hoạt"""
  active: Boolean

  """Sự kiện kích hoạt"""
  event: String

  """Hành động"""
  actions: [Mixed]

  """Nhóm trigger"""
  triggerGroupId: ID

  """Nhóm trigger"""
  triggerGroup: TriggerGroup
}

type TriggerGroup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã chủ shop"""
  memberId: ID

  """Tên nhóm trigger"""
  name: String

  """Mô tả"""
  description: String

  """Danh sách trigger"""
  triggerIds: [ID]
}

type TriggerGroupPageData {
  data: [TriggerGroup]
  total: Int
  pagination: Pagination
}

type TriggerPageData {
  data: [Trigger]
  total: Int
  pagination: Pagination
}

type TypeInvoiceMInvoice {
  """ID của ký hiệu hóa đơn (GUID) """
  id: String

  """Giá trị ký hiệu (ví dụ 1C25TYY) """
  value: String

  """ID quản lý ký hiệu (GUID) """
  quanlykyhieu68_id: String

  """Ký hiệu hóa đơn (khhdon) (Ví dụ 1C25TYY) """
  khhdon: String

  """Loại hóa đơn (EMInvoiceInvoiceForm) """
  invoiceForm: EMInvoiceInvoiceForm

  """Năm của ký hiệu (invoiceYear), ví dụ 25 """
  invoiceYear: String

  """Tên loại hóa đơn (invoiceTypeName) """
  invoiceTypeName: String
}

type UISettingBannerZaloMiniAppConfig {
  imageUrl: String
  priority: Int
}

input UISettingBannerZaloMiniAppConfigInput {
  imageUrl: String
  priority: Int
}

type UISettingZaloMiniAppConfig {
  logoUrl: String
  primaryColor: String
  secondaryColor: String
  banners: [UISettingBannerZaloMiniAppConfig]
}

input UISettingZaloMiniAppConfigInput {
  logoUrl: String
  primaryColor: String
  secondaryColor: String
  banners: [UISettingBannerZaloMiniAppConfigInput]
}

type Unit {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  code: String
  applyType: EUnitApplyType
  name: String
  memberId: String
  isActivated: Boolean
}

type UnitPageData {
  data: [Unit]
  total: Int
  pagination: Pagination
}

input UpdateAccountingSystemSyncLogInput {
  name: String
}

input UpdateAccumulatedDepositRewardLogInput {
  isRewarded: Boolean
  rewardImageUrls: [String]
}

input UpdateAchievementRewardLogInput {
  isRewarded: Boolean
  rewardImageUrls: [String]
}

input UpdateActivityInput {
  username: String
  message: String
}

input UpdateAddressBookInput {
  """Họ tên người đại diện liên lạc ở địa chỉ này"""
  fullName: String

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  address: PlaceInput

  """Tùy chọn mặc định"""
  isDefault: Boolean

  """Số điện thoại"""
  phone: String

  """Mã quốc gia (VN,...)"""
  regionCode: String
}

input UpdateAddressDeliveryImportingLogInput {
  name: String
}

input UpdateAddressDeliveryInput {
  """Tên giao nhận"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Hiệu lực"""
  activated: Boolean
}

input UpdateAddressStorehouseImportingLogInput {
  name: String
}

input UpdateAddressStorehouseInput {
  """Tên kho"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ kho"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """Tỉnh/thành"""
  province: String

  """Quận/huyện"""
  district: String

  """Phường/xã"""
  ward: String

  """Cho phép giao"""
  allowPickup: Boolean

  """vĩ độ"""
  latitude: Float

  """kinh độ"""
  longitude: Float

  """Hiệu lực"""
  activated: Boolean
}

input UpdateAdminNotificationInput {
  """Tiêu đề"""
  title: String

  """Tin nhắn"""
  body: String

  """Hình ảnh"""
  image: String

  """Hành động khi click"""
  action: ActionInput
}

input UpdateAffiliateConfigInput {
  """Thu phí hoặc không thu phí"""
  shouldCollectFee: Boolean
  name: String

  """Điều khoản"""
  terms: String
  introduction: String
  fixedConfig: FixedConfigUpdateInput

  """Phí"""
  fee: Float

  """Thời hạn hoạt động của đối tác (ngày)"""
  durationOfDay: Int

  """Cho phép tự động duyệt đối tác"""
  allowAutomaticApprovedShopAffiliateRequest: Boolean

  """ Bắt buộc nhập mã giới thiệu khi yêu cầu cộng tác"""
  requiredReferralCodeShopAffiliateRequest: Boolean

  """Cho phép hiển thị thông tin người giới thiệu"""
  allowDisplayReferralInformation: Boolean

  """Thanh toán phí đối tác qua MbBank"""
  shouldPayByMbBank: Boolean

  """Số tài khoản MbBank"""
  mbBankAccountNumber: String

  """Tên tài khoản MbBank"""
  mbBankAccountName: String
  wordsDisplayed: ShopAffiliateConfigWordsDisplayedInput
  policiesAllowed: ShopAffiliateConfigPoliciesAllowedInput
  affiliateRequestConfig: AffiliateRequestConfigInput
  shopAffiliateWalletConfig: ShopAffiliateConfigShopAffiliateWalletConfigInput
  affiliateLevelConfigs: [AffiliateLevelItemConfigInput]
}

input UpdateAffiliateInput {
  isActive: Boolean
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  status: String
}

input UpdateAffiliateLevelDiscountPolicyInput {
  name: String
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime

  """Có được nhận thưởng chênh lệch chiết khấu cấp bậc không?"""
  isEligibleForLevelDiscountCommission: Boolean

  """Cấp bậc tối đa được nhận thưởng chênh lệch chiết khấu cấp bậc"""
  maxLevelEligibleForLevelDiscountCommission: Int

  """số đơn vị làm tròn giá trị sau khi chiết khấu."""
  roundingAdjustmentUnit: Int
  productWithinAffiliateLevelDiscountPolicies: [ProductWithinAffiliateLevelDiscountPolicyInput]

  """Doanh thu ca nhân tối thiểu để có thể đạt được thưởng chênh lệch"""
  minRevenueEligibleForLevelDiscountCommission: Int
}

input UpdateAffiliateLevelDiscountPolicyLogInput {
  name: String
}

input UpdateAgencyConfigInput {
  name: String
  SMTPConfig: AgencyConfigSMTPInput
  authenticationCustomerConfig: AgencyConfigAuthenticationCustomerInput
  domainConfig: AgencyConfigDomainInput
  manychatConfig: AgencyConfigManychatInput
  memberConfig: AgencyConfigMemberInput
  minigameConfig: AgencyConfigMinigameInput
  paymentConfig: AgencyConfigPaymentInput
}

input UpdateAgencyContractInput {
  agencyId: ID
  amountDaysShopUseFreeTier: Mixed
  monthlyMaintenanceFee: Mixed
  packageSubscriptionDiscountPercentage: Mixed
  isActivated: Boolean
}

input UpdateAgencyInput {
  isActivated: Boolean
  name: String
  phone: String
  email: String
}

input UpdateAgencyManageMemberInput {
  agencyId: ID
  memberId: ID
}

input UpdateAgencyMemberBillInput {
  status: EAgencyMemberBillStatus
  paymentStatus: EAgencyMemberBillPaymentStatus
}

input UpdateAgencyUserInput {
  email: String
  name: String
  phone: String
  username: String
  password: String
}

input UpdateApiTrackingInput {
  name: String
}

input UpdateApplicationMemberInput {
  """Tên api key"""
  name: String

  """Api key"""
  apiKey: String

  """Shop ID"""
  memberId: String

  """Số lần gọi api key"""
  count: Int

  """Kích hoạt"""
  isActivated: Boolean

  """URL webhook"""
  url: String
}

input UpdateAreaInput {
  """Tên khu vực"""
  name: String

  """Slug khu vực"""
  slug: String

  """Độ ưu tiên"""
  priority: Int

  """Hình ảnh khu vực"""
  image: String
}

input UpdateAuditLogInput {
  name: String
}

input UpdateBannerInput {
  """Hình ảnh"""
  image: String

  """Tiêu đề"""
  title: String

  """Mô tả tiêu đề"""
  subtitle: String

  """Loại hành động WEBSITE,PRODUCT,VOUCHER,SHOP,NONE"""
  actionType: String

  """Đường dẫn website"""
  link: String

  """Mã sản phẩm"""
  productId: ID

  """Mã voucher"""
  voucherId: ID

  """Hiển thị công khai"""
  isPublic: Boolean

  """Ưu tiên"""
  priority: Int

  """Mã cửa hàng """
  memberId: ID

  """Vi tri banner"""
  position: String
}

input UpdateBranchInput {
  name: String
}

input UpdateCarrierWalletInput {
  name: String
}

input UpdateCarrierWalletTransactionInput {
  name: String
}

input UpdateCategoryInput {
  """Tên danh mục"""
  name: String

  """Mã danh mục"""
  code: String

  """Mã sản phẩm"""
  productIds: [ID]

  """Độ ưu tiên"""
  priority: Int

  """Kích hoạt"""
  hidden: Boolean
  imageUrl: String
  display: CategoryDisplayInput
}

input UpdateCollaboratorCampaignInput {
  """Mã chiến dịch"""
  code: String

  """Tên chi ến dịch"""
  name: String

  """Tiêu đề"""
  title: String

  """Nội dung"""
  content: String

  """Hash Tags"""
  hashtags: [String]

  """Hình ảnh"""
  image: String

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Danh sách chủ shop id được áp dụng"""
  memberIds: [ID]

  """Chi nhánh áp dụng"""
  branchId: ID

  """Sản phẩm áp dụng chiến dịch"""
  productId: ID

  """Trạng thái đăng"""
  isPublish: Boolean

  """Điểm ghi nhận"""
  point: Float
}

input UpdateCollaboratorInput {
  """mã cộng tác viên"""
  code: String

  """Tên cộng tác viên"""
  name: String

  """Số điện thoại"""
  phone: String

  """Trạng thái PENDING,ACTIVE,BLOCKED"""
  status: String
}

input UpdateConnectGoShipShopConfigInput {
  isAllowCustomerChoose: Boolean
  fixedMarkupShipmentFee: Float
  percentageMarkupShipmentFee: Float
}

input UpdateContractSignatureRegistrationRequestInput {
  attachedFiles: [SignatureRegistrationRequestAttachedFileInput]
}

input UpdateCounterInput {
  name: String
  value: Int
}

input UpdateCustomCardInput {
  isActivated: Boolean
  customCardConfig: CustomCardConfigInput
}

input UpdateCustomerAddressInput {
  """Mã tỉnh/thành"""
  provinceId: String

  """Mã quận/huyện"""
  districtId: String

  """Mã phường/xã"""
  wardId: String

  """Địa chỉ"""
  address: String

  """Địa chỉ mặc định"""
  isDefault: Boolean

  """Toạ độ vị trí"""
  location: Mixed
}

input UpdateCustomerCompletedTaskInput {
  name: String
}

input UpdateCustomerGroupInput {
  """Tên nhóm"""
  name: String

  """Bộ lọc"""
  filter: Mixed
}

input UpdateCustomerInput {
  name: String
  address: String

  """Email"""
  email: String
  password: String
  provinceId: String
  districtId: String
  wardId: String
  avatar: String
  gender: String
  latitude: Float
  longitude: Float

  """Full địa chỉ"""
  fullAddress: String

  """Ghi chú địa chỉ"""
  addressNote: String

  """Ngày sinh"""
  birthday: DateTime
  citizenId: String
  hasPassword: Boolean
  bankName: String
  bankAccountName: String
  bankAccountNumber: String
  taxCode: String
}

input UpdateDebtAllocationInput {
  name: String
}

input UpdateDebtPaymentRequestInput {
  paymentStatus: EPaymentStatus
}

input UpdateDirectSubordinatesProductSalesBonusPolicyInput {
  name: String
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [DirectSubordinatesProductSalesBonusPolicyRuleInput]
}

input UpdateDisburseInput {
  """Đợt giải ngân"""
  name: String

  """Ghi chú"""
  note: String
}

input UpdateDisbursementRequestInput {
  status: String
  taxCode: String
  amountRequestedDisbursement: Mixed
  bankName: String
  bankAccountNumber: String
  bankAccountName: String
  refusePaymentNote: String
  paymentSuccessNote: String
  paymentFailedNote: String
}

input UpdateDiscountPolicyInput {
  name: String
}

input UpdateDiseaseInput {
  """Tên loại bệnh"""
  name: String!

  """Loại cây liên quan"""
  plantIds: [String]

  """Hình ảnh loại bệnh"""
  image: String
}

input UpdateDomainMappingInput {
  name: String
}

input UpdateDraftOrderInput {
  """Sản phẩm"""
  items: [UpdateOrderItemInput]!

  """Phương thức nhận hàng"""
  pickupMethod: String

  """Chi nhánh"""
  shopBranchId: ID

  """Thời gian nhận hàng"""
  pickupTime: DateTime

  """Khách hàng nhận """
  receiverId: String

  """Tên khách hàng nhận """
  receiverName: String

  """Điện thoại khách hàng nhận """
  receiverPhone: String

  """Địa chỉ khách hàng nhận """
  receiverAddress: String

  """Tỉnh / thành khách hàng nhận """
  receiverProvince: String

  """Quận / huyện khách hàng nhận """
  receiverDistrict: String

  """Phường / xã khách hàng nhận """
  receiverWard: String

  """Mã Tỉnh / thành khách hàng nhận """
  receiverProvinceId: String

  """Mã Quận / huyện khách hàng nhận """
  receiverDistrictId: String

  """Mã Phường / xã khách hàng nhận """
  receiverWardId: String

  """Địa chỉ đầy đủ của khách hàng nhận """
  receiverFullAddress: String

  """Ghi chú địa chỉ của khách hàng nhận"""
  receiverAddressNote: String

  """Toạ độ"""
  latitude: Float
  longitude: Float

  """Phương thức thanh toán"""
  paymentMethod: String
  shipfee: Float

  """Đơn vị giao hàng mà shop chọn """
  shopShipMethod: EShipMethod

  """Dịch vụ mà shop chọn """
  shopShipServiceId: String

  """Yêu cầu kèm theo dịch vụ mà shop chọn"""
  shopShipRequestIds: [String]

  """Ghi chú"""
  note: String

  """Mã giảm giá"""
  promotionCode: String

  """Sử dụng điểm thưởng"""
  useRewardPoint: Boolean

  """Thứ tự nhóm quà tặng"""
  offerGroupIndex: Int

  """Mã giới thiệu """
  referralCode: String

  """Mã bàn"""
  tableCode: String
  unixTime: String
  affiliateCode: String
  promotionId: String
  promotionApplies: [PromotionApplyInput]
  haveIssueInvoice: Boolean
  successDeepLink: String
  failDeepLink: String
  successRedirectUrl: String
  failRedirectUrl: String
  platform: EPlatform
  tableId: ID
}

input UpdateDriverInput {
  """Tên tài xế"""
  name: String

  """Hình đại diện"""
  avatar: String

  """Biển số xe"""
  licensePlates: String

  """Kích hoạt"""
  isActive: Boolean
}

input UpdateEmailInput {
  """Tên mẫu email"""
  name: String

  """Tiêu đề email"""
  subject: String

  """Nội dung text"""
  text: String

  """Nội dung html"""
  html: String!

  """Dữ liệu context"""
  context: [Mixed]

  """Data Design"""
  design: Mixed
}

input UpdateExpertGroupInput {
  """Tên nhóm chuyên gia"""
  name: String!

  """Người đại diện"""
  representative: String!

  """Số điện thoại"""
  phone: String!

  """Mã quốc gia (VN,...)"""
  regionCode: String

  """Địa chỉ"""
  address: PlaceInput!

  """Giấy phép kinh doanh (nhiều ảnh)"""
  businessLicense: [String]!
}

input UpdateExpertInput {
  """Sô điện thoại"""
  phone: String

  """Mã quốc gia (VN,...)"""
  regionCode: String

  """Tên chuyên gia"""
  name: String

  """email"""
  email: String

  """ID nhóm chuyên gia"""
  expertGroupId: String

  """Anh đại diện"""
  avatar: String

  """Địa chỉ"""
  address: PlaceInput

  """chuyên môn"""
  specializes: String

  """Loại cây chuyên môn"""
  specializesInPlantIds: [String]

  """Loại bệnh chuyên môn"""
  specializesInDiseaseIds: [String]
}

input UpdateExpertSelfInput {
  """Họ tên"""
  name: String!

  """Email"""
  email: String

  """Avatar"""
  avatar: String

  """Địa chỉ"""
  address: PlaceInput

  """Chuyên môn"""
  specializes: String

  """Loại cây chuyên môn"""
  specializesInPlantIds: [String]

  """Loại bệnh chuyên môn"""
  specializesInDiseaseIds: [String]
}

input UpdateGiftInput {
  id: ID
  code: String
  name: String!
  desc: String
  image: String
  payPresent: String
  payPoint: Float
  eVoucherId: ID
  qty: Int
  type: String
}

input UpdateGlobalCustomerInput {
  """Tên khách hàng"""
  name: String

  """Email"""
  email: String

  """Ảnh đại diện"""
  avatar: String

  """Giới tính male,female,other"""
  gender: String

  """Ngày sinh"""
  birthday: DateTime

  """Full địa chỉ"""
  fullAddress: String
  latitude: Float
  longitude: Float

  """danh sách customerid"""
  customerIds: [String]

  """Loại người dùng INDIVIDUAL,COMPANY"""
  type: String

  """Tên công ty"""
  companyName: String

  """MST công ty"""
  companyTaxNumber: String

  """Hotline công ty"""
  companyHotline: String

  """Mã quốc gia companyHotLine (VN...)"""
  companyHotLineRegionCode: String

  """Địa chỉ công ty"""
  companyAddress: String
  citizenId: String
  address: String
  password: String
}

input UpdateGlobalProductCategoryInput {
  """Tên danh mục dịch vụ sản phẩm"""
  name: String

  """Slug"""
  slug: String
  icon: String
  image: String

  """Độ ưu tiên dịch vụ sản phẩm"""
  priority: Int

  """Id danh mục dịch vụ cha"""
  parentId: String

  """Trạng thái đã ẩn"""
  isHidden: Boolean
}

input UpdateGoShipSettingInput {
  name: String
}

input UpdateIndividualProductSalesBonusPolicyInput {
  name: String
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [IndividualProductSalesBonusPolicyRuleInput]
}

input UpdateIndividualServiceContractTypeSalesBonusPolicyInput {
  name: String
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [IndividualServiceContractTypeSalesBonusPolicyRuleInput]
}

input UpdateInventoryVoucherInput {
  """Mã chi nhánh"""
  branchId: String

  """Id đơn hàng"""
  orderId: String

  """Ngày hạch toán"""
  accountingDate: DateTime

  """Ngày chứng từ"""
  voucherDate: DateTime

  """Mã phiếu chứng từ """
  voucherCode: String

  """Lý do IMPORT,RETURN,ONLINE,RETAIL,WHOLESALE,DAMAGED,OTHER,AUDIT"""
  reason: String

  """Diễn giải"""
  explain: Mixed

  """Link hình ảnh"""
  images: [String]
}

input UpdateInvoiceConfigInput {
  autoIssueInvoiceConfig: AutoIssueInvoiceConfigInput
  invoiceFieldConfig: InvoiceFieldConfigInput
  isAutoIssuePerDay: Boolean
  dateFieldAutoIssuePerDay: EDateFieldAutoIssuePerDay
  fixedIssueTimePerDay: String
  showInvoiceRequestQR: Boolean
  qrExpiryHours: Int
}

input UpdateInvoiceElectronicContractInput {
  paymentStatus: EInvoiceContractPaymentStatus
}

input UpdateInvoiceMInvoiceInput {
  """True nếu tự động ký & gửi cho CQT"""
  isAutoSign: Boolean = false

  """
  Các trường ghi đè payload gốc:
  - inv_invoiceSeries: Ký hiệu hóa đơn
  - so_benh_an: Mã nội bộ order/hóa đơn
  - inv_invoiceIssuedDate: Ngày phát hành (YYYY-MM-DD)
  - inv_buyerDisplayName: Tên người mua
  - inv_buyerAddressLine: Địa chỉ người mua
  - inv_buyerEmail: Email người mua
  - inv_buyerTaxCode: Mã số thuế người mua
  - inv_paymentMethodName: Hình thức thanh toán ("TM", "CK",...)
  - inv_discountAmount: Tổng tiền chiết khấu
  - inv_buyerBankAccount: Số tài khoản người mua
  - inv_buyerBankName: Ngân hàng người mua
  - inv_buyerLegalName: Tên doanh nghiệp người mua
  - inv_TotalAmountWithoutVat: Tổng chưa thuế
  - inv_vatAmount: Tổng thuế GTGT
  - inv_TotalAmount: Tổng đã thuế
  - buyerIdentityCard: Căn cước công dân
  - dchicuahang: Địa chỉ chi nhánh bán hàng
  - amount_to_word: Số tiền bằng chữ
  - details: Mảng chi tiết hóa đơn
  """
  overrides: InvoiceOverrideMInvoiceInput
}

input UpdateInvoiceRequestInput {
  invoiceInformationRequest: InvoiceInformationRequestInput
  memberId: ID
  customerId: ID
  orderId: ID
  orderCode: String
  serviceContractId: ID
  serviceContractCode: String
  hadIssueInvoice: Boolean
  orderInvoiceId: ID

  """Ký hiệu hóa đơn"""
  sourceSerialNo: String

  """Số hóa đơn """
  sourceNumberNo: Mixed

  """Đơn vị HDDT"""
  sourceInvoiceType: ESourceInvoiceType
}

input UpdateLuckyWheelInput {
  """Mã vòng quay"""
  code: String

  """Tiêu đề vòng quay"""
  title: String

  """màu nền vòng quay"""
  backgroundColor: String

  """hình nền vòng quay"""
  backgroundImage: String

  """màu nút"""
  buttonColor: String

  """ảnh banner"""
  bannerImage: String

  """ảnh footer"""
  footerImage: String

  """ảnh vòng quay"""
  wheelImage: String

  """ảnh pin"""
  pinImage: String

  """tiêu đề nút quay"""
  btnTitle: String

  """ngày bắt đầu"""
  startDate: DateTime

  """ngày kết thúc"""
  endDate: DateTime

  """tỉ lệ thắng"""
  successRatio: Int

  """Điểm chơi game được yêu cầu"""
  gamePointRequired: Int

  """danh sách sản phẩm quà"""
  gifts: [GiftInput]

  """Kích hoạt"""
  isActive: Boolean

  """Cấu hình thiết kế vòng quay"""
  designConfig: Mixed

  """Số lượng phát hành"""
  issueNumber: Int

  """Phát hành mỗi ngày"""
  issueByDate: Boolean

  """Số lượng sử dụng / mỗi khách"""
  useLimit: Int

  """Số lượng sử dụng theo ngày"""
  useLimitByDate: Boolean
}

input UpdateManychatCustomFieldSettingInput {
  manychatCustomFieldId: Mixed
  customerDataKey: ECustomerDataKey
}

input UpdateManychatSendFlowSettingInput {
  name: String
  triggerType: EManychatSendFlowTriggerType
  sendType: EManychatSendFlowType
  manychatFlowNs: String
  isActivated: Boolean
}

input UpdateManychatSendNotificationSettingInput {
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  title: String
  content: String
  imageUrl: String
  isActivated: Boolean
}

input UpdateManychatSettingInput {
  manychatApiKey: String
  isActivated: Boolean
}

input UpdateMediaCentralCategoryInput {
  name: String
  mediaSource: EMediaSource
  priority: Int
  isActivated: Boolean
}

input UpdateMediaCentralInput {
  name: String
}

input UpdateMediaCentralItemInput {
  mediaCentralCategoryIds: [ID]
  thumbnails: [MediaCentralThumbnailInput]
  name: String
  isActivated: Boolean
  priority: Int
  description: String
}

input UpdateMemberImportingLogInput {
  name: String
}

input UpdateMemberInput {
  domain: String
  name: String
  avatar: String
  phone: String
  shopName: String
  shopLogo: String

  """Hình cover cửa hàng"""
  shopCover: String
  address: String
  provinceId: String
  districtId: String
  wardId: String
  identityCardNumber: String
  gender: String
  birthday: DateTime
  parentIds: [ID]
  activated: Boolean

  """Loại chủ shop"""
  type: String
  branchId: ID
  positionId: ID
  allowSale: Boolean

  """Phân loại cửa hàng"""
  categoryId: ID

  """Loai cua hang """
  shopType: EShopType

  """Id cua hang cha"""
  parentMemberId: ID

  """Id khach hang"""
  customerId: ID

  """Ma so thue"""
  taxCode: String
  featureAllows: [EShopFeature]
}

input UpdateMerchantMinigameInput {
  username: String
  email: String
  phone: String
  name: String
  representativeName: String
  provinceId: String
  districtId: String
  wardId: String
  address: String
}

input UpdateMicConfigInput {
  name: String
}

input UpdateMicInsuranceConfigInput {
  name: String
}

input UpdateMinigamePopupInput {
  memberId: ID
  isActivated: Boolean
  minigameId: String
  imageUrl: String
  content: String
}

input UpdateMinigameRewardLogInput {
  name: String
}

input UpdateMinigameSettingInput {
  isActivated: Boolean
  apiKey: String
  minigameSuggestConfig: MinigameSuggestConfigInput
}

input UpdateMinigameVoucherGroupMappingInput {
  isActivated: Boolean
  minigameVoucherGroupId: String
  targetShopVoucherId: ID
  targetPromotionId: ID
}

input UpdateMInvoiceAdminConfigInput {
  name: String
  invoicePackages: [MInvoiceInvoicePackageInput]
  signaturePackages: [MInvoiceSignaturePackageInput]
  defaultInvoicePackagesNewAccount: [MInvoiceInvoicePackageInput]
}

input UpdateMInvoiceConfigInput {
  """Series hóa đơn măc định"""
  defaultInvoiceSeries: String

  """Series hóa đơn mặc định của EDC"""
  defaultEDCInvoiceSeries: String

  """Cờ tự động xuất hóa đơn khi thanh toán thành công"""
  isAutoIssueInvoice: Boolean

  """Cờ tự động ký hóa đơn sau khi tạo chờ ký"""
  isAutoSignInvoice: Boolean

  """Sự kiện kích hoạt xuất hóa đơn cho đơn hàng"""
  triggerIssueInvoiceForOrderType: ETriggerTypeIssueInvoiceForOrder

  """Sự kiện kích hoạt xuất hóa đơn cho hợp đồng"""
  triggerIssueInvoiceForServiceContractType: ETriggerTypeIssueInvoiceForServiceContract
}

input UpdateMInvoiceTokenSignatureInput {
  defaultSign: Boolean
  used: Boolean
}

input UpdateNotificationSettingInput {
  memberId: ID
  title: String
  content: String
  imageUrl: String
  redirectUrl: String
  isActivated: Boolean
  sendingTime: DateTime
  receiverType: ENotificationReceiverType
  shopPostId: ID
  specificCustomerIds: [ID]
  specificShopAffiliateIds: [ID]
}

input UpdateOrderItemInput {
  id: ID
  productId: ID
  qty: Int
  note: String
  basePrice: Float
  toppings: [OrderItemToppingInput]
  productAttributeElements: [OrderItemProductAttributeElementInput]
  pricePolicyId: ID
  productImageUrl: String
}

input UpdateOrderItemProductAttributeElementInput {
  """Id phần tử thuộc tính"""
  productAttributeElementId: ID!
  price: String
}

input UpdateOrderSplitConfigInput {
  isAutoSplitEnabled: Boolean
  isShippingFeeAutoCalculatedForCustomer: Boolean
  fallbackShopBranchId: ID
}

input UpdatePackageSubscriptionInput {
  name: String
  imageUrl: String
  description: String
  newPrice: Int
  renewalPrice: Int
  durationAmount: Int
  durationUnit: EDurationUnitPackageSubscription
}

input UpdatePaymentLogCreateInvoiceInput {
  status: EPaymentLogMinigameStatus
  paymentStatus: EPaymentStatusMinigame
  paymentMethod: EPaymentLogMinigamePaymentMethod
}

input UpdatePlantInput {
  """Tên loại cây"""
  name: String!

  """Hình ảnh loại cây"""
  image: String
}

input UpdatePopupInput {
  """Tên gợi nhớ"""
  name: String

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Hình ảnh"""
  image: String

  """Hình ảnh dành cho mobile"""
  imageForMobile: String

  """Hình ảnh dành cho webapp"""
  imageForWebApp: String

  """Hình ảnh dành cho zaloMiniApp"""
  imageZaloMiniApp: String

  """Số lần hiển thị"""
  displayCount: Int

  """Đường dẫn"""
  url: String
  isActivated: Boolean
  targetType: ERole
}

input UpdatePositionInput {
  name: String
}

input UpdatePostInput {
  """Tiêu đề"""
  title: String

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Chủ đề"""
  topicId: String

  """Trạng thái duyệt PENDING,DRAFT"""
  approveStatus: String

  """Ngày cập nhật duyệt"""
  approveUpdatedAt: DateTime

  """Kích hoạt hiển thị"""
  active: Boolean

  """date of post time"""
  postedAt: DateTime

  """source url of post"""
  source: String

  """Mã khu vực"""
  areaId: String
}

input UpdatePostTagInput {
  """Tên tag"""
  name: String

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

input UpdatePreBookingInput {
  customerId: ID
  preBookingTypeId: ID
  serviceContractTypeId: ID
  startAt: DateTime
  competedAt: DateTime
  bookerNote: String
  shopBranchId: ID
  staffSpecialistId: ID
  status: EPreBookingStatus
  customFieldsData: [CustomFieldDataInput]
}

input UpdatePreBookingTypeInput {
  name: String
  description: String
  isActivated: Boolean
}

input UpdatePricePolicyInput {
  """Tên bảng giá"""
  name: String

  """Loại điều chỉnh INC,DEC"""
  adjustType: String

  """Đơn vị điều chỉnh PERCENT,AMOUNT"""
  adjustUnit: String

  """Giá trị điều chỉnh"""
  adjustValue: Float

  """Trạng thái"""
  active: Boolean

  """Loại bảng giá ADJUST_PRICE,QTY_MATRIX"""
  type: String

  """Ma trận khách hàng và số lượng"""
  qtyMatrix: [QtyMatrixInput]
}

input UpdateProductAttributeElementInput {
  id: ID

  """Tên Element"""
  name: String

  """Mã Element"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
  childProductAttributes: [UpdateProductAttributeInput]
}

input UpdateProductAttributeElementTemplateInput {
  """Tên Element"""
  name: String

  """Mã Element"""
  code: String

  """Giá"""
  price: Float

  """Lựa chọn mặc định"""
  isDefault: Boolean
  unit: String
}

input UpdateProductAttributeInput {
  id: ID

  """Tên Attribute"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  productAttributeElements: [UpdateProductAttributeElementInput]
}

input UpdateProductAttributeTemplateInput {
  id: ID

  """Tên Attribute"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int
  productAttributeElements: [UpdateProductAttributeElementTemplateInput]
}

input UpdateProductCommissionPolicyInput {
  name: String
  isActive: Boolean

  """
  Loại hoa hồng COMMISSION_ACCUMULATE,COMMISSION_DIRECT,UNLIMITED_TIER_COMMISSION_DIRECT
  """
  type: String
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [ProductCommissionPolicyRuleInput]
}

input UpdateProductImportingLogInput {
  name: String
}

input UpdateProductInput {
  """Mã của sản phẩm"""
  productCode: String
  name: String

  """Nội dung HTML"""
  content: String
  basePrice: Float
  downPrice: Float

  """Tỷ lệ giảm giá"""
  saleRate: Int
  subtitle: String
  intro: String
  image: String

  """Hình ảnh khác"""
  images: [String]

  """Hình ảnh cover"""
  cover: String
  allowSale: Boolean
  isCrossSale: Boolean
  supplierId: ID
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  crossSaleInventory: Int
  type: String
  smsSyntax: String
  smsPhone: String
  priority: Int
  commission0: Float
  commission1: Float
  commission2: Float
  commission3: Float
  baseCommission: Float
  enabledMemberBonus: Boolean
  enabledCustomerBonus: Boolean
  memberBonusFactor: Int
  customerBonusFactor: Int
  unitId: ID
  weight: Int
  width: Int
  length: Int
  height: Int

  """Hiển thị giá cùng với Attribute rẻ nhất"""
  isDisplayPriceWithCheapestAttribute: Boolean

  """Các topping cho sản phẩm"""
  toppings: [UpdateProductToppingInput]

  """Các thuộc tính cho sản phẩm"""
  productAttributes: [UpdateProductAttributeInput]

  """Điểm đánh giá"""
  rating: Float
  soldQty: Int

  """Mã label"""
  labelIds: [ID]

  """Danh sách tag sản phẩm"""
  productTagIds: [ID]

  """Sản phẩm up sale"""
  upsaleProductIds: [ID]

  """Danh sách Mã danh mục"""
  categoryIds: [ID]

  """Danh sách mã danh mục sản phẩm hệ thống"""
  globalProductCategoryIds: [ID]

  """Số lượng bán giới hạn"""
  limitSale: Int

  """Giới hạn bán trong ngày"""
  limitSaleByDay: Boolean

  """Điểm thưởng"""
  rewardPoint: Int

  """Link video youtube"""
  youtubeLink: String

  """Danh sách các thông số sản phẩm"""
  productSpecs: [CreateAndUpdateProductSpecsInput]

  """Danh sách tab thông tin sản phẩm"""
  productTabs: [CreateAndUpdateProductTabInput]

  """Mã chính sách giá"""
  productPricePolicyId: ID

  """Các key word cho SEO"""
  keywords: String
  barcode: String

  """Đây là giá cố định"""
  isFixedPrice: Boolean
  productCommissionPolicyId: ID
  bulkyTier: BulkyTier
  status: EProductStatus
  productPriceConditions: [ProductPriceConditionInput]

  """Mã Bảng giá"""
  pricePolicyId: ID
}

input UpdateProductLabelInput {
  """Tên nhãn"""
  name: String

  """Màu sắc"""
  color: String
}

input UpdateProductPricePolicyInput {
  name: String
  isActive: Boolean
  reductionType: String
  rules: [ProductPricePolicyRuleInput]
}

input UpdateProductSalesBonusPolicyInput {
  name: String
  isActive: Boolean
  startDate: DateTime
  endDate: DateTime
  settlementDuration: Int
  rules: [ProductSalesBonusPolicyRuleInput]
  advancedRules: [ProductSalesBonusPolicyAdvancedRuleInput]
  ruleToApplyAdvanced: RuleToApplyAdvancedInput
}

input UpdateProductTagInput {
  """Tên tag"""
  name: String

  """Hình ảnh"""
  image: String
}

input UpdateProductToppingInput {
  """Tên Topping"""
  name: String

  """Bắt buộc"""
  required: Boolean

  """Số lượng chọn tối thiểu"""
  min: Int

  """Số lượng chọn tối đa"""
  max: Int

  """Những lựa chọn"""
  options: [ToppingOptionInput]
}

input UpdatePromotionInput {
  imageUrl: String

  """
  Có giới hạn số lượng sử dụng hay không, nếu TRUE thì sẽ quan tâm đên useLimit
  và useLimitByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveUseLimit: Boolean

  """
  Tổng số lượng giới hạn mỗi khách có thể sử dụng, nếu useLimitByDate=false thì
  đây là tổng giới hạn voucher mỗi khách có thể dụng trong xuyên suốt, còn nếu
  useLimitByDate=true thì đây là tổng giới hạn voucher mỗi khách có thể sử dụng
  mỗi ngày  (NUMBER)
  """
  useLimit: Int

  """
  useLimit có phải là giới hạn số lượng voucher mỗi khác theo mỗi ngày hay không (TRUE/FALSE)
  """
  useLimitByDate: Boolean
  name: String
  startDate: DateTime
  endDate: DateTime
  type: PromotionType
  buyConditionType: ConditionType
  offerConditionType: ConditionType
  conditionValueOfOrder: Float
  isActive: Boolean
  buyProducts: [UpdatePromotionProductInput]
  offerProducts: [UpdatePromotionProductInput]
  description: String
  applyType: PricePolicyApplyType

  """
  Có giới hạn số lượng phát hành hay không, nếu TRUE thì sẽ quan tâm đến quantity còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveQuantity: Boolean

  """Tổng phát hành"""
  quantity: Int
  skipPolicies: [EPolicy]
}

input UpdatePromotionProductInput {
  productId: String
  quantity: Int
}

input UpdateQRCodeInput {
  """Trạng thái kích hoạt của QR Code"""
  isActive: Boolean
}

input UpdateQRCodeStageInput {
  """Tên đợt QR Code"""
  name: String

  """Mô tả"""
  description: String

  """Mã sản phẩm"""
  productId: String

  """Trạng thái kích hoạt của đợt QR Code"""
  isActive: Boolean
}

input UpdateRecurringProductCommissionPolicyInput {
  """Tên chính sách"""
  name: String

  """Số kỳ trả thưởng (ví dụ 12)"""
  totalPeriods: Int

  """Loại kỳ: tuần, tháng,..."""
  periodType: ECommissionRecurringPeriodType

  """Chỉ dùng cho kỳ HÀNG THÁNG: ví dụ trả vào ngày 15 hàng tháng"""
  periodTime: Int

  """Số kỳ đầu bỏ qua (vd: 1 để bỏ qua kỳ trả sắp tới)"""
  startAfterPeriods: Int

  """
  Nếu true: BE tự động trả thưởng khi đến kỳ; nếu false: cần admin can thiệp
  """
  isActivated: Boolean

  """
  Nếu true: BE tự động trả thưởng khi đến kỳ; nếu false: cần admin can thiệp
  """
  isAutoPayout: Boolean
  startDate: DateTime
  endDate: DateTime
  rules: [RecurringProductCommissionPolicyRuleInput]
}

input UpdateRecurringProductCommissionPolicyLogInput {
  name: String
}

input UpdateRecurringProductCommissionScheduleInput {
  name: String
}

input UpdateRecurringServiceContractTypeCommissionPolicyInput {
  name: String
  type: ECommissionRuleType
  totalPeriods: Int
  periodType: ECommissionRecurringPeriodType
  periodTime: Int
  startAfterPeriods: Int
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
  isAutoPayout: Boolean
  rules: [CommonCommissionRuleInput]
  specialRules: [SpecialRecurringCommissionPolicyRuleCommonInput]
  periodAllocations: [PeriodCommissionAllocationInput]
}

input UpdateRecurringServiceContractTypeCommissionPolicyLogInput {
  status: ERecurringCommissionStatus
}

input UpdateRecurringServiceContractTypeCommissionScheduleInput {
  isAutoPayout: Boolean
}

input updateRefererForCustomerInput {
  customerId: String!
  affiliateId: String
}

input UpdateReferralCommissionLogDetailInput {
  """Mã cửa hàng"""
  memberId: String

  """Mã lịch sử thưởng giới thiệu"""
  referralCommissionLogId: String

  """Mã nhận người hoa hồng"""
  receiverId: String

  """Mã đối tác người nhận hoa hồng"""
  receiverAffiliateId: String

  """Tên người nhận hoa hồng"""
  receiverName: String

  """Cấp bậc"""
  level: Int

  """Số tiền được nhận"""
  amount: Float
}

input UpdateReferralCommissionLogInput {
  """Mã cửa hàng"""
  memberId: String

  """Mã khách hàng của người giới thiệu"""
  presenterCustomerId: String

  """Mã đối tác của người giới thiệu"""
  presenterAffiliateId: String

  """Tên của người giới thiệu"""
  presenterCustomerName: String

  """Số điện thoại của người giới thiệu"""
  presenterCustomerPhone: String

  """Mã khách hàng của người được giới thiệu"""
  presenteeCustomerId: String

  """Mã đối tác của người được giới thiệu"""
  presenteeAffiliateId: String

  """Tên của người được giới thiệu"""
  presenteeCustomerName: String

  """Số điện thoại của người được giới thiệu"""
  presenteeCustomerPhone: String

  """Trạng thái"""
  status: ReferralCommissionLogStatus
}

input UpdateReferralCommissionPolicyInput {
  """Kích hoạt"""
  isActive: Boolean

  """Thiết lập thưởng giới thiệu"""
  referralRules: [ReferralCommissionPolicyRuleInput]

  """Thiết lập KPI thưởng giới thiệu"""
  kpiRules: [KpiReferralCommissionPolicyInput]
}

input UpdateReferralShopAffiliateRewardMilestoneConfigInput {
  isActivated: Boolean
  referralShopAffiliateRewardMilestones: [UpdateReferralShopAffiliateRewardMilestoneInput]
}

input UpdateReferralShopAffiliateRewardMilestoneInput {
  referralThreshold: Int
  reward: String
  rewardType: EAchievementRewardType
  balanceAwarded: Mixed
}

input UpdateRevenueSharingPolicyInput {
  sharingType: ERevenueSharingType
  sharingValue: Float
  maxValueSharing: Float
  isActivated: Boolean
  applyShopAffiliateId: String
}

input UpdateSaleFeedCommentInput {
  """Nội dung"""
  content: String

  """Hình ảnh"""
  images: [String]
}

input UpdateServiceCartInput {
  serviceContractTypeId: ID
  amount: Int
}

input UpdateServiceContractInput {
  isPaymentToSupplier: String
  startDate: DateTime
  endDate: DateTime
  customerNote: String
  name: String
  canceledReason: String
  totalDiscountAmount: Mixed
  shopBranchId: ID
  staffSaleId: ID
  totalExtraFee: Mixed
  haveIssueInvoice: Boolean
  isActivated: Boolean
  paymentDate: DateTime
  imageUrls: [String]
  status: EServiceContractStatus
  paymentStatus: EServiceContractPaymentStatus
  paymentMethod: EPaymentMethod
  rejectedReason: String
  referrerShopAffiliateCode: String
  serviceContractTypeInServiceContracts: [ServiceContractTypeInServiceContractInput]
}

input UpdateServiceContractTypeCategoryInput {
  priority: Int
  name: String
  description: String
  isActivated: Boolean
  imageUrl: String
  imageUrls: [String]
}

input UpdateServiceContractTypeCommissionPolicyInput {
  name: String
  type: CommissionRuleType
  startDate: DateTime
  endDate: DateTime
  rules: [CommonCommissionRuleInput]
  specialRules: [SpecialCommissionPolicyRuleCommonInput]
  settlementDate: DateTime
  settlementDuration: Int
  isActivated: Boolean
  isActive: Boolean
}

input UpdateServiceContractTypeInput {
  name: String
  description: String
  isActivated: Boolean
  hasNumberSessions: Boolean
  numberSessions: Int
  durationDate: Int
  hasCheckIn: Boolean
  supplierId: ID
  basePrice: Int
  imageUrl: String
  otherImageUrls: [String]
  staffSpecialistIds: [String]
  shopBranchIds: [String]
  customForms: [CustomFormInput]
  customFields: [CustomFieldInput]
  isContactRequired: Boolean
  isFixedPrice: Boolean
  isPriceCalculatedLater: Boolean
  serviceContractTypeCategoryId: ID
  isAllowPaymentToSupplier: Boolean
  isAutoCompletedOnPaid: Boolean
  unitId: ID
  valueAddedTaxRate: Float
  valueAddedTaxRateCode: EInvoiceTaxRateCode
  priceRuleScript: String
}

input UpdateServiceContractTypePricePolicyInput {
  isActivated: Boolean
  name: String
  rules: [ServiceContractTypePricePolicyRuleInput]
  applyCount: Int
}

input UpdateServiceContractTypeSessionLogInput {
  note: String
}

input UpdateServiceInput {
  """Tên dịch vụ"""
  name: String

  """Slug"""
  slug: String

  """ID danh mục dịch vụ"""
  shopServiceCategoryId: String

  """Danh sách ID loại dịch vụ"""
  serviceTagIds: [String]

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String

  """Giá dịch vụ"""
  price: Float

  """Mô tả dịch vụ"""
  description: String

  """Hình ảnh"""
  images: [String]

  """video """
  video: String

  """Loại địa điểm có thể chọ AT_SHOP,AT_RESERVER"""
  availableAddressType: [String]

  """Thời gian tối thiểu để đặt trước: ...... ngày trước ngày hẹn(bắt buộc)"""
  minAdvanceReservationInDay: Int

  """Thiết lập cho phép/không cho phép thay đổi """
  canChangeReservation: Boolean

  """ Thời gian tối thiểu để thay đổi: ...... ngày trước ngày hẹn (bắt buộc)
  """
  minAdvanceReservationChangeInDay: Int

  """Thiết lập cho phép/không chop phép hủy"""
  canCancelReservation: Boolean

  """ Thời gian tối thiểu để hủy: ...... ngày trước ngày hẹn (bắt buộc)"""
  minAdvanceReservationCancelInDay: Int

  """
  Thiết lập chuyên viên phụ trách: cho phép người đặt chọn/không được chọn chuyên viên (bắt buộc)
  """
  canReserverSetSpecialist: Boolean

  """Danh sách ID Chuyên viên"""
  shopServiceSpecialistIds: [String]

  """Danh sách dịch vụ bổ sung"""
  additionalServices: [AdditionalServiceInput]
}

input UpdateServiceReservationByGlobalCustomerInput {
  """ngày hẹn"""
  reservationDate: DateTime

  """Loại địa điểm AT_SHOP,AT_RESERVER"""
  addressType: String

  """Họ và tên người hẹn"""
  reserverFullname: String

  """SDT người hẹn"""
  reserverPhone: String

  """Mã quốc gia (VN,...)"""
  reserverPhoneRegionCode: String

  """ID chi nhánh đặt hẹn"""
  reservationShopBranchId: ID

  """Địa chỉ người đặt hẹn"""
  reservationAddress: PlaceInput

  """ghi chú dịch vụ"""
  note: String

  """ID chuyên viên phụ trách"""
  shopServiceSpecialistId: ID

  """dịch vụ bổ sung"""
  additionalServices: [AdditionalServiceItemInput]

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String
}

input UpdateServiceReservationByMemberInput {
  """Giá cần cập nhật nếu là giá liên hệ"""
  totalPrice: Float

  """Ngày hẹn"""
  reservationDate: DateTime

  """Mã chuyên viên phụ trách"""
  shopServiceSpecialistId: ID

  """Ghi chú"""
  note: String

  """ID chi nhánh đặt hẹn"""
  reservationShopBranchId: ID

  """Loại giá dịch vụ FIXED,CONTACT"""
  servicePriceType: String
}

input UpdateServiceTagInput {
  """Tên tag dịch vụ"""
  name: String

  """Ảnh"""
  image: String
}

input UpdateSettingGroupInput {
  name: String
  desc: String
  readOnly: Boolean
}

input UpdateSettingInput {
  type: String
  name: String
  key: String
  value: Mixed
  isActive: Boolean
  isPrivate: Boolean
  readOnly: Boolean
  groupId: String
}

input UpdateShipmentInput {
  name: String
}

input updateShopAffiliateForAffiliateInput {
  """Mã khách hàng"""
  customerId: String!

  """Mã khách hàng của đối tác"""
  recruitedId: String
  referrerPhoneNumber: String
  referrerCode: String
}

input UpdateShopAffiliateInput {
  isActive: Boolean
  taxCode: String
  referrerPhoneNumber: String
  referrerCode: String
  shopAffiliateLevel: Int
  shopAffiliateLabelIds: [ID]
}

input UpdateShopAffiliateLabelInput {
  name: String
  description: String
  imageUrl: String
  isActivated: Boolean
  shopAffiliateCount: Int
}

input UpdateShopAffiliateLevelDiscountPolicyInput {
  name: String
}

input UpdateShopAffiliateRecurringProductCommissionPolicyInput {
  name: String
}

input UpdateShopAffiliateRecurringServiceContractTypeCommissionPolicyInput {
  name: String
}

input UpdateShopAffiliateRequestInput {
  recruitedId: String
  referrerPhoneNumber: String
  referrerCode: String
  phone: String
  name: String
  email: String
  citizenId: String
  fullAddress: String
  gender: String
  status: ShopAffiliateRequestStatus!
  isPaid: Boolean
  taxCode: String
}

input UpdateShopAffiliateServiceContractTypeCommissionPolicyInput {
  name: String
}

input UpdateShopBranchInput {
  """Mã chi nhánh"""
  code: String

  """Tên chi nhánh"""
  name: String

  """Số điện thoại"""
  phone: String

  """Email liên hệ"""
  email: String

  """Địa chỉ"""
  address: String

  """Mã Phường/xã"""
  wardId: String

  """Mã Quận/huyện"""
  districtId: String

  """Mã Tỉnh/thành"""
  provinceId: String

  """hiệu lực hay không hiệu lực"""
  activated: Boolean

  """Toạ độ"""
  location: Mixed

  """Hình ảnh cover"""
  coverImage: String

  """Mở cửa"""
  isOpen: Boolean

  """Thời gian chuẩn bị"""
  shipPreparationTime: String

  """Khoản cách giao hàng mặc định"""
  shipDefaultDistance: Int

  """Phí giao hàng mặc định"""
  shipDefaultFee: Float

  """Phí ship cộng thêm mỗi km"""
  shipNextFee: Float

  """Phí ship dưới 1 km"""
  shipOneKmFee: Float

  """Bật phí ship dưới 1 km"""
  shipUseOneKmFee: Boolean

  """Ghi chú cho shipper"""
  shipNote: String
  preBookingTimeSlotConfig: ShopBranchPreBookingTimeSlotConfigInput
  operatingTimes: [OperatingTimeInput]
}

input UpdateShopCategoryInput {
  """Tên phân loại"""
  name: String

  """Hình ảnh"""
  image: String

  """Mô tả"""
  desc: String

  """Ưu tiên"""
  priority: Int
}

input UpdateShopCommentInput {
  """Tên người comment"""
  ownerName: String

  """Nội dung bình luận"""
  message: String

  """Điểm đánh giá"""
  rating: Int

  """Trạng thái bình luận PENDING,PUBLIC,HIDDEN"""
  status: String

  """Tag"""
  tags: [ShopTagInput]

  """Hình ảnh"""
  images: [String]
}

input UpdateShopConfigInput {
  """Thời gian chuẩn bị"""
  shipPreparationTime: String

  """Khoản cách giao hàng mặc định"""
  shipDefaultDistance: Int

  """Phí giao hàng mặc định"""
  shipDefaultFee: Float

  """Phí ship cộng thêm mỗi km"""
  shipNextFee: Float

  """Phí ship dưới 1 km"""
  shipOneKmFee: Float

  """Bật phí ship dưới 1 km"""
  shipUseOneKmFee: Boolean

  """Ghi chú cho shipper"""
  shipNote: String

  """Đánh giá sao"""
  rating: Float

  """Số lượng đánh giá"""
  ratingQty: Int

  """Số lượng đã bán"""
  soldQty: Int

  """Tiêu đề Upsale"""
  upsaleTitle: String

  """Màu primary"""
  primaryColor: String

  """Màu accent"""
  accentColor: String

  """Bật tin nhắn đơn hàng"""
  smsOrder: Boolean

  """Bạt tin nhắn OTP"""
  smsOtp: Boolean

  """Bật tin nhắn CTV"""
  smsCol: Boolean

  """Bật / tắt cộng tác viên"""
  collaborator: Boolean

  """Yêu cầu duyệt cộng tác viên"""
  colApprove: Boolean

  """Yêu cầu CTV có số đơn tối thiểu"""
  colMinOrder: Int

  """Tính hoa hồng dựa trên điệu kiên gì """
  colCommissionBy: String

  """Hoa hồng cố định theo % hoặc VND"""
  colCommissionUnit: String

  """Giá trị hoa hồng trên từng đơn hàng"""
  colCommissionValue: Float

  """Điều khoản cộng tác viên"""
  colTerm: String

  """Bật / tắt chuyển khoản ngân hàng qua casso"""
  cassoEnabled: Boolean

  """Bật / tắt thanh toán khi nhận hàng"""
  codEnabled: Boolean

  """Bật / tắt thanh toán momo"""
  momoEnabled: Boolean

  """Bật / tắt thanh toán payon"""
  payonEnabled: Boolean

  """Bật / tắt thanh toán vnpay"""
  vnpayEnabled: Boolean

  """Bật / tắt thanh toán zalo"""
  zalopayEnabled: Boolean

  """Giới hạn số đơn được đặt cùng 1 lúc"""
  limitOpenOrder: Int

  """Giới hạn số sản phẩm trong 1 đơn hàng"""
  limitItem: Int

  """Giới hạn số lần giao hàng thất bại trong 1 đơn hàng"""
  limitDeliveryFail: Int

  """Danh sách tài khoản ngân hàng"""
  banks: [BankInput]

  """Thông tin terminal của MBBank"""
  mbTerminal: MBTerminalInput
  mbEnabled: Boolean
  napasEnabled: Boolean

  """Thông tin chung"""
  intro: String

  """Điều khoản cửa cửa hàng"""
  terms: String

  """Thiết lập tính năng"""
  featureConfig: ShopFeatureConfigInput
  shopPaymentConfig: ShopPaymentConfigInput
  valueAddedTaxConfig: ValueAddedTaxConfigInput
  authenticationCustomerConfig: ShopConfigAuthenticationCustomerInput

  """Cấu hình cho SEO"""
  SEOConfig: SEOConfigInput
  ahamoveConfig: AhamoveConfigInput
  analyticConfig: AnalyticConfigInput
  distributorConfig: DistributorConfigInput

  """Cấu hình tên miền"""
  domainConfig: DomainConfigInput
  grabExpressConfig: GrabExpressConfigInput
  internalDriverConfig: InternalDriverConfigInput
  leaderBoardConfig: LeaderBoardConfigInput
  manychatConfig: ManychatConfigInput
  notifyConfig: NotifyConfigInput
  orderConfig: OrderConfigInput
  rewardPointConfig: RewardPointConfigInput
  salePointConfig: SalePointConfigInput
  banners: [ShopBannerInput]
  productGroups: [ShopProductGroupInput]
  tags: [ShopTagInput]
  SMTPConfig: SMTPConfigInput
  supportConfig: SupportConfigInput
  useRewardPointConfig: UseRewardPointConfigInput
  viettelPostConfig: ViettelPostConfigInput
  wareHouseConfig: WareHouseConfigInput
  webhookConfig: WebhookConfigInput
  zaloConfig: ZaloConfigInput
}

input UpdateShopDisbursementPeriodInput {
  status: String
  startDateReceivingRequest: DateTime
  endDateReceivingRequest: DateTime
  minimumAmountEachRequest: Mixed
  maximumAmountEachRequest: Mixed
  accountingDate: DateTime
  expectedPaymentDate: DateTime
  isWithholdingPersonalIncomeTax: Boolean
  personalIncomeTaxPercent: Int
}

input UpdateShoppingCartInput {
  amount: Float
  note: String
}

input UpdateShoppingWalletConfigInput {
  isActivated: Boolean
  accountTypeApply: EAccountTypeApply
  minimumDeposit: Float
  maximumDeposit: Float
  accumulatedDepositRewardMilestones: [AccumulatedDepositRewardMilestoneInput]
}

input UpdateShopPostInput {
  """Tiêu đề"""
  title: String

  """Đoạn trích"""
  excerpt: String

  """từ khoá"""
  slug: String

  """Trạng thái PUBLIC,DRAFT"""
  status: String

  """Ngày công khai"""
  publishedAt: DateTime

  """Hình đại diện"""
  featureImage: String

  """Mô tả meta tag"""
  metaDescription: String

  """Tiêu đề meta tag"""
  metaTitle: String

  """Nội dung html"""
  content: String

  """Danh sách tag"""
  tagIds: [ID]

  """Mô tả open graph"""
  ogDescription: String

  """Hình ảnh open graph"""
  ogImage: String

  """Tiêu đề open graph"""
  ogTitle: String

  """Mô tả twitter"""
  twitterDescription: String

  """Hình ảnh twitter"""
  twitterImage: String

  """Tiêu đề twitter"""
  twitterTitle: String

  """Độ ưu tiên"""
  priority: Int

  """Danh sách chủ đề"""
  topicIds: [String]

  """Các key word cho SEO"""
  keywords: String
  accountTypeDisplay: EAccountTypeDisplayPost
}

input UpdateShopPostTagInput {
  """Tên tag"""
  name: String

  """Từ khoá"""
  slug: String

  """Mô tả"""
  description: String

  """Mã màu"""
  accentColor: String

  """Hình ảnh đại diện"""
  featureImage: String
}

input UpdateShopSaleFeedInput {
  """Tên bản tin"""
  name: String

  """Mô tả ngắn"""
  snippet: String

  """Hướng dẫn"""
  tips: String

  """Nội dung"""
  contents: [SaleFeedContentInput]

  """Mã sản phẩm"""
  productId: ID

  """Trạng thái"""
  active: Boolean

  """Ưu tiên"""
  priority: Int

  """Công khai"""
  isPublic: Boolean
}

input UpdateShopServiceCategoryInput {
  """Tên danh mục dịch vụ"""
  name: String
}

input UpdateShopServiceSpecialistInput {
  """Tên"""
  name: String

  """avatar"""
  avatar: String

  """SDT quốc tế"""
  phone: String

  """Mã quốc gia (VD: VN...)"""
  regionCode: String

  """Email"""
  email: String

  """Danh sách ID Chuyên môn phụ trách"""
  shopServiceCategoryIds: [String]

  """Địa chỉ - số nhà và tên đường nhập ở field street"""
  address: PlaceInput
}

input UpdateShopTableInput {
  name: String
  code: String

  """Id chi nhanh"""
  branchId: ID
}

input UpdateShopTopicInput {
  """Tên chủ đề"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

input UpdateShopVideoInput {
  """Tên video"""
  name: String

  """Link video"""
  link: String

  """Link thumbnail"""
  thumbnail: String

  """Mô tả"""
  description: String

  """Kích hoạt"""
  active: Boolean

  """Ưu tiên"""
  priority: Int
}

input UpdateShopVoucherInput {
  """Mô tả"""
  description: String

  """Kích hoạt"""
  isActive: Boolean
  applyForOrder: EShopVoucherApplyForOrder

  """
  Có giới hạn số lượng phát hành hay không, nếu TRUE thì sẽ quan tâm đến
  issueNumber và issueByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveIssueNumber: Boolean

  """
  Tổng số lượng phát hành , nếu issueByDate=false thì đây sẽ tổng số lượng phát
  hành xuyên suốt, còn nếu issueByDate=true thì đây sẽ tổng số lượng phát hành
  theo từng ngày(NUMBER)
  """
  issueNumber: Int

  """issueNumber có phải là phát hành theo từng ngày hay không (TRUE/FALSE)"""
  issueByDate: Boolean

  """
  Có giới hạn số lượng sử dụng hay không, nếu TRUE thì sẽ quan tâm đên useLimit
  và useLimitByDate còn nếu FALSE thì là vô hạn (TRUE/FALSE)
  """
  haveUseLimit: Boolean

  """
  Tổng số lượng giới hạn mỗi khách có thể sử dụng, nếu useLimitByDate=false thì
  đây là tổng giới hạn voucher mỗi khách có thể dụng trong xuyên suốt, còn nếu
  useLimitByDate=true thì đây là tổng giới hạn voucher mỗi khách có thể sử dụng
  mỗi ngày  (NUMBER)
  """
  useLimit: Int

  """
  useLimit có phải là giới hạn số lượng voucher mỗi khác theo mỗi ngày hay không (TRUE/FALSE)
  """
  useLimitByDate: Boolean

  """Đơn vị giảm giá"""
  discountUnit: String

  """Giá trị giảm giá"""
  discountValue: Float

  """Giảm giá tối đa"""
  maxDiscount: Float

  """Sản phẩm quà tặng"""
  offerItems: [OfferItemInput]

  """Sản phẩm quà tặng"""
  offerItemGroups: [[OfferItemInput]]

  """Sản phẩm theo nhóm 2"""
  offerItemGroups2: [OfferItemGroupInput]

  """Sản phẩm giảm giá"""
  discountItems: [DiscountItemInput]

  """Các sản phẩm áp dụng"""
  applyItemIds: [String]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyItem: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyItem: Boolean

  """Các sản phẩm không áp dụng"""
  exceptItemIds: [String]

  """Các dịch vụ áp dụng"""
  applyServiceContractTypeIds: [ID]

  """Bắt buốc phải có hết sản phẩm áp dụng"""
  requireAllApplyServiceContractType: Boolean

  """Chỉ áp dụng sản phẩm trong danh sách áp dụng"""
  onlyApplyServiceContractType: Boolean

  """Các sản phẩm không áp dụng"""
  exceptServiceContractTypeIds: [ID]

  """Tổng tiền hàng tối thiểu"""
  minSubtotal: Float

  """Phương thức thanh toán áp dụng"""
  applyPaymentMethods: [String]

  """Số lượng sản phẩm tối thiểu"""
  minItemQty: Int

  """Ngày bắt đầu"""
  startDate: DateTime

  """Ngày kết thúc"""
  endDate: DateTime

  """Mã giảm giá riêng tư"""
  isPrivate: Boolean

  """Mã giảm giá chỉ dành cho tặng cá nhân"""
  isPersonal: Boolean

  """Hình ảnh"""
  image: String

  """Nội dung html"""
  content: String

  """Đồng giá"""
  samePrice: Float

  """Áp dụng tất cả sản phẩm"""
  offerAllItem: Boolean

  """Số lượng tặng"""
  offerQty: Int

  """Ưu tiên sản phẩm giá cao"""
  offerHighestPrice: Boolean

  """Tụ động thêm sản phẩm ưu đãi"""
  autoAddOfferItem: Boolean

  """Ngày trong tuần áp dụng : từ 1-7 với 1=Thứ 2, 7= Chủ nhật"""
  applyISODayOfWeek: [Int]

  """Khung giờ áp dụng, [ ['HH:mm:ss','HH:mm:ss'] ]"""
  applyTimeOfDay: [[String]]
  skipPolicies: [EPolicy]
  applyType: PricePolicyApplyType
}

input UpdateShopVoucherSharingPolicyInput {
  name: String
  isActivated: Boolean
  startDate: DateTime
  endDate: DateTime
}

input UpdateSignatureRegistrationRequestInput {
  paymentStatus: ESignatureRegistrationRequestPaymentStatus
}

input UpdateSpecsTemplateInput {
  name: String
  specs: [SpecInput]
}

input UpdateStaffInput {
  """Email đăng nhập"""
  username: String

  """Tên nhân viên"""
  name: String

  """Điện thoại nhân viên"""
  phone: String

  """Ảnh đại diện"""
  avatar: String
  branchId: ID

  """Mã chi nhánh"""
  shopBranchIds: [ID]

  """Danh sách phân quyền REPORT,MANAGER,BRANCH,WAREHOUSE,ORDER"""
  scopes: [String]
}

input UpdateStaffPermissionInput {
  permissions: [StaffPermissionGroupInput]
}

input UpdateSubscriptionMinigameInput {
  isActive: Boolean
  applicationId: String
  name: String
  description: String
  shortDescription: String
  price: Int
  image: String
  durationOfDay: Int
  index: Int
}

input UpdateSubscriptionPackageInput {
  """Mã gói"""
  code: String

  """Tên gói"""
  name: String

  """Mô tả"""
  desc: String

  """Giá bán"""
  sellPrice: Float

  """Giá gốc"""
  basePrice: Float

  """Tính năng"""
  features: [PackageFeatureInput]

  """Đường dẫn"""
  url: String

  """Số tháng"""
  month: Int

  """Kích hoạt"""
  active: Boolean
}

input UpdateSupplierInput {
  isActivated: Boolean
  phone: String
  name: String
  code: String
  imageUrl: String
  address: String
  note: String
  taxCode: String
  shopBranchId: ID
  memberId: ID
  paymentConfig: SupplierPaymentConfigInput
}

input UpdateSupportTicketCommentInput {
  """Nội dung"""
  message: String

  """Hình ảnh"""
  images: [String]
}

input UpdateSupportTicketInput {
  """Nội dung yêu cầu"""
  name: String

  """Mô tả chi tiết"""
  desc: String

  """Danh sách hình ảnh"""
  images: [String]
}

input UpdateTabInput {
  """Tên tab thông tin sản phẩm"""
  name: String

  """Độ ưu tiên"""
  priority: Int
}

input UpdateTableInput {
  shopBranchId: ID
  name: String
  description: String
  seatNumber: Int
  status: ETableStatus
}

input UpdateTascoInsuranceConfigInput {
  username: String
  password: String
  organizationKey: String
  productListKey: String
  host: String
  encryptKey: String
}

input UpdateTaskInput {
  name: String
  description: String
  rewardType: ERewardType
  rewardAmount: Mixed
  rewardText: String
  isRecurring: Boolean
  isEnabled: Boolean
  promotionId: ID
  shopVoucherId: ID
  imageUrl: String
}

input UpdateTaskLogInput {
  isRewarded: Boolean
  rewardImageUrls: [String]
}

input UpdateTemplateConfigBannerInput {
  type: ETemplateConfigBannerType
  imageUrl: String
  pageDisplay: ETemplatePage
  priority: Int
  title: TemplateConfigItemInput
  content: TemplateConfigItemInput
  button: TemplateConfigItemInput
  isActivated: Boolean
  link: String
}

input UpdateTemplateConfigInput {
  templateType: ETemplateType
  banners: [TemplateBannerInput]
  logo: String
  primaryColor: String
  accentColor: String
  font: String
  googleAnalyticsId: String
  email: String
  address: String
  companyAddress: String
  hotline: String
  taxCode: String
  workingTime: [String]
  facebookUrl: String
  facebookId: String
  zaloUrl: String
  googleMapUrl: String
  platformUrlConfig: PlatformUrlConfigInput
  metaDescription: [String]
  iconTab: String
  backgroundFooterImgUrl: String
  data: String
  homePage: TemplateHomePageConfigInput
  features: [TemplateFeatureInput]
  userManuals: [TemplateUserManualInput]
  verifyList: [TemplateVerifyListInput]
  logoSecond: String
  isLogin: Boolean
  section: TemplateSectionInput
  copyright: String
  keywords: [String]
  shopReviews: [TemplateShopReviewInput]
  contact: TemplateConfigContactInput
  footer: TemplateConfigFooterInput
  header: TemplateHeaderConfigInput
  pageConfig: TemplateConfigPageInput
  productMenu: [TemplateConfigProductMenuItemInput]
  relatedTradeMark: TemplateConfigRelatedTradeMarkInput
  seo: [String]
  seoObject: TemplateSeoInput
  defaultSeo: TemplateSeoInput
}

input UpdateThreadInput {
  """Danh sách mã nhãn"""
  threadLabelIds: [ID]
}

input UpdateThreadLabelInput {
  """Tên nhãn"""
  name: String

  """Màu sắc"""
  color: String
}

input UpdateThreadNoteInput {
  """Nội dung"""
  text: String

  """Đính kèm"""
  attachment: String
}

input UpdateTopicInput {
  """Đánh dấu ẩn"""
  isHidden: Boolean

  """Tên chủ đề"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Nhóm"""
  group: String
}

input UpdateTopLeaderBoardBonusLogInput {
  isRewarded: Boolean
  rewardImageUrls: [String]
}

input UpdateTopLeaderBoardBonusMilestoneInput {
  id: ID
  top: Int
  amountRequireGreater: Int
  reward: String
  rewardType: EAchievementRewardType
  balanceAwarded: Int
  topLeaderBoardBonusPolicyId: ID
}

input UpdateTopLeaderBoardBonusPolicyInput {
  isActivated: Boolean
  hoursUntilReward: Int
  topLeaderBoardBonusMilestones: [UpdateTopLeaderBoardBonusMilestoneInput]
}

input UpdateTriggerGroupInput {
  """Tên nhóm trigger"""
  name: String

  """Mô tả"""
  description: String

  """Danh sách trigger"""
  triggerIds: [ID]
}

input UpdateTriggerInput {
  """Mã trigger"""
  code: String

  """Tên trigger"""
  name: String

  """Kích hoạt"""
  active: Boolean

  """Sự kiện kích hoạt"""
  event: String

  """Hành động"""
  actions: [Mixed]

  """Nhóm trigger"""
  triggerGroupId: ID
}

input UpdateUnitInput {
  name: String
  isActivated: Boolean
}

input UpdateUserInput {
  name: String
  phone: String
  address: String
  avatar: String
  provinceId: String
  districtId: String
  wardId: String

  """ADMIN|SUPER_ADMIN|EDITOR"""
  role: String
}

input UpdateVacomConfigInput {
  isActivated: Boolean
  baseUnitCode: String
  defaultAccounts: DefaultAccountsInput
}

input UpdateVoucherGroupMinigameInput {
  description: String
  name: String
  image: String
  expirationType: EVoucherGroupExpirationTypeMinigame
  usageType: EVoucherUsageTypeMinigame
  totalUsage: Int
  hasLimitUsagePerDay: Boolean
  limitUsagePerDay: Int
  type: EVoucherGroupTypeMinigame
}

input UpdateWarehouseProductAuditInput {
  auditDate: DateTime
  status: EWarehouseProductAuditStatus
  notes: String
  imageUrls: [String]
}

input UpdateWarehouseProductAuditItemInput {
  actualProcessableStockCount: Int
  adjustmentPrice: Float
  adjustmentDiscount: Float
  notes: String
  isCorrect: Boolean
}

input UpdateWarehouseProductHistoryInput {
  name: String
}

input UpdateWeatherInput {
  name: String
  regionId: String
  state: String
}

input UpdateWriterGroupInput {
  """Tên đơn vị đăng tin"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Độ ưu tiên"""
  priority: Int

  """Danh sách ID chủ đề """
  topicIds: [String]
}

input UpdateWriterInput {
  """Họ và tên"""
  name: String

  """Ảnh đại diện"""
  avatar: String

  """Sô điện thoại"""
  phone: String

  """Mã quốc gia (VN,...)"""
  regionCode: String

  """Địa chỉ liên hệ"""
  address: PlaceInput

  """ID đơn vị đăng tin - writerGroup"""
  groupId: ID
}

input UpdateWriterNotificationInput {
  """Mã bài viết"""
  postId: String!

  """Trạng thái bài viết APPROVED,REJECTED"""
  approveStatus: String!

  """Lý do từ chối"""
  reason: String

  """Mã tác giả"""
  writerId: String

  """Trạng thái đã xem"""
  seen: Boolean
}

input UpdateWriterSelfInput {
  """Họ tên"""
  name: String!

  """Email"""
  email: String

  """Avatar"""
  avatar: String

  """Địa chỉ"""
  address: PlaceInput
}

input UpdateYoutubeVideoGroupInput {
  """Tên nhóm"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """nhóm"""
  group: String

  """Độ ưu tiên"""
  priority: Int
}

input UpdateYoutubeVideoInput {
  """Kích hoạt hiển thị"""
  active: Boolean
}

input UpdateZaloMiniAppConfigInput {
  UISetting: UISettingZaloMiniAppConfigInput
  shopZaloMiniAppConfig: ShopZaloMiniAppConfigInput
  code: String
  name: String
  zaloMiniAppId: String
  isActivated: Boolean
}

input UpdateZaloMiniAppShopDisplayConfigInput {
  zaloMiniAppConfigId: ID
  memberId: ID
}

input UpdateZaloOASendMessageSettingInput {
  name: String
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  content: String
  imageUrls: [String]
  isActivated: Boolean
}

input UpdateZaloOaSendMessageSettingMinigameInput {
  isActive: Boolean
  type: ENotificationSettingType
  triggerType: EMinigameNotificationTriggerType
  imageUrl: String
  content: String
}

input UpdateZaloOASettingInput {
  name: String
}

input UpdateZaloShopConfigInput {
  applicationId: String
  applicationSecret: String
  privateKey: String
  isActivated: Boolean
  apiKey: String
  zaloMiniAppPrivateKey: String
}

input UpdateZaloUidInput {
  name: String
}

type UrlInvoiceInformationRequestData {
  url: String
  qrExpiryHours: Int
  expiredAt: DateTime
  showInvoiceRequestQR: Boolean
}

input UrlInvoiceInformationRequestInput {
  orderId: ID
  serviceContractId: ID
}

type UrlTrackingOrderInvoiceData {
  url: String
  trackingCode: String
}

type User {
  id: String
  uid: String
  email: String
  name: String
  phone: String
  address: String
  avatar: String
  province: String
  district: String
  ward: String
  provinceId: String
  districtId: String
  wardId: String

  """ADMIN|SUPER_ADMIN|EDITOR"""
  role: String
  unseenNotify: Int
  createdAt: DateTime
  updatedAt: DateTime

  """Mã PSID fanpage chính"""
  psid: Mixed
  subscriber: SubscriberInfo
}

type UserAccessLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  customerId: String
  globalCustomerId: String
  memberId: String
  platform: EPlatform
}

type UserAccessLogPageData {
  data: [UserAccessLog]
  total: Int
  pagination: Pagination
}

type UseRewardPointConfig {
  """Tính điểm thưởng theo đơn hay sản phẩm FIXED,ALL"""
  useRewardPointBy: String

  """Giá trị điểm quy đổi trên 1000"""
  value: Int
}

input UseRewardPointConfigInput {
  """Tính điểm thưởng theo đơn hay sản phẩm FIXED,ALL"""
  useRewardPointBy: String

  """Giá trị điểm quy đổi trên 1000"""
  value: Int
}

type UserPageData {
  data: [User]
  total: Int
  pagination: Pagination
}

input UserUpdateMeInput {
  name: String
  phone: String
  address: String
  avatar: String
  provinceId: String
  districtId: String
  wardId: String

  """ADMIN|SUPER_ADMIN|EDITOR"""
  role: String
}

type VacomConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  isActivated: Boolean

  """ID của thành viên liên kết"""
  memberId: String

  """Mã đơn vị cơ sở (DVCS)"""
  baseUnitCode: String

  """ID của cơ quan liên kết"""
  agencyId: String

  """Tài khoản kế toán mặc định"""
  defaultAccounts: DefaultAccounts
}

type VacomConfigPageData {
  data: [VacomConfig]
  total: Int
  pagination: Pagination
}

type validAndMessage {
  valid: Boolean

  """Thông tin trả về"""
  message: String
}

type ValueAddedTaxConfig {
  isActivated: Boolean
  defaultValueAddedTaxRate: Float
  defaultValueAddedTaxRateCode: EInvoiceTaxRateCode
}

input ValueAddedTaxConfigInput {
  isActivated: Boolean
  defaultValueAddedTaxRate: Float
  defaultValueAddedTaxRateCode: EInvoiceTaxRateCode
}

type ValueUnit {
  value: Mixed
  unit: String
}

input ValueUnitInput {
  value: Mixed
  unit: String
}

type ViettelPostConfig {
  viettelPostUserId: Int
  email: String
  phone: String
  name: String
  address: String
  password: String
  isPersonalAccount: Boolean
  viettelPostWardsId: Int
  approvalServices: [String]
}

input ViettelPostConfigInput {
  email: String
  phone: String
  name: String
  address: String
  password: String
  isPersonalAccount: Boolean
  viettelPostWardsId: Int
  approvalServices: [String]
}

type ViettelPostService {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceCode: String
  serviceName: String
  description: String
  isExtendService: Boolean
  codeExtendServices: [String]
  type: Int
  viettelPostExtendServices: [ViettelPostService]
}

type ViettelPostServicePageData {
  data: [ViettelPostService]
  total: Int
  pagination: Pagination
}

type ViettelPostStore {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  serviceCode: String
  serviceName: String
  description: String
  isExtendService: Boolean
  codeExtendServices: [String]
  type: Int
  viettelPostExtendServices: [ViettelPostStore]
}

type ViettelPostStorePageData {
  data: [ViettelPostStore]
  total: Int
  pagination: Pagination
}

type VoucherGroupMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  description: String
  name: String
  image: String
  applicationId: String
  merchantId: String
  prefix: String
  startOfDate: DateTime
  endOfDate: DateTime
  expirationOfDay: Int
  value: Mixed
  minigameId: String
  minigameName: String
  minigameEndDate: DateTime
  isActive: Boolean
  releaseCount: Int
  awardedCount: Int
  usedCount: Int
  isMinigameDeleted: Boolean
  expirationType: EVoucherGroupExpirationTypeMinigame
  usageType: EVoucherUsageTypeMinigame
  totalUsage: Int
  hasLimitUsagePerDay: Boolean
  limitUsagePerDay: Int
  type: EVoucherGroupTypeMinigame
  voucherGroupId: String
}

type VoucherGroupMinigamePageData {
  data: [VoucherGroupMinigame]
  total: Int
  pagination: Pagination
}

type VoucherMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: String
  isActive: Boolean
  applicationId: String
  merchantId: String
  name: String
  phone: String
  code: String
  releasedAt: String
  awardedAt: String
  usedAt: String
  status: String
  startOfDate: String
  endOfDate: String
  minigameId: String
  groupId: String
  minigameRewardId: String
  referralCode: String
  referralPlayerPhone: String
  referralPlayerId: String
}

type VoucherMinigamePageData {
  data: [VoucherMinigame]
  total: Int
  pagination: Pagination
}

type VoucherOrder {
  voucherId: ID
  qty: Int
  discount: Float
  voucher: ShopVoucher
}

type Wallet {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  walletType: EWalletType
  totalBalance: Mixed
  balancePendingWithdrawal: Mixed
  balanceAvailable: Mixed
  balanceWithdrawn: Mixed
  totalDepositBalance: Mixed
  shopAffiliateId: ID
  affiliateId: ID
  customerId: ID
  globalCustomerId: ID
  memberId: ID
}

type WalletBalance {
  id: Mixed
  balance: Mixed
  totalBalance: Mixed
  balancePendingWithdrawal: Mixed
  balanceAvailable: Mixed
  balanceWithdrawn: Mixed
  totalDepositBalance: Mixed
}

type WalletPageData {
  data: [Wallet]
  total: Int
  pagination: Pagination
}

type WalletTransaction {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  walletType: EWalletType

  """Mã giao dịch"""
  code: String

  """Mã ví"""
  walletId: String

  """
  Loại giao dịch
  """
  type: String

  """Số tiền"""
  amount: Float

  """Ghi chú"""
  note: String

  """log"""
  log: String

  """Thông tin bổ sung"""
  extra: Mixed

  """Mã ví nguồn"""
  fromWalletId: ID

  """Mã ví đích"""
  toWalletId: ID
  sourceWalletTransactionId: ID
  targetBankAccount: String
  targetBankAccountNumber: String
  targetBankAccountName: String
  depositMethod: EDepositMethod
  targetShopAffiliateId: ID
  targetCustomerId: ID
  targetGlobalCustomerId: ID
  targetCustomer: Customer
  targetShopAffiliate: ShopAffiliate
  targetGlobalCustomer: GlobalCustomer
  memberId: ID
}

type WalletTransactionPageData {
  data: [WalletTransaction]
  total: Int
  pagination: Pagination
}

type WardData {
  id: String
  ward: String
}

type Warehouse {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  memberId: String
  branchId: String
  member: Member
  branch: ShopBranch
}

type WareHouseConfig {
  isActivated: Boolean
}

input WareHouseConfigInput {
  isActivated: Boolean
}

type WarehousePageData {
  data: [Warehouse]
  total: Int
  pagination: Pagination
}

type WarehouseProduct {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên sản phẩm"""
  name: String

  """Mã sản phẩm"""
  productCode: String

  """Mã nhà kho"""
  warehouseId: String

  """Mã cửa hàng"""
  memberId: String

  """Mã chi nhánh"""
  branchId: String

  """Mã sản phẩm"""
  productId: String

  """Mã danh mục sản phẩm"""
  categoryId: String

  """Tổng tồn kho  importCount - exportCount  """
  inStockCount: Int

  """
  Tổng tồn kho có thể xử lý inStockCount - inProcessCount - deliveryPendingCount
  """
  processableStockCount: Int

  """
  Số lượng sản phẩm đang chờ xử lý,  PAYMENT_CONFIRMED , CONFIRMED , SORT_ORDER, PACKAGED
  """
  inProcessCount: Int

  """*Số lượng sản phẩm đang chờ giao DELIVERY_PENDING """
  deliveryPendingCount: Int

  """Số lượng sản phẩm đã nhập """
  importCount: Int

  """Số lượng sản phẩm đã xuất """
  exportCount: Int

  """Thông tin cửa hàng"""
  member: Member

  """Thông tin chi nhánh"""
  branch: ShopBranch

  """Thông tin sản phẩm"""
  product: Product

  """Số lượng sản phẩm đã xuất"""
  outStockCount: Int

  """Tổng tiền theo phiếu nhập"""
  amountByImportInventoryVoucher: Float

  """Tổng tiền theo phiếu xuất"""
  amountByExportInventoryVoucher: Float
}

type WarehouseProductAudit {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  code: String
  shopBranchId: ID
  shopBranch: ShopBranch
  warehouseId: ID
  auditDate: DateTime
  status: EWarehouseProductAuditStatus
  staffId: ID
  staff: Staff
  memberId: ID
  member: Member
  imageUrls: [String]
  notes: String
  totalWarehouseProductAuditItemCount: Int
  totalWarehouseProductAuditItemChangeCount: Int
}

type WarehouseProductAuditItem {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  warehouseProductAuditId: ID
  warehouseProductAuditItemStatus: EWarehouseProductAuditStatus
  warehouseId: ID
  warehouseProductId: ID
  shopBranchId: ID
  productId: ID
  product: Product
  productName: String
  productCode: String
  processableStockCount: Int
  deliveryPendingCount: Int
  inStockCount: Int
  inProcessCount: Int
  importCount: Int
  exportCount: Int
  actualProcessableStockCount: Int
  actualImportCount: Int
  actualExportCount: Int
  notes: String
  isChecked: Boolean
  isCorrect: Boolean
  adjustmentPrice: Float
  adjustmentDiscount: Float
  staffId: ID
  memberId: ID
  inventoryVoucherId: ID
}

type WarehouseProductAuditItemPageData {
  data: [WarehouseProductAuditItem]
  total: Int
  pagination: Pagination
}

type WarehouseProductAuditLog {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  inventoryVoucherType: EWarehouseProductAuditInventoryVoucherType
  actionType: EWarehouseProductAuditLogActionType
  warehouseProductAuditId: ID
  inventoryVoucherId: ID
  code: String
  memberId: ID
  member: Member
  actionRole: EWarehouseProductAuditLogActionRole
  staffId: ID
  staff: Staff
}

type WarehouseProductAuditLogPageData {
  data: [WarehouseProductAuditLog]
  total: Int
  pagination: Pagination
}

type WarehouseProductAuditPageData {
  data: [WarehouseProductAudit]
  total: Int
  pagination: Pagination
}

type WarehouseProductHistory {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type WarehouseProductHistoryPageData {
  data: [WarehouseProductHistory]
  total: Int
  pagination: Pagination
}

type WarehouseProductPageData {
  data: [WarehouseProduct]
  total: Int
  pagination: Pagination
}

type Weather {
  id: String
  name: String
  regionId: String
  state: String
  location: Mixed
  base: String
  current: Mixed
  minutely: Mixed
  hourly: Mixed
  daily: Mixed
  createdAt: DateTime
  updatedAt: DateTime
}

type WeatherPageData {
  data: [Weather]
  total: Int
  pagination: Pagination
}

type WebhookConfig {
  webhookUrl: String
  isActivated: Boolean
}

input WebhookConfigInput {
  webhookUrl: String
  isActivated: Boolean
}

type Writer {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Số điện thoại quốc tế"""
  internationalPhone: String

  """Email đăng nhập"""
  email: String

  """Họ và tên"""
  name: String

  """Ảnh đại diện"""
  avatar: String

  """Sô điện thoại"""
  phone: String @deprecated(reason: "This field is deprecated, and will be delete soon. Use internationalPhone instead")

  """Địa chỉ liên hệ"""
  address: Place

  """ID đơn vị đăng tin - writerGroup"""
  groupId: ID
  group: WriterGroup
}

type WriterGroup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên đơn vị đăng tin"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """Độ ưu tiên"""
  priority: Int

  """Danh sách ID chủ đề """
  topicIds: [String]
  topics: [Topic]
}

type WriterGroupPageData {
  data: [WriterGroup]
  total: Int
  pagination: Pagination
}

type WriterLoginData {
  writer: Writer
  token: String
}

type WriterNotification {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Mã bài viết"""
  postId: String!

  """Bài viết"""
  post: Post

  """Trạng thái bài viết APPROVED,REJECTED"""
  approveStatus: String!

  """Lý do từ chối"""
  reason: String

  """Mã tác giả"""
  writerId: String

  """Trạng thái đã xem"""
  seen: Boolean

  """Thời gian đã xem"""
  seenAt: DateTime
}

type WriterNotificationPageData {
  data: [WriterNotification]
  total: Int
  pagination: Pagination
}

type WriterPageData {
  data: [Writer]
  total: Int
  pagination: Pagination
}

type YoutubeVideo {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Kích hoạt hiển thị"""
  active: Boolean

  """Mã video"""
  videoId: String

  """Tiêu đề"""
  title: String

  """Mô tả"""
  description: String

  """Hình thumbnail"""
  thumb: String

  """Ngày đăng"""
  published: DateTime

  """Mã chủ đề"""
  groupId: ID

  """Chủ đề"""
  group: YoutubeVideoGroup
}

type YoutubeVideoGroup {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Tên nhóm"""
  name: String

  """slug"""
  slug: String

  """Hình ảnh"""
  image: String

  """nhóm"""
  group: String

  """Độ ưu tiên"""
  priority: Int
}

type YoutubeVideoGroupPageData {
  data: [YoutubeVideoGroup]
  total: Int
  pagination: Pagination
}

type YoutubeVideoPageData {
  data: [YoutubeVideo]
  total: Int
  pagination: Pagination
}

type ZaloConfig {
  """Kích hoạt"""
  active: Boolean

  """Trạng thái kết nối connected,disconnect"""
  status: String

  """Thông tin OA"""
  oaInfo: Mixed

  """Sự kiện follow OA"""
  eventFollowOA: Mixed
}

input ZaloConfigInput {
  """Kích hoạt"""
  active: Boolean

  """Sự kiện follow OA"""
  eventFollowOA: Mixed
}

type ZaloMiniAppConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime

  """Thiết lập hiển thị giao diện sàn"""
  UISetting: UISettingZaloMiniAppConfig

  """Thiết lập chi tiết cửa hàng"""
  shopZaloMiniAppConfig: ShopZaloMiniAppConfig
  code: String
  name: String
  zaloMiniAppId: String
  isActivated: Boolean
  memberId: ID
  agencyId: ID
  ownerType: EZaloShopOwnerType
}

type ZaloMiniAppConfigPageData {
  data: [ZaloMiniAppConfig]
  total: Int
  pagination: Pagination
}

type ZaloMiniAppShopDisplayConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  zaloMiniAppConfigId: ID
  memberId: ID
  member: Member
  agencyId: ID
  isActivated: Boolean
}

type ZaloMiniAppShopDisplayConfigPageData {
  data: [ZaloMiniAppShopDisplayConfig]
  total: Int
  pagination: Pagination
}

type ZaloOaData {
  zaloOaId: String
  userIsFollower: Boolean
}

type ZaloOAInformation {
  oaId: String
  name: String
  description: String
  isVerified: Boolean
  oaType: Int
  cateName: String
  numFollower: Int
  avatar: String
  cover: String
  packageName: String
  packageValidThroughDate: String
  packageAutoRenewDate: String
  linkedZca: String
}

type ZaloOASendMessageSetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  type: ENotificationSettingType
  triggerType: ENotificationTriggerType
  memberId: ID
  agencyId: ID
  ownerType: EZaloShopOwnerType
  content: String
  imageUrls: [String]
  isActivated: Boolean
}

type ZaloOaSendMessageSettingMinigame {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  isActive: Boolean
  applicationId: String
  type: ENotificationSettingType
  triggerType: EMinigameNotificationTriggerType
  imageUrl: String
  content: String
}

type ZaloOaSendMessageSettingMinigamePageData {
  data: [ZaloOaSendMessageSettingMinigame]
  total: Int
  pagination: Pagination
}

type ZaloOASendMessageSettingPageData {
  data: [ZaloOASendMessageSetting]
  total: Int
  pagination: Pagination
}

type ZaloOASetting {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
  zaloOAInformation: ZaloOAInformation
}

type ZaloOASettingPageData {
  data: [ZaloOASetting]
  total: Int
  pagination: Pagination
}

type ZaloShopConfig {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  applicationId: String
  applicationSecret: String
  privateKey: String
  isConnecting: Boolean
  isConnectingZaloOA: Boolean
  apiKey: String
  isActivated: Boolean
  memberId: ID
  agencyId: ID
  ownerType: EZaloShopOwnerType
  zaloMiniAppPrivateKey: String
  zaloOAInformation: ZaloOAInformation
}

type ZaloShopConfigPageData {
  data: [ZaloShopConfig]
  total: Int
  pagination: Pagination
}

type ZaloUid {
  id: String
  createdAt: DateTime
  updatedAt: DateTime
  name: String
}

type ZaloUidPageData {
  data: [ZaloUid]
  total: Int
  pagination: Pagination
}

